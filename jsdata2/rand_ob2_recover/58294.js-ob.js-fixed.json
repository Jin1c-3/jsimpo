{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "description"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "This tests that a constant folding on a node that has obviously mispredicted type doesn't send the compiler into an infinite loop.",
                                "raw": "'This\\x20tests\\x20that\\x20a\\x20constant\\x20folding\\x20on\\x20a\\x20node\\x20that\\x20has\\x20obviously\\x20mispredicted\\x20type\\x20doesn\\x27t\\x20send\\x20the\\x20compiler\\x20into\\x20an\\x20infinite\\x20loop.'"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "foo"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2b6a80"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x250c74"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1720ad"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 4000,
                                    "raw": "0xfa0"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x150e38"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x250c74"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x1720ad"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x2b6a80"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xa12fad"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ForStatement",
                        "init": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "_0x24e8f0"
                                    },
                                    "init": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                }
                            ],
                            "kind": "var"
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x24e8f0"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1000,
                                "raw": "0x3e8"
                            }
                        },
                        "update": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x24e8f0"
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "ExpressionStatement",
                            "expression": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0xa12fad"
                                },
                                "prefix": false
                            }
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x150e38"
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "_0xa12fad"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x53b4"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x1d602b"
                },
                {
                    "type": "Identifier",
                    "name": "_0xb0d518"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x53b4"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x535d0e"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x53b4e3"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x535d0e"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x535d0e"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 279,
                                                                "raw": "0x117"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x5c207f"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x535d"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x535d0e"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x5c207f"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x53b4"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1d602b"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xb0d518"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ForStatement",
            "init": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ],
                "kind": "var"
            },
            "test": {
                "type": "BinaryExpression",
                "operator": "<",
                "left": {
                    "type": "Identifier",
                    "name": "i"
                },
                "right": {
                    "type": "Literal",
                    "value": 5,
                    "raw": "0x5"
                }
            },
            "update": {
                "type": "UpdateExpression",
                "operator": "++",
                "argument": {
                    "type": "Identifier",
                    "name": "i"
                },
                "prefix": true
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "shouldBe"
                    },
                    "arguments": [
                        {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x51a985"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 291,
                                    "raw": "0x123"
                                }
                            ]
                        },
                        {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x51a985"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 292,
                                    "raw": "0x124"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    ],
    "sourceType": "script"
}