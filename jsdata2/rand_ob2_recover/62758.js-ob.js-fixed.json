{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x2e05"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2a1166"
                },
                {
                    "type": "Identifier",
                    "name": "_0x2ef11e"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x2e05"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0xc6adaa"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2e05e1"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0xc6adaa"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0xc6adaa"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 149,
                                                                "raw": "0x95"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x2bfd00"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xc6ad"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xc6adaa"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x2bfd00"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x2e05"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2a1166"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2ef11e"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "t"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x5e0c3e"
                },
                {
                    "type": "Identifier",
                    "name": "_0x58aaf6"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertTrue"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x5e0c3e"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "test",
                                            "raw": "'test'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x58aaf6"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "f"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x3a4b27"
                },
                {
                    "type": "Identifier",
                    "name": "_0x55f0cc"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x45a56b"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x2e05"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertFalse"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x3a4b27"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x45a56b"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 160,
                                                    "raw": "0xa0"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x55f0cc"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\p{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 161,
                                        "raw": "0xa1"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\p{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 162,
                                        "raw": "0xa2"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\p{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\ud83c\udd30\ud83c\udd31\ud83c\udd32\u2460\u2461\u2462",
                                "raw": "'\ud83c\udd30\ud83c\udd31\ud83c\udd32\u2460\u2461\u2462'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\P{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 163,
                                        "raw": "0xa3"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\P{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 162,
                                        "raw": "0xa2"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{ASCII}+/u",
                                "regex": {
                                    "pattern": "\\P{ASCII}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\ud83c\udd30\ud83c\udd31\ud83c\udd32\u2460\u2461\u2462",
                                "raw": "'\ud83c\udd30\ud83c\udd31\ud83c\udd32\u2460\u2461\u2462'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\p{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[^\\p{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 161,
                                        "raw": "0xa1"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\p{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[\\p{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 162,
                                        "raw": "0xa2"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\p{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[\\p{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 164,
                                        "raw": "0xa4"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\P{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[^\\P{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 163,
                                        "raw": "0xa3"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[\\P{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\u24d0\u24d1\u24d2\u2460\u2461\u2462",
                                "raw": "'\u24d0\u24d1\u24d2\u2460\u2461\u2462'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\P{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[^\\P{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 164,
                                        "raw": "0xa4"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{Any}+/u",
                                "regex": {
                                    "pattern": "\\p{Any}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 164,
                                        "raw": "0xa4"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd",
                                        "raw": "'\ufffd'"
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\p{Any}/u",
                                        "regex": {
                                            "pattern": "\\p{Any}",
                                            "flags": "u"
                                        }
                                    },
                                    "property": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x24cafb"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 165,
                                                "raw": "0xa5"
                                            }
                                        ]
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd\ufffd",
                                        "raw": "'\ufffd\ufffd'"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd",
                                        "raw": "'\ufffd'"
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\p{Any}/u",
                                        "regex": {
                                            "pattern": "\\p{Any}",
                                            "flags": "u"
                                        }
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "exec",
                                        "raw": "'exec'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd\ufffd",
                                        "raw": "'\ufffd\ufffd'"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "\ud800\udc01",
                                        "raw": "'\ud800\udc01'"
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\p{Any}/u",
                                        "regex": {
                                            "pattern": "\\p{Any}",
                                            "flags": "u"
                                        }
                                    },
                                    "property": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x24cafb"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 165,
                                                "raw": "0xa5"
                                            }
                                        ]
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "\ud800\udc01",
                                        "raw": "'\ud800\udc01'"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd",
                                        "raw": "'\ufffd'"
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": {},
                                        "raw": "/\\p{Any}/u",
                                        "regex": {
                                            "pattern": "\\p{Any}",
                                            "flags": "u"
                                        }
                                    },
                                    "property": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x24cafb"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 165,
                                                "raw": "0xa5"
                                            }
                                        ]
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "\ufffd",
                                        "raw": "'\ufffd'"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Any}+/u",
                                "regex": {
                                    "pattern": "\\P{Any}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{Any}]+/u",
                                "regex": {
                                    "pattern": "[\\P{Any}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{Any}\\d]+/u",
                                "regex": {
                                    "pattern": "[\\P{Any}\\d]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\P{Any}]+/u",
                                "regex": {
                                    "pattern": "[^\\P{Any}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\p{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\p{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 167,
                                        "raw": "0xa7"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\p{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\ufdd0",
                                "raw": "'\ufdd0'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\p{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\p{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\udbbf\udfff",
                                "raw": "'\udbbf\udfff'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\P{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\P{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 167,
                                        "raw": "0xa7"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\P{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\ufdd0",
                                "raw": "'\ufdd0'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Assigned}+/u",
                                "regex": {
                                    "pattern": "\\P{Assigned}+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\udbbf\udfff",
                                "raw": "'\udbbf\udfff'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/\\P{Assigned}/u",
                                "regex": {
                                    "pattern": "\\P{Assigned}",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\P{Assigned}]+/u",
                                "regex": {
                                    "pattern": "[^\\P{Assigned}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 166,
                                        "raw": "0xa6"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{Assigned}]+/u",
                                "regex": {
                                    "pattern": "[\\P{Assigned}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 167,
                                        "raw": "0xa7"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\P{Assigned}]+/u",
                                "regex": {
                                    "pattern": "[^\\P{Assigned}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\ufdd0",
                                "raw": "'\ufdd0'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{Assigned}]+/u",
                                "regex": {
                                    "pattern": "[\\P{Assigned}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\udbbf\udfff",
                                "raw": "'\udbbf\udfff'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\P{Assigned}]/u",
                                "regex": {
                                    "pattern": "[\\P{Assigned}]",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[^\\u1234\\p{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[^\\u1234\\p{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\u1234",
                                "raw": "'\u1234'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[x\\P{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[x\\P{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "x",
                                "raw": "'x'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "t"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[\\u1234\\p{ASCII}]+/u",
                                "regex": {
                                    "pattern": "[\\u1234\\p{ASCII}]+",
                                    "flags": "u"
                                }
                            },
                            {
                                "type": "Literal",
                                "value": "\u1234",
                                "raw": "'\u1234'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 168,
                                        "raw": "0xa8"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/\\P{OAlpha}/u",
                                "raw": "'/\\x5cP{OAlpha}/u'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 169,
                                        "raw": "0xa9"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 170,
                                        "raw": "0xaa"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/\\p{Other_Grapheme_Extend}/u",
                                "raw": "'/\\x5cp{Other_Grapheme_Extend}/u'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 171,
                                        "raw": "0xab"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 172,
                                        "raw": "0xac"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/\\P{OIDC}/u",
                                "raw": "'/\\x5cP{OIDC}/u'"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 173,
                                        "raw": "0xad"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 174,
                                        "raw": "0xae"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 175,
                                        "raw": "0xaf"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 176,
                                        "raw": "0xb0"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 177,
                                        "raw": "0xb1"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 178,
                                        "raw": "0xb2"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x24cafb"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 179,
                                        "raw": "0xb3"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertThrows"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/\\P{OUpper}/u",
                                "raw": "'/\\x5cP{OUpper}/u'"
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}