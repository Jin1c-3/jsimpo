{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "debug"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "require"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x570689"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 483,
                                            "raw": "0x1e3"
                                        }
                                    ]
                                }
                            ]
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x570689"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 484,
                                        "raw": "0x1e4"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "getNextJsBaseWebpackConfig"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "require"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "next/dist/build/webpack-config",
                                    "raw": "'next/dist/build/webpack-config'"
                                }
                            ]
                        },
                        "property": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x570689"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 485,
                                    "raw": "0x1e5"
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "getNextWebpackConfig"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x28d452"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x560e8d"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x570689"
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x30325"
                                },
                                "init": null
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "TryStatement",
                        "block": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x30325"
                                        },
                                        "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "next/dist/next-server/server/config",
                                                        "raw": "'next/dist/next-server/server/config'"
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "default",
                                                "raw": "'default'"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "handler": {
                            "type": "CatchClause",
                            "param": {
                                "type": "Identifier",
                                "name": "_0x24f9c0"
                            },
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x24f9c0"
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x560e8d"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 486,
                                                            "raw": "0x1e6"
                                                        }
                                                    ]
                                                }
                                            },
                                            "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x560e8d"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 487,
                                                        "raw": "0x1e7"
                                                    }
                                                ]
                                            }
                                        },
                                        "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x30325"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "require"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x560e8d"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 488,
                                                                        "raw": "0x1e8"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0x560e8d"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 485,
                                                                "raw": "0x1e5"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "alternate": {
                                            "type": "ThrowStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x24f9c0"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "finalizer": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x428730"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x30325"
                                        },
                                        "arguments": [
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x560e8d"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 489,
                                                        "raw": "0x1e9"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x28d452"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "projectRoot",
                                                    "raw": "'projectRoot'"
                                                }
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x155269"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "getNextJsBaseWebpackConfig"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x28d452"
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x560e8d"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 490,
                                                            "raw": "0x1ea"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "buildId",
                                                            "raw": "'buildId'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x560e8d"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 491,
                                                                        "raw": "0x1eb"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Math"
                                                                            },
                                                                            "property": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x560e8d"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 492,
                                                                                        "raw": "0x1ec"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    },
                                                                    "property": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x560e8d"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 493,
                                                                                "raw": "0x1ed"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "config",
                                                            "raw": "'config'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0x428730"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "dev",
                                                            "raw": "'dev'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "isServer",
                                                            "raw": "'isServer'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "pagesDir",
                                                            "raw": "'pagesDir'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x28d452"
                                                            },
                                                            "property": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x560e8d"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 490,
                                                                        "raw": "0x1ea"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "entrypoints",
                                                            "raw": "'entrypoints'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ObjectExpression",
                                                            "properties": []
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "rewrites",
                                                            "raw": "'rewrites'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "fallback",
                                                                        "raw": "'fallback'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "afterFiles",
                                                                        "raw": "'afterFiles'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "beforeFiles",
                                                                        "raw": "'beforeFiles'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "debug"
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x560e8d"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 494,
                                                    "raw": "0x1ee"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x155269"
                                        }
                                    ]
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x155269"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x4063"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x4783fa"
                },
                {
                    "type": "Identifier",
                    "name": "_0x2a941b"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x4063"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x3b8987"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4063d4"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x3b8987"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3b8987"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 473,
                                                                "raw": "0x1d9"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x2ee664"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3b89"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3b8987"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x2ee664"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x4063"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4783fa"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2a941b"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "webpackConfigCache"
                    },
                    "init": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null"
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "findNextWebpackConfig"
                    },
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x39d498"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "webpackConfigCache"
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": null,
                                        "raw": "null"
                                    }
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "webpackConfigCache"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                        {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "webpackConfigCache"
                                            },
                                            "right": {
                                                "type": "AwaitExpression",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "getNextWebpackConfig"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x39d498"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "debug"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": "created and cached webpack preprocessor based on next.config.js",
                                                    "raw": "'created\\x20and\\x20cached\\x20webpack\\x20preprocessor\\x20based\\x20on\\x20next.config.js'"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "webpackConfigCache"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "webpackConfigCache"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": true
                }
            }
        }
    ],
    "sourceType": "script"
}