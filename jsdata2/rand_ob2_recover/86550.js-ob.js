var Vector4 = require(_0x29a0c8(309)), GetLineToPolygon = require('./GetLineToPolygon'), Line = require(_0x29a0c8(310)), segment = new Line();
function CheckIntersects(_0x5e33be, _0x2bf15f, _0x5904ee, _0x54deb5, _0x564fbd) {
    var _0x141cdd = _0x29a0c8, _0x4435e7 = Math[_0x141cdd(311)](_0x5e33be), _0x3e72a8 = Math[_0x141cdd(312)](_0x5e33be);
    segment[_0x141cdd(313)](_0x2bf15f, _0x5904ee, _0x2bf15f + _0x4435e7, _0x5904ee + _0x3e72a8);
    var _0x3beb1 = GetLineToPolygon(segment, _0x54deb5);
    _0x3beb1 && _0x564fbd['push'](new Vector4(_0x3beb1['x'], _0x3beb1['y'], _0x5e33be, _0x3beb1['w']));
}
function _0x484f(_0x372d19, _0x1b60d4) {
    return _0x484f = function (_0x5413a6, _0x484f18) {
        _0x5413a6 = _0x5413a6 - 297;
        var _0x25ebc4 = _0x5413[_0x5413a6];
        return _0x25ebc4;
    }, _0x484f(_0x372d19, _0x1b60d4);
}
function SortIntersects(_0x4a921f, _0x58b891) {
    return _0x4a921f['z'] - _0x58b891['z'];
}
var GetRaysFromPointToPolygon = function (_0x14bbdb, _0x23fa1a, _0x1a4ad0) {
    var _0x3c30a4 = _0x29a0c8;
    !Array['isArray'](_0x1a4ad0) && (_0x1a4ad0 = [_0x1a4ad0]);
    var _0x2612fb = [], _0x2f8d82 = [];
    for (var _0x565585 = 0; _0x565585 < _0x1a4ad0[_0x3c30a4(314)]; _0x565585++) {
        var _0x47d422 = _0x1a4ad0[_0x565585][_0x3c30a4(315)];
        for (var _0x1c9e62 = 0; _0x1c9e62 < _0x47d422[_0x3c30a4(314)]; _0x1c9e62++) {
            var _0x49514c = Math['atan2'](_0x47d422[_0x1c9e62]['y'] - _0x23fa1a, _0x47d422[_0x1c9e62]['x'] - _0x14bbdb);
            _0x2f8d82[_0x3c30a4(316)](_0x49514c) === -1 && (CheckIntersects(_0x49514c, _0x14bbdb, _0x23fa1a, _0x1a4ad0, _0x2612fb), CheckIntersects(_0x49514c - 0.00001, _0x14bbdb, _0x23fa1a, _0x1a4ad0, _0x2612fb), CheckIntersects(_0x49514c + 0.00001, _0x14bbdb, _0x23fa1a, _0x1a4ad0, _0x2612fb), _0x2f8d82[_0x3c30a4(317)](_0x49514c));
        }
    }
    return _0x2612fb[_0x3c30a4(318)](SortIntersects);
};
module[_0x29a0c8(319)] = GetRaysFromPointToPolygon;