
var _0x22534c = _0x3d37;
(function (_0x4d62bc, _0x3585d4) {
    var _0x462a5b = _0x3d37;
    while (!![]) {
        try {
            var _0x449f44 = -parseInt(_0x462a5b(0x19e)) * parseInt(_0x462a5b(0x19f)) + parseInt(_0x462a5b(0x1a0)) * -parseInt(_0x462a5b(0x1a1)) + -parseInt(_0x462a5b(0x1a2)) + parseInt(_0x462a5b(0x1a3)) + -parseInt(_0x462a5b(0x1a4)) + -parseInt(_0x462a5b(0x1a5)) + parseInt(_0x462a5b(0x1a6));
            if (_0x449f44 === _0x3585d4)
                break;
            else
                _0x4d62bc['push'](_0x4d62bc['shift']());
        } catch (_0x259664) {
            _0x4d62bc['push'](_0x4d62bc['shift']());
        }
    }
}(_0x3e2c, 0x1 * -0x68ab3 + -0x25c77 + -0xccd15 * -0x1));
var x_ = -0x3 * -0x6dd + -0x7b1 + -0xce6;
this[_0x22534c(0x1a7)]('x', function (_0x389457) {
    x_ = _0x389457;
}), this['__defineGetter__']('x', function () {
    return x_;
}), this['__defineSetter__']('y', function (_0x5c414b) {
}), this[_0x22534c(0x1a8)]('y', function () {
    return 0x1b9f + 0x25 * 0x3e + 0x248e * -0x1;
});
function f(_0x22d17f) {
    var _0x399feb = _0x22534c, _0x5c3cbf = {
            'HCTDO': function (_0x5b655a, _0x531ba9) {
                return _0x5b655a + _0x531ba9;
            }
        };
    return x = _0x5c3cbf[_0x399feb(0x1a9)](x, _0x22d17f), x;
}
function _0x3d37(_0x426d2b, _0xd37c1d) {
    return _0x3d37 = function (_0x21edf8, _0x2999a7) {
        _0x21edf8 = _0x21edf8 - (0x5 * 0x5e7 + 0xda * 0x1a + 0x3209 * -0x1);
        var _0xa93e8e = _0x3e2c[_0x21edf8];
        return _0xa93e8e;
    }, _0x3d37(_0x426d2b, _0xd37c1d);
}
function g(_0x30ee01) {
    var _0x233989 = _0x22534c, _0x247b11 = {
            'ASLiC': function (_0x50feaa, _0xb312f5) {
                return _0x50feaa + _0xb312f5;
            }
        };
    return y = _0x247b11[_0x233989(0x1aa)](y, _0x30ee01), y;
}
assertEquals(-0x9d4 + -0x1 * 0x1475 + -0x1e4a * -0x1, f(0x583 + 0x1f0f + -0x2491)), assertEquals(0x1cc7 + 0x1 * 0x4bb + -0x217f, f(-0x22f4 * 0x1 + -0x2 * 0xd3d + -0x8 * -0x7ae)), assertEquals(-0xa2e + 0x7a9 * 0x1 + -0x28c * -0x1, g(-0x11 * -0x15d + -0x87b + 0x1 * -0xeb1)), assertEquals(-0x7bf + -0x1b1 * -0x9 + 0x773 * -0x1, g(-0x22d9 + 0x1135 + 0x11a6 * 0x1));
