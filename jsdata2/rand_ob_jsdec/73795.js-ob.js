
function _0x2b8d(_0x40c8ca, _0xaaf799) {
    return _0x2b8d = function (_0x59954f, _0x151b37) {
        _0x59954f = _0x59954f - (-0x1 * 0x1ac8 + -0x1b7 * -0x1 + -0x34d * -0x8);
        var _0x288309 = _0x37c0[_0x59954f];
        return _0x288309;
    }, _0x2b8d(_0x40c8ca, _0xaaf799);
}
var _0x30fbf5 = _0x2b8d;
(function (_0xa1e1b0, _0x27bf9d) {
    var _0x209797 = _0x2b8d;
    while (!![]) {
        try {
            var _0x2fcd2c = parseInt(_0x209797(0x157)) * -parseInt(_0x209797(0x158)) + parseInt(_0x209797(0x159)) + -parseInt(_0x209797(0x15a)) * parseInt(_0x209797(0x15b)) + parseInt(_0x209797(0x15c)) + parseInt(_0x209797(0x15d)) * -parseInt(_0x209797(0x15e)) + parseInt(_0x209797(0x15f)) + parseInt(_0x209797(0x160));
            if (_0x2fcd2c === _0x27bf9d)
                break;
            else
                _0xa1e1b0['push'](_0xa1e1b0['shift']());
        } catch (_0x4a35ca) {
            _0xa1e1b0['push'](_0xa1e1b0['shift']());
        }
    }
}(_0x37c0, 0x1 * 0xc1571 + -0x19497b + 0x1a748f));
import _0x58b56a from 'assert';
import _0x212803 from 'lodash';
import {
    symbol,
    noop,
    mapCaches,
    LARGE_ARRAY_SIZE
} from './utils.js';
describe(_0x30fbf5(0x161), function () {
    var _0x323387 = _0x30fbf5, _0x473d48 = {
            'GhcPL': function (_0x31cd8c, _0x1313d1) {
                return _0x31cd8c - _0x1313d1;
            },
            'wpqXa': _0x323387(0x162),
            'sHZMV': function (_0xf68b38, _0x3009f1) {
                return _0xf68b38 + _0x3009f1;
            },
            'FohQr': 'should\x20implement\x20a\x20`Map`\x20interface\x20for\x20',
            'prTuf': function (_0x3c52a0, _0x591d70, _0x1cfcb7) {
                return _0x3c52a0(_0x591d70, _0x1cfcb7);
            },
            'mCOJN': _0x323387(0x163),
            'pSiIp': function (_0x18cb96) {
                return _0x18cb96();
            }
        }, _0x2f2173 = [
            null,
            undefined,
            ![],
            !![],
            0x22e0 + -0xa1 * -0x11 + -0x2d90,
            -Infinity,
            NaN,
            {},
            'a',
            symbol || noop
        ], _0x26fef5 = _0x212803['map'](_0x2f2173, function (_0x4fe372, _0x58e16c) {
            var _0x1bf820 = _0x323387, _0x1b64ab = _0x473d48['GhcPL'](_0x2f2173['length'], 0x1bf2 + -0x27d * -0xe + 0x14ed * -0x3);
            return [
                _0x4fe372,
                _0x2f2173[_0x473d48[_0x1bf820(0x164)](_0x1b64ab, _0x58e16c)]
            ];
        });
    function _0x131b12(_0x4fefbd) {
        var _0x14bc9d = _0x323387, _0x145c99 = new mapCaches[(_0x14bc9d(0x165))](_0x4fefbd), _0x2395cf = _0x4fefbd ? _0x4fefbd[_0x14bc9d(0x166)] : -0x100d + -0x12c3 + 0x22d0;
        return _0x212803[_0x14bc9d(0x167)](_0x473d48[_0x14bc9d(0x164)](LARGE_ARRAY_SIZE, _0x2395cf), function () {
            var _0x16bccb = _0x14bc9d;
            _0x145c99[_0x16bccb(0x168)]({}, {});
        }), {
            'hashes': new mapCaches[(_0x14bc9d(0x169))](_0x4fefbd),
            'list\x20caches': new mapCaches[(_0x14bc9d(0x16a))](_0x4fefbd),
            'map\x20caches': new mapCaches['MapCache'](_0x4fefbd),
            'stack\x20caches': new mapCaches[(_0x14bc9d(0x165))](_0x4fefbd),
            'large\x20stacks': _0x145c99
        };
    }
    _0x212803[_0x323387(0x16b)](_0x131b12(_0x26fef5), function (_0x4f753f, _0x2eb7ec) {
        var _0x422095 = _0x323387, _0x55d67b = { 'yLwBt': _0x473d48[_0x422095(0x16c)] }, _0x4e8114 = /^large/[_0x422095(0x16d)](_0x2eb7ec);
        it(_0x473d48[_0x422095(0x16e)](_0x473d48[_0x422095(0x16f)], _0x2eb7ec), function () {
            var _0x21a236 = _0x422095;
            _0x212803[_0x21a236(0x170)](_0x2f2173, function (_0x498c45, _0x5334e6) {
                var _0xf029e0 = _0x21a236, _0x1873b2 = _0x55d67b[_0xf029e0(0x171)][_0xf029e0(0x172)]('|'), _0xe5c34e = -0x3f0 + -0xe4e + 0x91f * 0x2;
                while (!![]) {
                    switch (_0x1873b2[_0xe5c34e++]) {
                    case '0':
                        _0x58b56a['deepStrictEqual'](_0x4f753f['get'](_0x498c45), _0x980304);
                        continue;
                    case '1':
                        _0x58b56a['strictEqual'](_0x4f753f[_0xf029e0(0x173)](_0x498c45), undefined);
                        continue;
                    case '2':
                        _0x58b56a['strictEqual'](_0x4f753f[_0xf029e0(0x174)](_0x498c45), ![]);
                        continue;
                    case '3':
                        _0x58b56a[_0xf029e0(0x175)](_0x4f753f[_0xf029e0(0x176)](_0x498c45), ![]);
                        continue;
                    case '4':
                        _0x58b56a[_0xf029e0(0x175)](_0x4f753f[_0xf029e0(0x168)](_0x498c45, _0x980304), _0x4f753f);
                        continue;
                    case '5':
                        _0x58b56a[_0xf029e0(0x175)](_0x4f753f[_0xf029e0(0x174)](_0x498c45), !![]);
                        continue;
                    case '6':
                        _0x58b56a[_0xf029e0(0x175)](_0x4f753f[_0xf029e0(0x176)](_0x498c45), !![]);
                        continue;
                    case '7':
                        var _0x980304 = _0x26fef5[_0x5334e6][0x185 * -0x2 + 0x1180 + -0xe75];
                        continue;
                    case '8':
                        _0x58b56a[_0xf029e0(0x175)](_0x4f753f[_0xf029e0(0x176)](_0x498c45), !![]);
                        continue;
                    }
                    break;
                }
            }), _0x58b56a[_0x21a236(0x175)](_0x4f753f['size'], _0x4e8114 ? LARGE_ARRAY_SIZE : _0x2f2173[_0x21a236(0x166)]), _0x58b56a[_0x21a236(0x175)](_0x4f753f['clear'](), undefined), _0x58b56a['ok'](_0x212803[_0x21a236(0x177)](_0x2f2173, function (_0x28aa0f) {
                return !_0x4f753f['has'](_0x28aa0f);
            }));
        });
    }), _0x212803[_0x323387(0x16b)](_0x473d48[_0x323387(0x178)](_0x131b12), function (_0x45de66, _0x53f496) {
        var _0x34b653 = _0x323387;
        _0x473d48[_0x34b653(0x179)](it, _0x473d48[_0x34b653(0x17a)] + _0x53f496, function () {
            var _0x5b2419 = _0x34b653;
            _0x212803[_0x5b2419(0x170)](_0x2f2173, function (_0xeb4f3b) {
                var _0x326495 = _0x5b2419;
                _0x45de66[_0x326495(0x168)](_0xeb4f3b, -0x14e * 0x7 + 0x1d * -0x29 + -0x498 * -0x3)[_0x326495(0x168)](_0xeb4f3b, 0xad0 + -0xd * -0x53 + -0x301 * 0x5), _0x58b56a['strictEqual'](_0x45de66[_0x326495(0x173)](_0xeb4f3b), -0x260b + -0x176f * -0x1 + 0xe9e * 0x1);
            });
        });
    });
});
