
function _0x77de(_0x1e3bc4, _0x12466f) {
    return _0x77de = function (_0x32d814, _0x3e2347) {
        _0x32d814 = _0x32d814 - (0xbb2 + 0x1c11 + 0x1c * -0x164);
        var _0x525f52 = _0x1413[_0x32d814];
        return _0x525f52;
    }, _0x77de(_0x1e3bc4, _0x12466f);
}
var _0x400b99 = _0x77de;
(function (_0x4e2399, _0x3149a9) {
    var _0x33dc9e = _0x77de;
    while (!![]) {
        try {
            var _0x4e5065 = parseInt(_0x33dc9e(0xd3)) * parseInt(_0x33dc9e(0xd4)) + -parseInt(_0x33dc9e(0xd5)) * parseInt(_0x33dc9e(0xd6)) + -parseInt(_0x33dc9e(0xd7)) * -parseInt(_0x33dc9e(0xd8)) + -parseInt(_0x33dc9e(0xd9)) * -parseInt(_0x33dc9e(0xda)) + parseInt(_0x33dc9e(0xdb)) * parseInt(_0x33dc9e(0xdc)) + -parseInt(_0x33dc9e(0xdd)) + -parseInt(_0x33dc9e(0xde));
            if (_0x4e5065 === _0x3149a9)
                break;
            else
                _0x4e2399['push'](_0x4e2399['shift']());
        } catch (_0x1d4166) {
            _0x4e2399['push'](_0x4e2399['shift']());
        }
    }
}(_0x1413, 0xd444f + 0xde18e + -0x1148da));
var inherits = require(_0x400b99(0xdf)), SHA512 = require(_0x400b99(0xe0)), Hash = require(_0x400b99(0xe1)), Buffer = require(_0x400b99(0xe2))[_0x400b99(0xe3)], W = new Array(0x1c4 * -0x2 + -0xf42 + 0x136a);
function Sha384() {
    var _0x32f088 = _0x400b99;
    this[_0x32f088(0xe4)](), this['_w'] = W, Hash[_0x32f088(0xe5)](this, 0x2365 + -0x364 + 0x1f81 * -0x1, -0x83 * -0x29 + 0x5ea + -0x1a75 * 0x1);
}
inherits(Sha384, SHA512), Sha384[_0x400b99(0xe6)]['init'] = function () {
    var _0xce0923 = _0x400b99, _0x2cbd86 = _0xce0923(0xe7)['split']('|'), _0x48587f = -0xd * 0x262 + -0x505 + 0x23ff;
    while (!![]) {
        switch (_0x2cbd86[_0x48587f++]) {
        case '0':
            this[_0xce0923(0xe8)] = -0xab5b09 + -0xe5e236 * -0x7 + 0xf921867;
            continue;
        case '1':
            this[_0xce0923(0xe9)] = 0x1805efb5 * 0x3 + -0x44772a * -0xfb + -0x5ac1c836;
            continue;
        case '2':
            return this;
        case '3':
            this[_0xce0923(0xea)] = -0x1 * -0x1f174792d + 0x1af10a591 + -0x2a0c5138d;
            continue;
        case '4':
            this[_0xce0923(0xeb)] = 0x1078eb * 0xdc3 + -0x156a3b74 + 0xdc65f80;
            continue;
        case '5':
            this[_0xce0923(0xec)] = -0x13a168da8 + -0xeb45582 + -0x12 * -0x1ce049ef;
            continue;
        case '6':
            this[_0xce0923(0xed)] = -0x2d2fdc9a + 0x2c * 0x1f8555d + 0xcfe05a5;
            continue;
        case '7':
            this[_0xce0923(0xee)] = -0x2f54cadf + -0x1d34279f + 0x15 * 0x873edd1;
            continue;
        case '8':
            this[_0xce0923(0xef)] = -0xb24f3 * -0x86a + -0xbbd54a19 + 0xc6687a8c;
            continue;
        case '9':
            this[_0xce0923(0xf0)] = 0x3c6 * -0xd86f7 + -0x369 * 0x63a9d3 + 0x252a505f2;
            continue;
        case '10':
            this[_0xce0923(0xf1)] = 0x43e859f * 0x2f + 0x98a07b93 + -0xcec2026a;
            continue;
        case '11':
            this['_fh'] = 0x2e881db9 * 0x4 + 0xc9a * -0xab22d + -0x3f8eb13 * -0x17;
            continue;
        case '12':
            this['_eh'] = 0x2 * -0x2738a2a2 + 0xc6355473 + 0x2 * -0x8487464;
            continue;
        case '13':
            this[_0xce0923(0xf2)] = -0xb3c716c0 + 0x6d * -0xdbe8ac + -0xa96e7 * -0x2c0c;
            continue;
        case '14':
            this['_dl'] = 0x8f7f6e66 + -0x4d95 * 0x478a2 + -0x1 * -0x1c271db1d;
            continue;
        case '15':
            this[_0xce0923(0xf3)] = 0xc3edbe6 * -0x1 + 0xa91cd492 + 0x300f * -0x1365e;
            continue;
        case '16':
            this[_0xce0923(0xf4)] = -0x26168df6 + 0x3dc2b65 * 0xd + 0x3b9da1f2;
            continue;
        }
        break;
    }
}, Sha384['prototype'][_0x400b99(0xf5)] = function () {
    var _0x9c279c = _0x400b99, _0xc1afef = {
            'FbqiU': function (_0x5af1f9, _0x1d38b8) {
                return _0x5af1f9 + _0x1d38b8;
            },
            'WwZmu': function (_0x15a04f, _0x372034, _0x53b4a4, _0x1de099) {
                return _0x15a04f(_0x372034, _0x53b4a4, _0x1de099);
            },
            'QDOhM': function (_0x57ea35, _0x1bcd06, _0xb5f3f9, _0x36a952) {
                return _0x57ea35(_0x1bcd06, _0xb5f3f9, _0x36a952);
            },
            'NzynA': function (_0x4eb369, _0x36a1e2, _0x3f2dee, _0x570d9b) {
                return _0x4eb369(_0x36a1e2, _0x3f2dee, _0x570d9b);
            }
        }, _0x1ac0e3 = Buffer[_0x9c279c(0xf6)](-0xea1 + 0x1 * 0x9b7 + 0x51a);
    function _0x114e9e(_0x39c873, _0x3ce4de, _0x3ba977) {
        var _0x1b3380 = _0x9c279c;
        _0x1ac0e3['writeInt32BE'](_0x39c873, _0x3ba977), _0x1ac0e3[_0x1b3380(0xf7)](_0x3ce4de, _0xc1afef[_0x1b3380(0xf8)](_0x3ba977, 0xbb * 0x9 + -0x1 * 0x1ec1 + 0x1832));
    }
    return _0xc1afef[_0x9c279c(0xf9)](_0x114e9e, this[_0x9c279c(0xf0)], this[_0x9c279c(0xf2)], -0x4db * -0x5 + 0x143c + -0x2c83), _0xc1afef[_0x9c279c(0xfa)](_0x114e9e, this['_bh'], this['_bl'], 0x8 * 0x376 + -0xada + -0x10ce), _0x114e9e(this[_0x9c279c(0xf1)], this[_0x9c279c(0xe9)], 0x24f0 + 0x1d18 + -0x8 * 0x83f), _0xc1afef[_0x9c279c(0xfa)](_0x114e9e, this[_0x9c279c(0xe8)], this[_0x9c279c(0xfb)], -0x24f7 + -0x52f * -0x2 + 0x1 * 0x1ab1), _0xc1afef['NzynA'](_0x114e9e, this[_0x9c279c(0xfc)], this[_0x9c279c(0xea)], -0xbd0 + 0x53 * -0x4b + -0x2441 * -0x1), _0x114e9e(this['_fh'], this[_0x9c279c(0xef)], -0x11ad * -0x2 + 0x7b * -0x47 + 0x1 * -0x115), _0x1ac0e3;
}, module[_0x400b99(0xfd)] = Sha384;
