"use strict";const http2Server=require("http2");const httpServer=require("http-server");const{existsSync,statSync,createReadStream}=require("fs");const{join}=require("path");const argv=require("minimist")(process.argv.slice(2));const mime=require("mime");function sendFile(e,r){r.setHeader("Content-Type",mime.lookup(e));r.writeHead(200);const t=createReadStream(e);t.pipe(r);t.on("finish",r.end)}function createHTTP2Server(s){const e=http2Server.createServer({},(e,r)=>{const t=join(__dirname,"benchmarks",s,e.url).replace(/\?.*/g,"");if(existsSync(t)&&statSync(t).isFile()){sendFile(t,r)}else{const n=join(t,"index.html");if(existsSync(n)){sendFile(n,r)}else{r.writeHead(404);r.end()}}});e.listen(8080);return e}function createHTTPServer(){const e=httpServer.createServer({root:join(__dirname,"benchmarks"),robots:true,cache:"no-store",headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":"true"}});e.listen(8080);return e}function serveBenchmark(e,r){if(r){return createHTTP2Server(e)}else{return createHTTPServer()}}if(require.main===module){const benchmarkInput=argv._[0];if(benchmarkInput){serveBenchmark(benchmarkInput)}else{console.error("Please specify a benchmark directory to serve!");process.exit(1)}}module.exports=serveBenchmark;