(function(n){n(function(){"use strict";var i,o,f;i=Array.prototype.concat;o=Array.prototype.slice;function l(n){return n}l.inverse=l;l.inverse.inverse=l;return function(n){var r,t,e;if(arguments.length==0)return l;t=i.apply([],o.call(arguments));r=function(){var n=o.call(arguments);for(var r=0,e=t.length;r<e;r++){n[0]=t[r].apply(f,n)}return n[0]};e=u(t);if(e.length){r.inverse=function(){var n=o.call(arguments);for(var r=e.length-1;r>=0;--r){n[0]=e[r].apply(f,n)}return n[0]};r.inverse.inverse=r}return r};function u(n){var r,e;e=[];for(var t=0,i=n.length;t<i;t++){r=n[t].inverse;if(typeof r=="function")e.push(r)}if(e.length>0&&e.length!==n.length){throw new Error("Either all or none of the supplied transforms must provide an inverse")}return e}})})(typeof define=="function"?define:function(n){module.exports=n()});