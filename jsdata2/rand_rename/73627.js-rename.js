import assert from"assert";import lodashStable from"lodash";import{falsey,stubA,stubB,noop}from"./utils.js";import nth from"../nth.js";describe("nth",function(){var n=["a","b","c","d"];it("should get the nth element of `array`",function(){var t=lodashStable.map(n,function(t,a){return nth(n,a)});assert.deepStrictEqual(t,n)});it("should work with a negative `n`",function(){var t=lodashStable.map(lodashStable.range(1,n.length+1),function(t){return nth(n,-t)});assert.deepStrictEqual(t,["d","c","b","a"])});it("should coerce `n` to an integer",function(){var t=falsey,a=lodashStable.map(t,stubA);var e=lodashStable.map(t,function(t){return t?nth(n,t):nth(n)});assert.deepStrictEqual(e,a);t=["1",1.6];a=lodashStable.map(t,stubB);e=lodashStable.map(t,function(t){return nth(n,t)});assert.deepStrictEqual(e,a)});it("should return `undefined` for empty arrays",function(){var t=[null,undefined,[]],a=lodashStable.map(t,noop);var e=lodashStable.map(t,function(t){return nth(t,1)});assert.deepStrictEqual(e,a)});it("should return `undefined` for non-indexes",function(){var a=[1,2],t=[Infinity,a.length],e=lodashStable.map(t,noop);a[-1]=3;var n=lodashStable.map(t,function(t){return nth(a,t)});assert.deepStrictEqual(n,e)})});