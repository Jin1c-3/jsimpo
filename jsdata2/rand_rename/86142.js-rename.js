var BlitterRender=require("./BlitterRender");var Bob=require("./Bob");var Class=require("../../utils/Class");var Components=require("../components");var Frame=require("../../textures/Frame");var GameObject=require("../GameObject");var List=require("../../structs/List");var Blitter=new Class({Extends:GameObject,Mixins:[Components.Alpha,Components.BlendMode,Components.Depth,Components.Mask,Components.Pipeline,Components.ScrollFactor,Components.Size,Components.Texture,Components.Transform,Components.Visible,BlitterRender],initialize:function e(t,i,r,n,s){GameObject.call(this,t,"Blitter");this.setTexture(n,s);this.setPosition(i,r);this.initPipeline();this.children=new List;this.renderList=[];this.dirty=false},create:function(e,t,i,r,n){if(r===undefined){r=true}if(n===undefined){n=this.children.length}if(i===undefined){i=this.frame}else if(!(i instanceof Frame)){i=this.texture.get(i)}var s=new Bob(this,e,t,i,r);this.children.addAt(s,n,false);this.dirty=true;return s},createFromCallback:function(e,t,i,r){var n=this.createMultiple(t,i,r);for(var s=0;s<n.length;s++){var a=n[s];e.call(this,a,s)}return n},createMultiple:function(i,e,r){if(e===undefined){e=this.frame.name}if(r===undefined){r=true}if(!Array.isArray(e)){e=[e]}var n=[];var s=this;e.forEach(function(e){for(var t=0;t<i;t++){n.push(s.create(0,0,e,r))}});return n},childCanRender:function(e){return e.visible&&e.alpha>0},getRenderList:function(){if(this.dirty){this.renderList=this.children.list.filter(this.childCanRender,this);this.dirty=false}return this.renderList},clear:function(){this.children.removeAll();this.dirty=true},preDestroy:function(){this.children.destroy();this.renderList=[]}});module.exports=Blitter;