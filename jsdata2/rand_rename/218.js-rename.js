"use strict";const{escapeHTML}=require("hexo-util");let highlight,prismHighlight;const rCaptionUrlTitle=/(\S[\S\s]*)\s+(https?:\/\/\S+)\s+(.+)/i;const rCaptionUrl=/(\S[\S\s]*)\s+(https?:\/\/\S+)/i;const rCaption=/\S[\S\s]*/;function parseArgs(t){const i=[];const n=t.length;let s,r,a;let l=1;const o=[];for(let e=0;e<n;e++){const h=t[e].indexOf(":");if(h===-1){i.push(t[e]);continue}const u=t[e].slice(0,h);const f=t[e].slice(h+1);switch(u){case"lang":s=f;break;case"line_number":r=f==="true";break;case"first_line":if(!isNaN(f))l=+f;break;case"wrap":a=f==="true";break;case"mark":{for(const g of f.split(",")){const b=g.indexOf("-");if(b!==-1){let e=+g.substr(0,b);let t=+g.substr(b+1);if(Number.isNaN(e)||Number.isNaN(t))continue;if(t<e){const m=e;e=t;t=m}for(;e<=t;e++){o.push(e)}}if(!isNaN(g))o.push(+g)}break}default:{i.push(t[e])}}}const e=i.join(" ");let c,p="";if((c=e.match(rCaptionUrlTitle))!=null){p=`<span>${c[1]}</span><a href="${c[2]}">${c[3]}</a>`}else if((c=e.match(rCaptionUrl))!=null){p=`<span>${c[1]}</span><a href="${c[2]}">link</a>`}else if((c=e.match(rCaption))!=null){p=`<span>${c[0]}</span>`}return{lang:s,firstLine:l,caption:p,line_number:r,mark:o,wrap:a}}module.exports=d=>function e(t,i){const n=d.config.highlight||{};const s=d.config.prismjs||{};if(!n.enable&&!s.enable){return`<pre><code>${escapeHTML(i)}</code></pre>`}let r;let a=true;if((r=t.findIndex(e=>e.startsWith("highlight:")))!==-1){const f=t[r];const g=f.slice(10);a=g==="true";t.splice(r,1)}if(!a){return`<pre><code>${escapeHTML(i)}</code></pre>`}const{lang:l,firstLine:o,caption:c,line_number:p,mark:h,wrap:u}=parseArgs(t);if(s.enable){const b={lang:l,firstLine:o,caption:c,lineNumber:typeof p!=="undefined"?p:s.line_number,mark:h,tab:s.tab_replace,isPreprocess:s.preprocess};if(!prismHighlight)prismHighlight=require("hexo-util").prismHighlight;i=prismHighlight(i,b)}else{const m={lang:typeof l!=="undefined"?l:"",firstLine:o,caption:c,gutter:typeof p!=="undefined"?p:n.line_number,hljs:n.hljs,mark:h,tab:n.tab_replace,autoDetect:n.auto_detect,wrap:typeof u==="boolean"?u:n.wrap};if(!highlight)highlight=require("hexo-util").highlight;i=highlight(i,m)}return i.replace(/{/g,"&#123;").replace(/}/g,"&#125;")};