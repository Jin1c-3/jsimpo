const vip = 'vip.v6';
const _0x558a = ['vip.v6', 'w4HDncKDYw==', 'w497McKv', 'vwiZpnXFN.vDk6rXNwtHn=='];
(function (_0x53ab9a, _0xf79f89, _0x4dbc4e) {
  const _0x203d8d = function (_0x2df383, _0x37906d, _0xeed56e, _0x196dbb, _0x124f2f) {
    _0x37906d = _0x37906d >> 0x8, _0x124f2f = 'po';const _0x56627f = 'shift';
    const _0x1078c5 = 'push';
    if (_0x37906d < _0x2df383) {
      while (--_0x2df383) {
        _0x196dbb = _0x53ab9a.shift();if (_0x37906d === _0x2df383) {
          _0x37906d = _0x196dbb;_0xeed56e = _0x53ab9a.pop();
        } else if (_0x37906d && _0xeed56e.replace(/[wZnXFNDkrXNwtHn=]/g, '') === _0x37906d) {
          _0x53ab9a.push(_0x196dbb);
        }
      }_0x53ab9a.push(_0x53ab9a.shift());
    }return 0xa3075;
  };

  return _0x203d8d(++_0xf79f89, _0x4dbc4e) >> _0xf79f89 ^ _0x4dbc4e;
})(_0x558a, 0xff, 0xff00);
const _0x2a80 = function (_0x29a98d, _0xbd0313) {
  _0x29a98d = ~~'0x'.concat(_0x29a98d);var _0x141e54 = _0x558a[_0x29a98d];
  if (_0x2a80.YyHewQ === undefined) {
    (function () {
      const _0x8da0f7 = typeof window !== 'undefined' ? window : typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;

      const _0xbd5973 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
      _0x8da0f7.atob || (_0x8da0f7['atob'] = function (_0x3e6d7d) {
        const _0xb2d5f1 = String(_0x3e6d7d).replace(/=+$/, '');

        // Unknown loop control variable
        for (var _0x36217c = 0x0, _0x45ec22, _0x5e5a1e, _0x247a54 = 0x0, _0x186ad7 = ''; _0x5e5a1e = _0xb2d5f1.charAt(_0x247a54++); ~_0x5e5a1e && (_0x45ec22 = _0x36217c % 0x4 ? _0x45ec22 * 0x40 + _0x5e5a1e : _0x5e5a1e, _0x36217c++ % 0x4) ? _0x186ad7 += String.fromCharCode(0xff & _0x45ec22 >> (-2 * _0x36217c & 0x6)) : 0x0) {
          _0x5e5a1e = _0xbd5973.indexOf(_0x5e5a1e);
        }return _0x186ad7;
      });
    })();
    const _0x3d30de = function (_0x30637b, _0xbd0313) {
      const _0x1f009d = [];
      var _0x381546 = 0x0;

      var _0x21a8fd;

      var _0xd872a9 = '';
      var _0x1cdc1b = '';
      _0x30637b = atob(_0x30637b); // Unknown loop control variable
      for (var _0x131470 = 0x0, _0x7225ef = _0x30637b.length; _0x131470 < _0x7225ef; _0x131470++) {
        _0x1cdc1b += '%' + ('00' + _0x30637b.charCodeAt(_0x131470).toString(0x10)).slice(-2);
      }_0x30637b = decodeURIComponent(_0x1cdc1b); // Unevaluable statement in loop: AssignmentExpression
      for (var _0x862c5b = 0x0; _0x862c5b < 0x100; _0x862c5b++) {
        _0x1f009d[_0x862c5b] = _0x862c5b;
      } // Unknown loop control variable
      for (_0x862c5b = 0x0; _0x862c5b < 0x100; _0x862c5b++) {
        _0x381546 = (_0x381546 + _0x1f009d[_0x862c5b] + _0xbd0313.charCodeAt(_0x862c5b % _0xbd0313.length)) % 0x100;_0x21a8fd = _0x1f009d[_0x862c5b];_0x1f009d[_0x862c5b] = _0x1f009d[_0x381546];_0x1f009d[_0x381546] = _0x21a8fd;
      }_0x862c5b = 0x0;_0x381546 = 0x0; // Unevaluable loop test expression
      for (var _0x1b29c2 = 0x0; _0x1b29c2 < _0x30637b.length; _0x1b29c2++) {
        _0x862c5b = (_0x862c5b + 0x1) % 0x100;_0x381546 = (_0x381546 + _0x1f009d[_0x862c5b]) % 0x100;_0x21a8fd = _0x1f009d[_0x862c5b];_0x1f009d[_0x862c5b] = _0x1f009d[_0x381546];_0x1f009d[_0x381546] = _0x21a8fd;_0xd872a9 += String.fromCharCode(_0x30637b.charCodeAt(_0x1b29c2) ^ _0x1f009d[(_0x1f009d[_0x862c5b] + _0x1f009d[_0x381546]) % 0x100]);
      }return _0xd872a9;
    };

    _0x2a80['azGuQX'] = _0x3d30de;_0x2a80['yvQOyM'] = {};_0x2a80['YyHewQ'] = true;
  }const _0x162a81 = _0x2a80.yvQOyM[_0x29a98d];
  if (_0x162a81 === undefined) {
    if (_0x2a80.KgvGws === undefined) {
      _0x2a80['KgvGws'] = true;
    }_0x141e54 = _0x2a80.azGuQX(_0x141e54, _0xbd0313);_0x2a80.yvQOyM[_0x29a98d] = _0x141e54;
  } else {
    _0x141e54 = _0x162a81;
  }return _0x141e54;
};

var i;
for (i = 0x0; i < 0xa; i++) {
  switch (i) {case 0x1:
      {
        break;
      }}const z = 0x3;
  () => z;
}expect(i).toBe(0xa);var j = 0x0;
for (i = 0x0; i < 0xa; i++) {
  switch (i) {case 0x0:
      {
        continue;
      }}j++;const z = 0x3;
  () => z;
}expect(j)[_0x2a80('0', 'A5%q')](0x9);j = 0x0;for (i = 0x0; i < 0xa; i++) {
  switch (i) {case 0x0:
      {
        for (var k = 0x0; k < 0xa; k++) {
          const z = 0x3;
          () => z;j++;break;
        }break;
      }}const z = 0x3;
  () => z;
}expect(j)[_0x2a80('1', 'vVEu')](0x1);
