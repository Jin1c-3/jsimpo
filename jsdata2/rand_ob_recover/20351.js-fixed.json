{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Array"
                        },
                        "property": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x3a66c6"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 346,
                                    "raw": "0x15a"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x3c82"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x4dcb4d"
                },
                {
                    "type": "Identifier",
                    "name": "_0x46c27d"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x3c82"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x55898f"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x1d6d9c"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x55898f"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x55898f"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 18,
                                                                            "raw": "0x12"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 384,
                                                                                "raw": "0x180"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 743,
                                                                            "raw": "0x2e7"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 9,
                                                                                "raw": "0x9"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 4645,
                                                                        "raw": "0x1225"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 3,
                                                                        "raw": "0x3"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x3fa6f6"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a04"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x55898f"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x3fa6f6"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x3c82"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4dcb4d"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x46c27d"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "makeIterator"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "YieldExpression",
                                    "argument": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 3621,
                                                    "raw": "0xe25"
                                                },
                                                "prefix": true
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": 2149,
                                                    "raw": "0x865"
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 3,
                                                        "raw": "0x3"
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 10069,
                                            "raw": "0x2755"
                                        }
                                    },
                                    "delegate": false
                                },
                                {
                                    "type": "YieldExpression",
                                    "argument": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 8113,
                                                    "raw": "0x1fb1"
                                                },
                                                "prefix": true
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": 3,
                                                    "raw": "0x3"
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 1943,
                                                        "raw": "0x797"
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 13944,
                                            "raw": "0x3678"
                                        }
                                    },
                                    "delegate": false
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": true,
            "expression": false,
            "async": false
        },
        {
            "type": "ForOfStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "itItem"
                        },
                        "init": null
                    }
                ],
                "kind": "const"
            },
            "right": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "makeIterator"
                },
                "arguments": []
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "console"
                                },
                                "property": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x3a66c6"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 347,
                                            "raw": "0x15b"
                                        }
                                    ]
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "itItem"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}