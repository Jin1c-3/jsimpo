var i;
for (i = 4279 + -7104 + 1 * 2825; i < 1 * -8110 + 917 * 5 + 3535; i++) {
    switch (i) {
    case -6238 + -7443 + 13682: {
            break;
        }
    }
    const z = -5167 + -41 * -2 + 16 * 318;
    () => z;
}
expect(i)['toBe'](-8809 + 86 * 83 + 41 * 41);
var j = -781 + -2226 + 3007;
for (i = 467 * 9 + 4573 + -8776; i < -9147 + -3836 + -71 * -183; i++) {
    switch (i) {
    case -2 * 2509 + -2756 + 7774: {
            continue;
        }
    }
    j++;
    const z = 6356 + -566 * -6 + -1 * 9749;
    () => z;
}
function _0x265f(_0x4fb45b, _0x3def4f) {
    return _0x265f = function (_0x57d03f, _0x1ea00d) {
        _0x57d03f = _0x57d03f - (-1 * 6931 + -7385 + 14741);
        let _0x150b87 = _0x365b[_0x57d03f];
        return _0x150b87;
    }, _0x265f(_0x4fb45b, _0x3def4f);
}
expect(j)[_0x31c3b8(438)](-1 * 7747 + -95 * -103 + -1 * 2029), j = -4012 + -2261 + 6273;
for (i = 1663 * 1 + -4004 + -2341 * -1; i < 2970 + 2558 + 1 * -5518; i++) {
    switch (i) {
    case -61 * -27 + 7267 * 1 + 4457 * -2: {
            for (var k = -3879 + -9560 + 13439; k < 4389 + 2268 + -6647 * 1; k++) {
                const z = -1 * 4282 + -1853 + 2046 * 3;
                () => z, j++;
                break;
            }
            break;
        }
    }
    const z = 9310 + -6273 + -3034;
    () => z;
}
expect(j)['toBe'](-1 * 6703 + -3538 + 10242);