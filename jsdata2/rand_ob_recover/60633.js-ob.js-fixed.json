{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "functionToCatch"
                    },
                    "init": null
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "lineNumber"
                    },
                    "init": null
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x1dab"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x432a78"
                },
                {
                    "type": "Identifier",
                    "name": "_0x199b45"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x1dab"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2a3494"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x5139ff"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x2a3494"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x2a3494"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 53,
                                                                                "raw": "0x35"
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 59,
                                                                                "raw": "0x3b"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 8106,
                                                                                "raw": "0x1faa"
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Literal",
                                                                            "value": 2177,
                                                                            "raw": "0x881"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 5,
                                                                        "raw": "0x5"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x47706e"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x461c"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2a3494"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x47706e"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x1dab"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x432a78"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x199b45"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "catchLineNumber"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4d6f63"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x1dab"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x3d05b7"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x4d6f63"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 359,
                                                    "raw": "0x167"
                                                }
                                            ]
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x4d6f63"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 360,
                                                    "raw": "0x168"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x37ed47"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 3221,
                                                "raw": "0xc95"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 4778,
                                            "raw": "0x12aa"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "0x1"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1557,
                                            "raw": "0x615"
                                        }
                                    }
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x3d05b7"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x37ed47"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "property": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d6f63"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 361,
                                                                        "raw": "0x169"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x38d006"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x11b060"
                                                                }
                                                            ],
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "VariableDeclaration",
                                                                        "declarations": [
                                                                            {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3f5dda"
                                                                                },
                                                                                "init": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4d6f63"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "kind": "var"
                                                                    },
                                                                    {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "SequenceExpression",
                                                                            "expressions": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x11b060"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x3f5dda"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": 362,
                                                                                                    "raw": "0x16a"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "FunctionExpression",
                                                                                            "id": null,
                                                                                            "params": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x44deaa"
                                                                                                }
                                                                                            ],
                                                                                            "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "VariableDeclaration",
                                                                                                        "declarations": [
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x1e1eec"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3f5dda"
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "var"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2165bc"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x1e1eec"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 363,
                                                                                                                            "raw": "0x16b"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x44deaa"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "getFunction",
                                                                                                                            "raw": "'getFunction'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "functionToCatch"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "ReturnStatement",
                                                                                                            "argument": {
                                                                                                                "type": "SequenceExpression",
                                                                                                                "expressions": [
                                                                                                                    {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "lineNumber"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x44deaa"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "CallExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x1e1eec"
                                                                                                                                    },
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": 364,
                                                                                                                                            "raw": "0x16c"
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": []
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "ArrayExpression",
                                                                                                                                "elements": []
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "ArrayExpression",
                                                                                                                "elements": []
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "generator": false,
                                                                                            "expression": false,
                                                                                            "async": false
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "lineNumber"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "generator": false,
                                                            "expression": false,
                                                            "async": false
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x2165bc"
                                                            },
                                                            "init": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "TSwMH",
                                                                            "raw": "'TSwMH'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1d2422"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2d9f2c"
                                                                                }
                                                                            ],
                                                                            "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "==",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1d2422"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2d9f2c"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "generator": false,
                                                                            "expression": false,
                                                                            "async": false
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "property": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d6f63"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 365,
                                                                        "raw": "0x16d"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x112a02"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x112a02"
                                                            },
                                                            "init": {
                                                                "type": "ObjectExpression",
                                                                "properties": []
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x112a02"
                                                        },
                                                        "property": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x4d6f63"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 366,
                                                                    "raw": "0x16e"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "log"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4111f3"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "cvZLo",
                                                "raw": "'cvZLo'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x5e945e"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e945e"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x4111f3"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "cvZLo",
                                    "raw": "'cvZLo'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "catchLineNumber"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "foo"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": []
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "test1"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4021d6"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x1dab"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x5c900d"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "gAItt",
                                                "raw": "'gAItt'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x13fdeb"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x204096"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x13fdeb"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x204096"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "ejuuS",
                                                "raw": "'ejuuS'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x5e954a"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x3d8a60"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e954a"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3d8a60"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "oKdkP",
                                                "raw": "'oKdkP'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x35de2d"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x35de2d"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x5c900d"
                                },
                                "property": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x4021d6"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 367,
                                            "raw": "0x16f"
                                        }
                                    ]
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5c900d"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "ejuuS",
                                                "raw": "'ejuuS'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "foo"
                                                },
                                                "arguments": []
                                            },
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x5c900d"
                                                    },
                                                    "property": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0x4021d6"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 368,
                                                                "raw": "0x170"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "foo"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "consequent": {
                                        "type": "Literal",
                                        "value": "a",
                                        "raw": "'a'"
                                    },
                                    "alternate": {
                                        "type": "Literal",
                                        "value": "b",
                                        "raw": "'b'"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "test2"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x583dcb"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x1dab"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1ee059"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "McFIG",
                                                "raw": "'McFIG'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x28391d"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x3e25ec"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x28391d"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3e25ec"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x152b49"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x1ee059"
                                },
                                "property": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x583dcb"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 369,
                                            "raw": "0x171"
                                        }
                                    ]
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x152b49"
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x583dcb"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 370,
                                                            "raw": "0x172"
                                                        }
                                                    ]
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x152b49"
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x583dcb"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 370,
                                                            "raw": "0x172"
                                                        }
                                                    ]
                                                }
                                            },
                                            "arguments": []
                                        }
                                    },
                                    "consequent": {
                                        "type": "Literal",
                                        "value": "a",
                                        "raw": "'a'"
                                    },
                                    "alternate": {
                                        "type": "Literal",
                                        "value": "b",
                                        "raw": "'b'"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "test3"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x164cc6"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x1dab"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x298a31"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "daVjj",
                                                "raw": "'daVjj'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x324936"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x44f7f6"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x324936"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x44f7f6"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4c63eb"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "log",
                                                "raw": "'log'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "log"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x4c63eb"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "log",
                                    "raw": "'log'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x298a31"
                                            },
                                            "property": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x164cc6"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 371,
                                                        "raw": "0x173"
                                                    }
                                                ]
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x4c63eb"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "foo",
                                                        "raw": "'foo'"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x4c63eb"
                                                    },
                                                    "property": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0x164cc6"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 370,
                                                                "raw": "0x172"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        ]
                                    },
                                    "consequent": {
                                        "type": "Literal",
                                        "value": "a",
                                        "raw": "'a'"
                                    },
                                    "alternate": {
                                        "type": "Literal",
                                        "value": "b",
                                        "raw": "'b'"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "test"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x152885"
                },
                {
                    "type": "Identifier",
                    "name": "_0x3ed551"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x9b74b3"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x1dab"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x267bd7"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "lVWOd",
                                                "raw": "'lVWOd'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x52a9e1"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x52a9e1"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "cAxko",
                                                "raw": "'cAxko'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x1abb6a"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x23c569"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x10b703"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1abb6a"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x23c569"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x10b703"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "functionToCatch"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x152885"
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x267bd7"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x9b74b3"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 372,
                                                    "raw": "0x174"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x152885"
                                        }
                                    ]
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x267bd7"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x9b74b3"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 373,
                                                    "raw": "0x175"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "assertEquals"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x3ed551"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "lineNumber"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test1"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 276,
                                            "raw": "0x114"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 8779,
                                        "raw": "0x224b"
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "0x3"
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 2815,
                                            "raw": "0xaff"
                                        },
                                        "prefix": true
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test2"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 5896,
                                            "raw": "0x1708"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 3,
                                                "raw": "0x3"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 2757,
                                                "raw": "0xac5"
                                            },
                                            "prefix": true
                                        }
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Literal",
                                        "value": 1155,
                                        "raw": "0x483"
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 2,
                                            "raw": "0x2"
                                        },
                                        "prefix": true
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test3"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 6345,
                                            "raw": "0x18c9"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 5205,
                                        "raw": "0x1455"
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Literal",
                                        "value": 404,
                                        "raw": "0x194"
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "0x3"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "eval"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test1"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "toString",
                                            "raw": "'toString'"
                                        }
                                    },
                                    "arguments": []
                                },
                                "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0xd809a8"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 374,
                                            "raw": "0x176"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "eval"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test2"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0xd809a8"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 375,
                                                    "raw": "0x177"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": []
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "//@ sourceUrl=foo",
                                    "raw": "'//@\\x20sourceUrl=foo'"
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "eval"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test3"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0xd809a8"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 375,
                                                    "raw": "0x177"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": []
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "//@ sourceUrl=foo",
                                    "raw": "'//@\\x20sourceUrl=foo'"
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test1"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 2,
                                            "raw": "0x2"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 2426,
                                            "raw": "0x97a"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 5,
                                            "raw": "0x5"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1501,
                                            "raw": "0x5dd"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 12355,
                                        "raw": "0x3043"
                                    },
                                    "prefix": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test2"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": 7822,
                                        "raw": "0x1e8e"
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 2,
                                            "raw": "0x2"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 119,
                                            "raw": "0x77"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 8057,
                                        "raw": "0x1f79"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "test"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "test3"
                            },
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 9035,
                                                "raw": "0x234b"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "0x1"
                                            },
                                            "prefix": true
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 861,
                                        "raw": "0x35d"
                                    }
                                },
                                "right": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 9893,
                                        "raw": "0x26a5"
                                    },
                                    "prefix": true
                                }
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}