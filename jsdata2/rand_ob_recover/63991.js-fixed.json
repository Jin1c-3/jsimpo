{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "x_"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "0x3"
                                    },
                                    "prefix": true
                                },
                                "right": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 1757,
                                        "raw": "0x6dd"
                                    },
                                    "prefix": true
                                }
                            },
                            "right": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 1969,
                                    "raw": "0x7b1"
                                },
                                "prefix": true
                            }
                        },
                        "right": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "Literal",
                                "value": 3302,
                                "raw": "0xce6"
                            },
                            "prefix": true
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "ThisExpression"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x22534c"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 423,
                                        "raw": "0x1a7"
                                    }
                                ]
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "x",
                                "raw": "'x'"
                            },
                            {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x389457"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "x_"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x389457"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "ThisExpression"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "__defineGetter__",
                                "raw": "'__defineGetter__'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "x",
                                "raw": "'x'"
                            },
                            {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "x_"
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "ThisExpression"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "__defineSetter__",
                                "raw": "'__defineSetter__'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "y",
                                "raw": "'y'"
                            },
                            {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x5c414b"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "ThisExpression"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x22534c"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 424,
                                        "raw": "0x1a8"
                                    }
                                ]
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "y",
                                "raw": "'y'"
                            },
                            {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": 7071,
                                                        "raw": "0x1b9f"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": 37,
                                                            "raw": "0x25"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 62,
                                                            "raw": "0x3e"
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": 9358,
                                                        "raw": "0x248e"
                                                    },
                                                    "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        },
                                                        "prefix": true
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "f"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x22d17f"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x399feb"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x22534c"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x5c3cbf"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "HCTDO",
                                                "raw": "'HCTDO'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x5b655a"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x531ba9"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5b655a"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x531ba9"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5c3cbf"
                                            },
                                            "property": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x399feb"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 425,
                                                        "raw": "0x1a9"
                                                    }
                                                ]
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "x"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x22d17f"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "Identifier",
                                    "name": "x"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x3d37"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x426d2b"
                },
                {
                    "type": "Identifier",
                    "name": "_0xd37c1d"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x3d37"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x21edf8"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2999a7"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x21edf8"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x21edf8"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 5,
                                                                            "raw": "0x5"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 1511,
                                                                            "raw": "0x5e7"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 218,
                                                                            "raw": "0xda"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 26,
                                                                            "raw": "0x1a"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": 12809,
                                                                        "raw": "0x3209"
                                                                    },
                                                                    "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0xa93e8e"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3e2c"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x21edf8"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0xa93e8e"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x3d37"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x426d2b"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xd37c1d"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "g"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x30ee01"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x233989"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x22534c"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x247b11"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "ASLiC",
                                                "raw": "'ASLiC'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x50feaa"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0xb312f5"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x50feaa"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xb312f5"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "y"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x247b11"
                                            },
                                            "property": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x233989"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 426,
                                                        "raw": "0x1aa"
                                                    }
                                                ]
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "y"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x30ee01"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "Identifier",
                                    "name": "y"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 2516,
                                            "raw": "0x9d4"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "0x1"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 5237,
                                            "raw": "0x1475"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 7754,
                                            "raw": "0x1e4a"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        "prefix": true
                                    }
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "f"
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": 1411,
                                                "raw": "0x583"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 7951,
                                                "raw": "0x1f0f"
                                            }
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 9361,
                                                "raw": "0x2491"
                                            },
                                            "prefix": true
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": 7367,
                                        "raw": "0x1cc7"
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1211,
                                            "raw": "0x4bb"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 8575,
                                        "raw": "0x217f"
                                    },
                                    "prefix": true
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "f"
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 8948,
                                                        "raw": "0x22f4"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "0x2"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 3389,
                                                    "raw": "0xd3d"
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 8,
                                                    "raw": "0x8"
                                                },
                                                "prefix": true
                                            },
                                            "right": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 1966,
                                                    "raw": "0x7ae"
                                                },
                                                "prefix": true
                                            }
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 2606,
                                            "raw": "0xa2e"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 1961,
                                            "raw": "0x7a9"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 652,
                                            "raw": "0x28c"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        "prefix": true
                                    }
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "g"
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 17,
                                                        "raw": "0x11"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 349,
                                                        "raw": "0x15d"
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            "right": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 2171,
                                                    "raw": "0x87b"
                                                },
                                                "prefix": true
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "0x1"
                                            },
                                            "right": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 3761,
                                                    "raw": "0xeb1"
                                                },
                                                "prefix": true
                                            }
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 1983,
                                            "raw": "0x7bf"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 433,
                                                "raw": "0x1b1"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 9,
                                                "raw": "0x9"
                                            },
                                            "prefix": true
                                        }
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Literal",
                                        "value": 1907,
                                        "raw": "0x773"
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        "prefix": true
                                    }
                                }
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "g"
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 8921,
                                                    "raw": "0x22d9"
                                                },
                                                "prefix": true
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 4405,
                                                "raw": "0x1135"
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "Literal",
                                                "value": 4518,
                                                "raw": "0x11a6"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "0x1"
                                            }
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}