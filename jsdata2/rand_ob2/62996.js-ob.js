const _0x1a91 = [
    '1nifwIM',
    '264874vwjZmb',
    '383jdbtrr',
    '545cjldiN',
    '417545OmHIlZ',
    '44971tVvmWi',
    '4JJcWGz',
    '2698NzdFQQ',
    '198786KVwIDX',
    'test/mjsunit/wasm/wasm-module-builder.js',
    'addImport',
    'import_module',
    'addMemory',
    'addFunction',
    'addBody',
    'exportFunc',
    'store',
    'SimpleMemoryIndependenceTest',
    'instantiate',
    'mod',
    'load',
    'exports',
    'TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory',
    'plus_one',
    'TestCorrectMemoryAccessedAfterReturningFromExternalCall',
    'sandwich',
    'CallThroughTableIndependenceTest',
    'toModule',
    'Instance',
    'Table',
    'anyfunc',
    'set',
    'get',
    'addImportedTable',
    'table',
    '109658YobFwu'
];
const _0x14d0da = _0x23ee;
(function (_0x249fa4, _0x33b04f) {
    const _0x353d74 = _0x23ee;
    while (!![]) {
        try {
            const _0x546fc4 = parseInt(_0x353d74(0x19b)) + parseInt(_0x353d74(0x19c)) * -parseInt(_0x353d74(0x19d)) + -parseInt(_0x353d74(0x19e)) * parseInt(_0x353d74(0x19f)) + parseInt(_0x353d74(0x1a0)) + -parseInt(_0x353d74(0x1a1)) + -parseInt(_0x353d74(0x1a2)) * -parseInt(_0x353d74(0x1a3)) + parseInt(_0x353d74(0x1a4));
            if (_0x546fc4 === _0x33b04f)
                break;
            else
                _0x249fa4['push'](_0x249fa4['shift']());
        } catch (_0x304793) {
            _0x249fa4['push'](_0x249fa4['shift']());
        }
    }
}(_0x1a91, 0x35459), load(_0x14d0da(0x1a5)));
let initialMemoryPages = 0x1, maximumMemoryPages = 0x5, other_fn_idx = 0x0;
function generateBuilder(_0x94a319, _0x12452f) {
    const _0x3a3004 = _0x14d0da;
    let _0xda57e1 = new WasmModuleBuilder();
    if (_0x12452f) {
        let _0x1706e3 = _0xda57e1[_0x3a3004(0x1a6)](_0x3a3004(0x1a7), 'other_module_fn', _0x12452f);
        assertEquals(_0x1706e3, other_fn_idx);
    }
    return _0x94a319 && (_0xda57e1[_0x3a3004(0x1a8)](initialMemoryPages, maximumMemoryPages, !![]), _0xda57e1[_0x3a3004(0x1a9)]('load', kSig_i_i)[_0x3a3004(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprI32LoadMem,
        0x0,
        0x0
    ])[_0x3a3004(0x1ab)](), _0xda57e1['addFunction'](_0x3a3004(0x1ac), kSig_i_ii)[_0x3a3004(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x1,
        kExprI32StoreMem,
        0x0,
        0x0,
        kExprLocalGet,
        0x1
    ])['exportFunc']()), _0xda57e1;
}
function _0x23ee(_0x2be3f2, _0x35cac1) {
    return _0x23ee = function (_0x1a919b, _0x23ee54) {
        _0x1a919b = _0x1a919b - 0x19b;
        let _0x4596e3 = _0x1a91[_0x1a919b];
        return _0x4596e3;
    }, _0x23ee(_0x2be3f2, _0x35cac1);
}
function assertMemoryIndependence(_0x16dfaa, _0x2ff7d2, _0x4af4a4, _0x1c06f9) {
    assertEquals(0x0, _0x16dfaa(0x0)), assertEquals(0x0, _0x4af4a4(0x0)), assertEquals(0x0, _0x16dfaa(0x4)), assertEquals(0x0, _0x4af4a4(0x4)), _0x2ff7d2(0x0, 0x65), assertEquals(0x65, _0x16dfaa(0x0)), assertEquals(0x0, _0x4af4a4(0x0)), assertEquals(0x0, _0x16dfaa(0x4)), assertEquals(0x0, _0x4af4a4(0x4)), _0x2ff7d2(0x4, 0x66), assertEquals(0x65, _0x16dfaa(0x0)), assertEquals(0x0, _0x4af4a4(0x0)), assertEquals(0x66, _0x16dfaa(0x4)), assertEquals(0x0, _0x4af4a4(0x4)), _0x1c06f9(0x0, 0x67), assertEquals(0x65, _0x16dfaa(0x0)), assertEquals(0x67, _0x4af4a4(0x0)), assertEquals(0x66, _0x16dfaa(0x4)), assertEquals(0x0, _0x4af4a4(0x4)), _0x1c06f9(0x4, 0x6b), assertEquals(0x65, _0x16dfaa(0x0)), assertEquals(0x67, _0x4af4a4(0x0)), assertEquals(0x66, _0x16dfaa(0x4)), assertEquals(0x6b, _0x4af4a4(0x4)), _0x2ff7d2(0x0, 0x0), _0x2ff7d2(0x4, 0x0), _0x1c06f9(0x0, 0x0), _0x1c06f9(0x4, 0x0);
}
(function SimpleMemoryIndependenceTest() {
    const _0x36fe95 = _0x14d0da;
    print(_0x36fe95(0x1ad));
    let _0x2ea170 = 0x1, _0x207ee9 = new WasmModuleBuilder();
    _0x207ee9['addMemory'](_0x2ea170, _0x2ea170, !![]), _0x207ee9[_0x36fe95(0x1a9)]('store', kSig_v_ii)[_0x36fe95(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x1,
        kExprI32StoreMem,
        0x0,
        0x0
    ])[_0x36fe95(0x1ab)](), _0x207ee9[_0x36fe95(0x1a9)]('load', kSig_i_i)['addBody']([
        kExprLocalGet,
        0x0,
        kExprI32LoadMem,
        0x0,
        0x0
    ])[_0x36fe95(0x1ab)]();
    var _0x1b2c86 = _0x207ee9[_0x36fe95(0x1ae)]();
    _0x207ee9 = new WasmModuleBuilder(), _0x207ee9[_0x36fe95(0x1a6)](_0x36fe95(0x1af), 'store', kSig_v_ii), _0x207ee9['addMemory'](_0x2ea170, _0x2ea170, !![]), _0x207ee9[_0x36fe95(0x1a9)](_0x36fe95(0x1ac), kSig_v_ii)['addBody']([
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x1,
        kExprCallFunction,
        0x0
    ])[_0x36fe95(0x1ab)](), _0x207ee9[_0x36fe95(0x1a9)](_0x36fe95(0x1b0), kSig_i_i)[_0x36fe95(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprI32LoadMem,
        0x0,
        0x0
    ])[_0x36fe95(0x1ab)]();
    var _0x4b4d21 = _0x207ee9[_0x36fe95(0x1ae)]({ 'mod': { 'store': _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1ac)] } });
    assertEquals(0x0, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x0, _0x4b4d21['exports'][_0x36fe95(0x1b0)](0x0)), assertEquals(0x0, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), _0x1b2c86[_0x36fe95(0x1b1)]['store'](0x0, 0x65), assertEquals(0x65, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x0, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)]['load'](0x4)), _0x1b2c86[_0x36fe95(0x1b1)]['store'](0x4, 0x66), assertEquals(0x65, _0x1b2c86[_0x36fe95(0x1b1)]['load'](0x0)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x66, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1ac)](0x4, 0x6b), assertEquals(0x65, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x0, _0x4b4d21[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x0)), assertEquals(0x6b, _0x1b2c86[_0x36fe95(0x1b1)][_0x36fe95(0x1b0)](0x4)), assertEquals(0x0, _0x4b4d21['exports'][_0x36fe95(0x1b0)](0x4));
}(), function TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory() {
    const _0x3ef3be = _0x14d0da;
    print(_0x3ef3be(0x1b2));
    let _0x5d9f27 = generateBuilder(add_memory = ![], import_sig = kSig_i_i);
    _0x5d9f27[_0x3ef3be(0x1a9)](_0x3ef3be(0x1b3), kSig_i_i)['addBody']([
        kExprLocalGet,
        0x0,
        kExprCallFunction,
        other_fn_idx,
        kExprI32Const,
        0x1,
        kExprI32Add,
        kExprReturn
    ])[_0x3ef3be(0x1ab)]();
    let _0x1dc4b5 = generateBuilder(add_memory = !![], import_sig = undefined), _0x3dbc04 = kPageSize - 0x4, _0x4c4e25 = 0x8ae, _0x4b9055 = _0x1dc4b5['instantiate'](), _0x57747e = _0x5d9f27[_0x3ef3be(0x1ae)]({ 'import_module': { 'other_module_fn': _0x4b9055[_0x3ef3be(0x1b1)][_0x3ef3be(0x1b0)] } });
    _0x4b9055['exports'][_0x3ef3be(0x1ac)](_0x3dbc04, _0x4c4e25), assertEquals(_0x4c4e25, _0x4b9055[_0x3ef3be(0x1b1)][_0x3ef3be(0x1b0)](_0x3dbc04)), assertEquals(_0x4c4e25 + 0x1, _0x57747e[_0x3ef3be(0x1b1)]['plus_one'](_0x3dbc04));
}(), function TestExternalCallBetweenTwoWasmModulesWithMemory() {
    const _0x22b292 = _0x14d0da;
    print('TestExternalCallBetweenTwoWasmModulesWithMemory');
    let _0x28b8a5 = generateBuilder(add_memory = !![], import_sig = kSig_i_i);
    _0x28b8a5[_0x22b292(0x1a9)]('plus_one', kSig_i_i)[_0x22b292(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprCallFunction,
        other_fn_idx,
        kExprI32Const,
        0x1,
        kExprI32Add,
        kExprReturn
    ])[_0x22b292(0x1ab)]();
    let _0x42cee7 = generateBuilder(add_memory = !![], import_sig = undefined), _0x58b6af = kPageSize - 0x4, _0xd8ff96 = 0x457, _0x112f77 = 0x8ae, _0x5f05a7 = _0x42cee7[_0x22b292(0x1ae)](), _0xd536b4 = _0x28b8a5['instantiate']({ 'import_module': { 'other_module_fn': _0x5f05a7[_0x22b292(0x1b1)]['load'] } });
    _0xd536b4[_0x22b292(0x1b1)][_0x22b292(0x1ac)](_0x58b6af, _0xd8ff96), _0x5f05a7[_0x22b292(0x1b1)]['store'](_0x58b6af, _0x112f77), assertEquals(_0xd8ff96, _0xd536b4[_0x22b292(0x1b1)][_0x22b292(0x1b0)](_0x58b6af)), assertEquals(_0x112f77, _0x5f05a7[_0x22b292(0x1b1)][_0x22b292(0x1b0)](_0x58b6af)), assertEquals(_0x112f77 + 0x1, _0xd536b4[_0x22b292(0x1b1)][_0x22b292(0x1b3)](_0x58b6af));
}(), function TestCorrectMemoryAccessedAfterReturningFromExternalCall() {
    const _0x5de9c2 = _0x14d0da;
    print(_0x5de9c2(0x1b4));
    let _0x52f45f = generateBuilder(add_memory = !![], import_sig = kSig_i_ii);
    _0x52f45f[_0x5de9c2(0x1a9)](_0x5de9c2(0x1b5), kSig_i_iii)[_0x5de9c2(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x1,
        kExprI32StoreMem,
        0x0,
        0x0,
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x2,
        kExprCallFunction,
        other_fn_idx,
        kExprDrop,
        kExprLocalGet,
        0x0,
        kExprI32LoadMem,
        0x0,
        0x0,
        kExprReturn
    ])[_0x5de9c2(0x1ab)]();
    let _0x4c5ab4 = generateBuilder(add_memory = !![], import_sig = undefined), _0x4cd2a0 = kPageSize - 0x4, _0x414102 = 0x457, _0x54fe7d = 0x8ae, _0x1ec675 = _0x4c5ab4[_0x5de9c2(0x1ae)](), _0x3f41c3 = _0x52f45f[_0x5de9c2(0x1ae)]({ 'import_module': { 'other_module_fn': _0x1ec675[_0x5de9c2(0x1b1)][_0x5de9c2(0x1ac)] } });
    assertEquals(_0x414102, _0x3f41c3[_0x5de9c2(0x1b1)]['sandwich'](_0x4cd2a0, _0x414102, _0x54fe7d)), assertEquals(_0x414102, _0x3f41c3[_0x5de9c2(0x1b1)][_0x5de9c2(0x1b0)](_0x4cd2a0)), assertEquals(_0x54fe7d, _0x1ec675[_0x5de9c2(0x1b1)][_0x5de9c2(0x1b0)](_0x4cd2a0));
}(), function CallThroughTableMemoryIndependenceTest() {
    const _0x2ca336 = _0x14d0da;
    print(_0x2ca336(0x1b6));
    let _0x3fb01e = 0x2, _0x34f30b = 0x1, _0x204a74 = new WasmModuleBuilder();
    _0x204a74['addMemory'](_0x34f30b, _0x34f30b, !![]), _0x204a74['addFunction'](_0x2ca336(0x1ac), kSig_v_ii)['addBody']([
        kExprLocalGet,
        0x0,
        kExprLocalGet,
        0x1,
        kExprI32StoreMem,
        0x0,
        0x0
    ])[_0x2ca336(0x1ab)](), _0x204a74[_0x2ca336(0x1a9)](_0x2ca336(0x1b0), kSig_i_i)[_0x2ca336(0x1aa)]([
        kExprLocalGet,
        0x0,
        kExprI32LoadMem,
        0x0,
        0x0
    ])[_0x2ca336(0x1ab)]();
    {
        let _0x5b6201 = _0x204a74[_0x2ca336(0x1b7)]();
        var _0x477c80 = new WebAssembly[(_0x2ca336(0x1b8))](_0x5b6201), _0x54d9cb = new WebAssembly[(_0x2ca336(0x1b8))](_0x5b6201);
        assertMemoryIndependence(_0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x477c80['exports'][_0x2ca336(0x1ac)], _0x54d9cb[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x54d9cb['exports']['store']);
    }
    let _0x4b4f4b = new WebAssembly[(_0x2ca336(0x1b9))]({
        'element': _0x2ca336(0x1ba),
        'initial': _0x3fb01e,
        'maximum': _0x3fb01e
    });
    _0x4b4f4b[_0x2ca336(0x1bb)](0x0, _0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1ac)]), _0x4b4f4b[_0x2ca336(0x1bb)](0x1, _0x54d9cb[_0x2ca336(0x1b1)][_0x2ca336(0x1ac)]), assertMemoryIndependence(_0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x4b4f4b[_0x2ca336(0x1bc)](0x0), _0x54d9cb[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x4b4f4b[_0x2ca336(0x1bc)](0x1)), _0x4b4f4b['set'](0x1, _0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1ac)]), _0x4b4f4b[_0x2ca336(0x1bb)](0x0, _0x54d9cb[_0x2ca336(0x1b1)]['store']), assertMemoryIndependence(_0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x4b4f4b[_0x2ca336(0x1bc)](0x1), _0x54d9cb['exports'][_0x2ca336(0x1b0)], _0x4b4f4b['get'](0x0)), _0x204a74 = new WasmModuleBuilder(), _0x204a74[_0x2ca336(0x1bd)]('m', _0x2ca336(0x1be), _0x3fb01e, _0x3fb01e);
    var _0x3fcf84 = _0x204a74['addType'](kSig_v_ii);
    _0x204a74[_0x2ca336(0x1a9)]('store', kSig_v_iii)['addBody']([
        kExprLocalGet,
        0x1,
        kExprLocalGet,
        0x2,
        kExprLocalGet,
        0x0,
        kExprCallIndirect,
        _0x3fcf84,
        kTableZero
    ])[_0x2ca336(0x1ab)]();
    let _0x38f1cf = _0x204a74[_0x2ca336(0x1ae)]({ 'm': { 'table': _0x4b4f4b } }), _0x3e959e = 0x1, _0x391ba4 = 0x0, _0x47a649 = (_0x507aaf, _0x29b8f5) => _0x38f1cf[_0x2ca336(0x1b1)][_0x2ca336(0x1ac)](_0x3e959e, _0x507aaf, _0x29b8f5), _0x1f7c03 = (_0x5cd10a, _0x227971) => _0x38f1cf[_0x2ca336(0x1b1)][_0x2ca336(0x1ac)](_0x391ba4, _0x5cd10a, _0x227971);
    assertMemoryIndependence(_0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x47a649, _0x54d9cb[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x1f7c03), _0x4b4f4b[_0x2ca336(0x1bb)](0x0, _0x477c80['exports']['store']), _0x4b4f4b[_0x2ca336(0x1bb)](0x1, _0x54d9cb['exports'][_0x2ca336(0x1ac)]), _0x3e959e = 0x0, _0x391ba4 = 0x1, assertMemoryIndependence(_0x477c80[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x47a649, _0x54d9cb[_0x2ca336(0x1b1)][_0x2ca336(0x1b0)], _0x1f7c03);
}());
