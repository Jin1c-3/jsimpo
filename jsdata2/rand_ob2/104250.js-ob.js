'use strict';
const _0x4bd5 = [
    'MethodDefinition',
    'ClassMethod',
    'TSDeclareMethod',
    'TSPropertySignature',
    'ObjectTypeProperty',
    'key',
    'object',
    'Identifier',
    'JSXElement',
    'openingElement',
    'name',
    'style',
    'attributes',
    'some',
    'jsx',
    'TemplateLiteral',
    'JSXAttribute',
    'css',
    'test',
    'replace',
    'callee',
    'Decorator',
    'CallExpression',
    'Component',
    'arguments',
    'length',
    'properties',
    'entries',
    'styles',
    'ArrayExpression',
    'elements',
    'MemberExpression',
    'tag',
    'markdown',
    'quasi',
    'leadingComments',
    'GraphQL',
    'HTML',
    'graphql',
    'trimEnd',
    'TSIntersectionType',
    'TSUnionType',
    'types',
    'exports',
    '402032bjZmsT',
    '1numnDj',
    '1411341QjkWsm',
    '8103tKZSGn',
    '199qPZAeM',
    '1534383gZKcev',
    '43JFpzTc',
    '9949VBnVXR',
    '48785KXzCIv',
    '2180921ufDJIj',
    '1QwMRaa',
    'range',
    'trailingComments',
    'innerComments',
    'extra',
    'start',
    'end',
    'loc',
    'errors',
    'tokens',
    'quasis',
    'value',
    'Program',
    'sourceType',
    'type',
    'BigIntLiteralTypeAnnotation',
    'BigIntLiteral',
    'Literal',
    'bigint',
    'toLowerCase',
    'DecimalLiteral',
    'decimal',
    'JSXText',
    'JSXExpressionContainer',
    'expression',
    'StringLiteral',
    'Property'
];
const _0x44212e = _0x4aae;
(function (_0x1ae1a2, _0x239697) {
    const _0x12bcdd = _0x4aae;
    while (!![]) {
        try {
            const _0x19bb04 = parseInt(_0x12bcdd(0x113)) * -parseInt(_0x12bcdd(0x114)) + -parseInt(_0x12bcdd(0x115)) + parseInt(_0x12bcdd(0x116)) * parseInt(_0x12bcdd(0x117)) + -parseInt(_0x12bcdd(0x118)) + -parseInt(_0x12bcdd(0x119)) * -parseInt(_0x12bcdd(0x11a)) + -parseInt(_0x12bcdd(0x11b)) + parseInt(_0x12bcdd(0x11c)) * parseInt(_0x12bcdd(0x11d));
            if (_0x19bb04 === _0x239697)
                break;
            else
                _0x1ae1a2['push'](_0x1ae1a2['shift']());
        } catch (_0x4afcd6) {
            _0x1ae1a2['push'](_0x1ae1a2['shift']());
        }
    }
}(_0x4bd5, 0xc956c));
function _0x4aae(_0xa3e95b, _0x47c053) {
    return _0x4aae = function (_0x4bd57a, _0x4aae27) {
        _0x4bd57a = _0x4bd57a - 0x113;
        let _0x586a82 = _0x4bd5[_0x4bd57a];
        return _0x586a82;
    }, _0x4aae(_0xa3e95b, _0x47c053);
}
const {isBlockComment} = require('./utils.js'), ignoredProperties = new Set([
        _0x44212e(0x11e),
        'raw',
        'comments',
        'leadingComments',
        _0x44212e(0x11f),
        _0x44212e(0x120),
        _0x44212e(0x121),
        _0x44212e(0x122),
        _0x44212e(0x123),
        _0x44212e(0x124),
        'flags',
        _0x44212e(0x125),
        _0x44212e(0x126)
    ]), removeTemplateElementsValue = _0x2f4e94 => {
        const _0x602bad = _0x44212e;
        for (const _0x424a06 of _0x2f4e94[_0x602bad(0x127)]) {
            delete _0x424a06[_0x602bad(0x128)];
        }
    };
function clean(_0x165dbb, _0x5bfa89, _0x5641b6) {
    const _0x4c4ce9 = _0x44212e;
    _0x165dbb['type'] === _0x4c4ce9(0x129) && delete _0x5bfa89[_0x4c4ce9(0x12a)];
    (_0x165dbb[_0x4c4ce9(0x12b)] === 'BigIntLiteral' || _0x165dbb['type'] === _0x4c4ce9(0x12c)) && (_0x5bfa89[_0x4c4ce9(0x128)] && (_0x5bfa89['value'] = _0x5bfa89[_0x4c4ce9(0x128)]['toLowerCase']()));
    (_0x165dbb['type'] === _0x4c4ce9(0x12d) || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x12e)) && (_0x5bfa89[_0x4c4ce9(0x12f)] && (_0x5bfa89['bigint'] = _0x5bfa89['bigint'][_0x4c4ce9(0x130)]()));
    _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x131) && (_0x5bfa89[_0x4c4ce9(0x128)] = Number(_0x5bfa89[_0x4c4ce9(0x128)]));
    _0x165dbb['type'] === _0x4c4ce9(0x12e) && _0x5bfa89[_0x4c4ce9(0x132)] && (_0x5bfa89[_0x4c4ce9(0x132)] = Number(_0x5bfa89['decimal']));
    if (_0x165dbb['type'] === 'EmptyStatement')
        return null;
    if (_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x133))
        return null;
    if (_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x134) && (_0x165dbb['expression'][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x12e) || _0x165dbb[_0x4c4ce9(0x135)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x136)) && _0x165dbb[_0x4c4ce9(0x135)][_0x4c4ce9(0x128)] === '\x20')
        return null;
    (_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x137) || _0x165dbb[_0x4c4ce9(0x12b)] === 'ObjectProperty' || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x138) || _0x165dbb['type'] === 'ClassProperty' || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x139) || _0x165dbb['type'] === 'PropertyDefinition' || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x13a) || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x13b) || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x13c)) && typeof _0x165dbb[_0x4c4ce9(0x13d)] === _0x4c4ce9(0x13e) && _0x165dbb[_0x4c4ce9(0x13d)] && (_0x165dbb['key'][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x12e) || _0x165dbb[_0x4c4ce9(0x13d)]['type'] === 'NumericLiteral' || _0x165dbb[_0x4c4ce9(0x13d)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x136) || _0x165dbb[_0x4c4ce9(0x13d)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x13f)) && delete _0x5bfa89[_0x4c4ce9(0x13d)];
    if (_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x140) && _0x165dbb[_0x4c4ce9(0x141)][_0x4c4ce9(0x142)][_0x4c4ce9(0x142)] === _0x4c4ce9(0x143) && _0x165dbb['openingElement'][_0x4c4ce9(0x144)][_0x4c4ce9(0x145)](_0x3f6252 => _0x3f6252[_0x4c4ce9(0x142)]['name'] === _0x4c4ce9(0x146)))
        for (const {
                    type: _0x1090d5,
                    expression: _0x2d9589
                } of _0x5bfa89['children']) {
            _0x1090d5 === _0x4c4ce9(0x134) && _0x2d9589[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x147) && removeTemplateElementsValue(_0x2d9589);
        }
    _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x148) && _0x165dbb['name'][_0x4c4ce9(0x142)] === _0x4c4ce9(0x149) && _0x165dbb['value'][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x134) && _0x165dbb[_0x4c4ce9(0x128)][_0x4c4ce9(0x135)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x147) && removeTemplateElementsValue(_0x5bfa89[_0x4c4ce9(0x128)]['expression']);
    _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x148) && _0x165dbb[_0x4c4ce9(0x128)] && _0x165dbb[_0x4c4ce9(0x128)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x12e) && /["']|&quot;|&apos;/[_0x4c4ce9(0x14a)](_0x165dbb['value'][_0x4c4ce9(0x128)]) && (_0x5bfa89['value'][_0x4c4ce9(0x128)] = _0x5bfa89[_0x4c4ce9(0x128)]['value'][_0x4c4ce9(0x14b)](/["']|&quot;|&apos;/g, '\x22'));
    const _0x98922f = _0x165dbb[_0x4c4ce9(0x135)] || _0x165dbb[_0x4c4ce9(0x14c)];
    if (_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x14d) && _0x98922f['type'] === _0x4c4ce9(0x14e) && _0x98922f[_0x4c4ce9(0x14c)][_0x4c4ce9(0x142)] === _0x4c4ce9(0x14f) && _0x98922f[_0x4c4ce9(0x150)][_0x4c4ce9(0x151)] === 0x1) {
        const _0x2ce8be = _0x165dbb['expression'][_0x4c4ce9(0x150)][0x0][_0x4c4ce9(0x152)];
        for (const [_0x57781a, _0x1f189e] of _0x5bfa89[_0x4c4ce9(0x135)]['arguments'][0x0][_0x4c4ce9(0x152)][_0x4c4ce9(0x153)]()) {
            switch (_0x2ce8be[_0x57781a][_0x4c4ce9(0x13d)]['name']) {
            case _0x4c4ce9(0x154):
                _0x1f189e['value'][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x155) && removeTemplateElementsValue(_0x1f189e['value'][_0x4c4ce9(0x156)][0x0]);
                break;
            case 'template':
                _0x1f189e['value']['type'] === _0x4c4ce9(0x147) && removeTemplateElementsValue(_0x1f189e[_0x4c4ce9(0x128)]);
                break;
            }
        }
    }
    _0x165dbb['type'] === 'TaggedTemplateExpression' && (_0x165dbb['tag']['type'] === _0x4c4ce9(0x157) || _0x165dbb[_0x4c4ce9(0x158)]['type'] === _0x4c4ce9(0x13f) && (_0x165dbb[_0x4c4ce9(0x158)][_0x4c4ce9(0x142)] === 'gql' || _0x165dbb['tag']['name'] === 'graphql' || _0x165dbb[_0x4c4ce9(0x158)]['name'] === 'css' || _0x165dbb[_0x4c4ce9(0x158)][_0x4c4ce9(0x142)] === 'md' || _0x165dbb[_0x4c4ce9(0x158)][_0x4c4ce9(0x142)] === _0x4c4ce9(0x159) || _0x165dbb[_0x4c4ce9(0x158)][_0x4c4ce9(0x142)] === 'html') || _0x165dbb[_0x4c4ce9(0x158)][_0x4c4ce9(0x12b)] === _0x4c4ce9(0x14e)) && removeTemplateElementsValue(_0x5bfa89[_0x4c4ce9(0x15a)]);
    if (_0x165dbb[_0x4c4ce9(0x12b)] === 'TemplateLiteral') {
        const _0x1f1ffd = _0x165dbb[_0x4c4ce9(0x15b)] && _0x165dbb[_0x4c4ce9(0x15b)][_0x4c4ce9(0x145)](_0x1aad36 => isBlockComment(_0x1aad36) && [
            _0x4c4ce9(0x15c),
            _0x4c4ce9(0x15d)
        ][_0x4c4ce9(0x145)](_0x1623a5 => _0x1aad36[_0x4c4ce9(0x128)] === '\x20' + _0x1623a5 + '\x20'));
        (_0x1f1ffd || _0x5641b6[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x14e) && _0x5641b6['callee'][_0x4c4ce9(0x142)] === _0x4c4ce9(0x15e) || !_0x165dbb[_0x4c4ce9(0x15b)]) && removeTemplateElementsValue(_0x5bfa89);
    }
    _0x165dbb['type'] === 'InterpreterDirective' && (_0x5bfa89[_0x4c4ce9(0x128)] = _0x5bfa89['value'][_0x4c4ce9(0x15f)]());
    if ((_0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x160) || _0x165dbb[_0x4c4ce9(0x12b)] === _0x4c4ce9(0x161)) && _0x165dbb[_0x4c4ce9(0x162)][_0x4c4ce9(0x151)] === 0x1)
        return _0x5bfa89['types'][0x0];
}
clean['ignoredProperties'] = ignoredProperties, module[_0x44212e(0x163)] = clean;
