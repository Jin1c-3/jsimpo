'use strict';
const _0x39b6 = [
    '391654qCxXeL',
    '3aErIaB',
    '1173968JNwsCf',
    '1148414bUVjob',
    '355947yWpOyv',
    '1OXxxfI',
    '3088066HTgcrM',
    '../common.js',
    'createBenchmark',
    'alloc',
    'length',
    'compare',
    'start',
    'end',
    '1480746kwnleo',
    '831756XXCKqq'
];
const _0x47a007 = _0x113a;
(function (_0x350753, _0x23e2f5) {
    const _0x541cf4 = _0x113a;
    while (!![]) {
        try {
            const _0x1a26cc = -parseInt(_0x541cf4(0xbf)) + parseInt(_0x541cf4(0xc0)) + -parseInt(_0x541cf4(0xc1)) * parseInt(_0x541cf4(0xc2)) + parseInt(_0x541cf4(0xc3)) + -parseInt(_0x541cf4(0xc4)) + -parseInt(_0x541cf4(0xc5)) + -parseInt(_0x541cf4(0xc6)) * -parseInt(_0x541cf4(0xc7));
            if (_0x1a26cc === _0x23e2f5)
                break;
            else
                _0x350753['push'](_0x350753['shift']());
        } catch (_0x259a6b) {
            _0x350753['push'](_0x350753['shift']());
        }
    }
}(_0x39b6, 0xe3f59));
const common = require(_0x47a007(0xc8)), bench = common[_0x47a007(0xc9)](main, {
        'size': [
            0x10,
            0x200,
            0x1000,
            0x4002
        ],
        'args': [
            0x1,
            0x2,
            0x5
        ],
        'n': [0xf4240]
    });
function _0x113a(_0x49ddd9, _0x425d6c) {
    return _0x113a = function (_0x39b69e, _0x113a17) {
        _0x39b69e = _0x39b69e - 0xbf;
        let _0x2d770e = _0x39b6[_0x39b69e];
        return _0x2d770e;
    }, _0x113a(_0x49ddd9, _0x425d6c);
}
function main({
    n: _0x57e7f1,
    size: _0x5c9b98,
    args: _0x38f12a
}) {
    const _0x4cbb42 = _0x47a007, _0x177da4 = Buffer[_0x4cbb42(0xca)](_0x5c9b98, 'a'), _0x153e03 = Buffer['alloc'](_0x5c9b98, 'a'), _0x5e69ad = _0x177da4[_0x4cbb42(0xcb)], _0x397803 = _0x153e03[_0x4cbb42(0xcb)];
    _0x153e03[_0x5c9b98 - 0x1] = 'b'['charCodeAt'](0x0);
    switch (_0x38f12a) {
    case 0x2:
        _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0), bench[_0x4cbb42(0xcd)]();
        for (let _0x1f3aaf = 0x0; _0x1f3aaf < _0x57e7f1; _0x1f3aaf++) {
            _0x177da4['compare'](_0x153e03, 0x0);
        }
        bench[_0x4cbb42(0xce)](_0x57e7f1);
        break;
    case 0x3:
        _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803), bench[_0x4cbb42(0xcd)]();
        for (let _0x4e70c3 = 0x0; _0x4e70c3 < _0x57e7f1; _0x4e70c3++) {
            _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803);
        }
        bench['end'](_0x57e7f1);
        break;
    case 0x4:
        _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803, 0x0), bench[_0x4cbb42(0xcd)]();
        for (let _0x365e9b = 0x0; _0x365e9b < _0x57e7f1; _0x365e9b++) {
            _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803, 0x0);
        }
        bench['end'](_0x57e7f1);
        break;
    case 0x5:
        _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803, 0x0, _0x5e69ad), bench[_0x4cbb42(0xcd)]();
        for (let _0x3f77c8 = 0x0; _0x3f77c8 < _0x57e7f1; _0x3f77c8++) {
            _0x177da4[_0x4cbb42(0xcc)](_0x153e03, 0x0, _0x397803, 0x0, _0x5e69ad);
        }
        bench[_0x4cbb42(0xce)](_0x57e7f1);
        break;
    default:
        _0x177da4[_0x4cbb42(0xcc)](_0x153e03), bench[_0x4cbb42(0xcd)]();
        for (let _0x60d1cc = 0x0; _0x60d1cc < _0x57e7f1; _0x60d1cc++) {
            _0x177da4[_0x4cbb42(0xcc)](_0x153e03);
        }
        bench[_0x4cbb42(0xce)](_0x57e7f1);
    }
}
