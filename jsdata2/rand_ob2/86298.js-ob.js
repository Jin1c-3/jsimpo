/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var _0x2cc3 = [
    'actualBoundingBoxAscent',
    'actualBoundingBoxDescent',
    'remove',
    'ceil',
    'baselineX',
    'baselineY',
    'width',
    'height',
    'fillStyle',
    '#f00',
    'fillRect',
    'font',
    'alphabetic',
    '#000',
    'fillText',
    'testString',
    'getImageData',
    'descent',
    'ascent',
    'data',
    'length',
    'fontSize',
    'exports',
    '1031508fNntZX',
    '781834DuDcSk',
    '1251728dpJVSN',
    '517796RXiPzJ',
    '1HdiPjg',
    '23352whcfWx',
    '896612LsWHST',
    '3bsKezm',
    '254297ChPqpG',
    '../../display/canvas/CanvasPool',
    'create',
    'getContext',
    'syncFont',
    'measureText'
];
var _0x12ed07 = _0x31e2;
(function (_0x17fccf, _0x300f34) {
    var _0x308374 = _0x31e2;
    while (!![]) {
        try {
            var _0x5a13aa = -parseInt(_0x308374(0xbb)) + parseInt(_0x308374(0xbc)) + parseInt(_0x308374(0xbd)) + parseInt(_0x308374(0xbe)) * -parseInt(_0x308374(0xbf)) + parseInt(_0x308374(0xc0)) + parseInt(_0x308374(0xc1)) + parseInt(_0x308374(0xc2)) * -parseInt(_0x308374(0xc3));
            if (_0x5a13aa === _0x300f34)
                break;
            else
                _0x17fccf['push'](_0x17fccf['shift']());
        } catch (_0x272963) {
            _0x17fccf['push'](_0x17fccf['shift']());
        }
    }
}(_0x2cc3, 0x9c933));
function _0x31e2(_0x174225, _0x2a1505) {
    return _0x31e2 = function (_0x2cc3ed, _0x31e2a6) {
        _0x2cc3ed = _0x2cc3ed - 0xbb;
        var _0x804395 = _0x2cc3[_0x2cc3ed];
        return _0x804395;
    }, _0x31e2(_0x174225, _0x2a1505);
}
var CanvasPool = require(_0x12ed07(0xc4)), MeasureText = function (_0x41942e) {
        var _0xe8e152 = _0x12ed07, _0x21f910 = CanvasPool[_0xe8e152(0xc5)](this), _0x58eccd = _0x21f910[_0xe8e152(0xc6)]('2d');
        _0x41942e[_0xe8e152(0xc7)](_0x21f910, _0x58eccd);
        var _0x50cf66 = _0x58eccd[_0xe8e152(0xc8)](_0x41942e['testString']);
        if ('actualBoundingBoxAscent' in _0x50cf66) {
            var _0x4ae329 = _0x50cf66[_0xe8e152(0xc9)], _0x3aee6b = _0x50cf66[_0xe8e152(0xca)];
            return CanvasPool[_0xe8e152(0xcb)](_0x21f910), {
                'ascent': _0x4ae329,
                'descent': _0x3aee6b,
                'fontSize': _0x4ae329 + _0x3aee6b
            };
        }
        var _0x105d49 = Math[_0xe8e152(0xcc)](_0x50cf66['width'] * _0x41942e[_0xe8e152(0xcd)]), _0x1a6c18 = _0x105d49, _0x30ea09 = 0x2 * _0x1a6c18;
        _0x1a6c18 = _0x1a6c18 * _0x41942e[_0xe8e152(0xce)] | 0x0, _0x21f910[_0xe8e152(0xcf)] = _0x105d49, _0x21f910[_0xe8e152(0xd0)] = _0x30ea09, _0x58eccd[_0xe8e152(0xd1)] = _0xe8e152(0xd2), _0x58eccd[_0xe8e152(0xd3)](0x0, 0x0, _0x105d49, _0x30ea09), _0x58eccd[_0xe8e152(0xd4)] = _0x41942e['_font'], _0x58eccd['textBaseline'] = _0xe8e152(0xd5), _0x58eccd[_0xe8e152(0xd1)] = _0xe8e152(0xd6), _0x58eccd[_0xe8e152(0xd7)](_0x41942e[_0xe8e152(0xd8)], 0x0, _0x1a6c18);
        var _0x5904b2 = {
                'ascent': 0x0,
                'descent': 0x0,
                'fontSize': 0x0
            }, _0x1482ec = _0x58eccd[_0xe8e152(0xd9)](0x0, 0x0, _0x105d49, _0x30ea09);
        if (!_0x1482ec)
            return _0x5904b2['ascent'] = _0x1a6c18, _0x5904b2[_0xe8e152(0xda)] = _0x1a6c18 + 0x6, _0x5904b2['fontSize'] = _0x5904b2[_0xe8e152(0xdb)] + _0x5904b2[_0xe8e152(0xda)], CanvasPool[_0xe8e152(0xcb)](_0x21f910), _0x5904b2;
        var _0x16b1ed = _0x1482ec[_0xe8e152(0xdc)], _0x56fd96 = _0x16b1ed[_0xe8e152(0xdd)], _0x5a29d5 = _0x105d49 * 0x4, _0x2b847b, _0x5d5cf4, _0x2ff4c4 = 0x0, _0x7036d3 = ![];
        for (_0x2b847b = 0x0; _0x2b847b < _0x1a6c18; _0x2b847b++) {
            for (_0x5d5cf4 = 0x0; _0x5d5cf4 < _0x5a29d5; _0x5d5cf4 += 0x4) {
                if (_0x16b1ed[_0x2ff4c4 + _0x5d5cf4] !== 0xff) {
                    _0x7036d3 = !![];
                    break;
                }
            }
            if (!_0x7036d3)
                _0x2ff4c4 += _0x5a29d5;
            else
                break;
        }
        _0x5904b2[_0xe8e152(0xdb)] = _0x1a6c18 - _0x2b847b, _0x2ff4c4 = _0x56fd96 - _0x5a29d5, _0x7036d3 = ![];
        for (_0x2b847b = _0x30ea09; _0x2b847b > _0x1a6c18; _0x2b847b--) {
            for (_0x5d5cf4 = 0x0; _0x5d5cf4 < _0x5a29d5; _0x5d5cf4 += 0x4) {
                if (_0x16b1ed[_0x2ff4c4 + _0x5d5cf4] !== 0xff) {
                    _0x7036d3 = !![];
                    break;
                }
            }
            if (!_0x7036d3)
                _0x2ff4c4 -= _0x5a29d5;
            else
                break;
        }
        return _0x5904b2[_0xe8e152(0xda)] = _0x2b847b - _0x1a6c18, _0x5904b2[_0xe8e152(0xde)] = _0x5904b2['ascent'] + _0x5904b2[_0xe8e152(0xda)], CanvasPool[_0xe8e152(0xcb)](_0x21f910), _0x5904b2;
    };
module[_0x12ed07(0xdf)] = MeasureText;
