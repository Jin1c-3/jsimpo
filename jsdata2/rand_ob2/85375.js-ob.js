/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @author       Felipe Alfonso <@bitnenfer>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var _0x4e48 = [
    'setTextureZero',
    'glIndexCounter',
    'glIndex',
    'bindTexture',
    'textureZero',
    'fboStack',
    'setFramebuffer',
    'renderTexture',
    'popScissor',
    'pop',
    'useProgram',
    'NEAREST',
    'REPEAT',
    'ScaleModes',
    'LINEAR',
    'antialias',
    'number',
    'createTexture2D',
    'TEXTURE_BINDING_2D',
    'texParameteri',
    'TEXTURE_MIN_FILTER',
    'TEXTURE_MAG_FILTER',
    'TEXTURE_WRAP_S',
    'TEXTURE_WRAP_T',
    'pixelStorei',
    'UNPACK_PREMULTIPLY_ALPHA_WEBGL',
    'UNPACK_FLIP_Y_WEBGL',
    'generateMipmap',
    'isAlphaPremultiplied',
    'isRenderTexture',
    'createFramebuffer',
    'createRenderbuffer',
    'bindRenderbuffer',
    'RENDERBUFFER',
    'DEPTH_STENCIL',
    'framebufferRenderbuffer',
    'DEPTH_STENCIL_ATTACHMENT',
    'framebufferTexture2D',
    'COLOR_ATTACHMENT0',
    'checkFramebufferStatus',
    'FRAMEBUFFER_COMPLETE',
    'Incomplete\x20Attachment',
    'Incomplete\x20Dimensions',
    'Framebuffer\x20Unsupported',
    'createProgram',
    'createShader',
    'VERTEX_SHADER',
    'FRAGMENT_SHADER',
    'shaderSource',
    'compileShader',
    'getShaderParameter',
    'COMPILE_STATUS',
    'Vertex\x20Shader\x20failed:\x0a',
    'getShaderInfoLog',
    'Fragment\x20Shader\x20failed:\x0a',
    'attachShader',
    'linkProgram',
    'getProgramParameter',
    'LINK_STATUS',
    'Link\x20Program\x20failed:\x0a',
    'createBuffer',
    'bindBuffer',
    'ARRAY_BUFFER',
    'bufferData',
    'ELEMENT_ARRAY_BUFFER',
    'deleteBuffer',
    'PRE_RENDER',
    'pushScissor',
    'camera',
    '_maskCamera',
    'setMulti',
    'drawFillRect',
    'flashEffect',
    'fadeEffect',
    'isRunning',
    'isComplete',
    'getTintFromFloats',
    'postRenderWebGL',
    'dirty',
    'greenGL',
    'clear',
    'COLOR_BUFFER_BIT',
    'DEPTH_BUFFER_BIT',
    'STENCIL_BUFFER_BIT',
    'scissorStack',
    'scene',
    'customViewports',
    'RENDER',
    'preRenderCamera',
    'NORMAL',
    'postRenderCamera',
    'preRenderWebGL',
    'blendMode',
    'type',
    'renderWebGL',
    'POST_RENDER',
    'callback',
    'snapshotArea',
    'drawingBufferWidth',
    'encoder',
    'getPixel',
    'min',
    'isFramebuffer',
    'bufferWidth',
    'createCanvasTexture',
    'updateCanvasTexture',
    'CLAMP_TO_EDGE',
    'videoHeight',
    'videoWidth',
    'removeEventListener',
    'webglcontextlost',
    'destroy',
    'removeAllListeners',
    'exports',
    '302698GfseUq',
    '1ubqppw',
    '1009885cQvRTK',
    '557zMTjWH',
    '2770jqGGJJ',
    '1068206MpSKDp',
    '1529957PqNtKD',
    '1670873RuEyUe',
    '1YspgZc',
    '3207907Hnlgvv',
    '../../utils/array/Remove',
    '../../utils/Class',
    'eventemitter3',
    '../events',
    '../../scale/events',
    '../../textures/events',
    '../snapshot/WebGLSnapshot',
    'call',
    'desynchronized',
    'antialiasGL',
    'premultipliedAlpha',
    'failIfMajorPerformanceCaveat',
    'powerPreference',
    'preserveDrawingBuffer',
    'config',
    'clearBeforeRender',
    'roundPixels',
    'maxTextures',
    'batchSize',
    'mipmapFilter',
    'game',
    'pipelines',
    'width',
    'height',
    'canvas',
    'blendModes',
    'contextLost',
    'snapshotState',
    'image/png',
    'currentActiveTexture',
    'startActiveTexture',
    'textureIndexes',
    'tempTextures',
    'normalTexture',
    'currentFramebuffer',
    'currentProgram',
    'currentBlendMode',
    'currentScissorEnabled',
    'currentScissor',
    'contextLostHandler',
    'contextRestoredHandler',
    'supportedExtensions',
    'instancedArraysExtension',
    'vaoExtension',
    'extensions',
    'compression',
    'drawingBufferHeight',
    'whiteTexture',
    'maskCount',
    'maskStack',
    'currentCameraMask',
    'glFuncMap',
    'currentType',
    'newType',
    'nextTypeMatch',
    'finalType',
    'textureFlush',
    'isTextureClean',
    'defaultScissor',
    'isBooted',
    'projectionMatrix',
    'projectionWidth',
    'backgroundColor',
    'context',
    'webgl',
    'contextCreation',
    'isContextLost',
    'WebGL\x20unsupported',
    'emit',
    'CONTEXT_LOST',
    'preventDefault',
    'init',
    'events',
    'addEventListener',
    'webglcontextrestored',
    'ONE_MINUS_SRC_ALPHA',
    'FUNC_ADD',
    'func',
    'ONE',
    'DST_ALPHA',
    'DST_COLOR',
    'ONE_MINUS_SRC_COLOR',
    'FUNC_REVERSE_SUBTRACT',
    'glFormats',
    'UNSIGNED_BYTE',
    'UNSIGNED_SHORT',
    'FLOAT',
    'uniformMatrix2fv',
    'uniformMatrix3fv',
    'uniform1f',
    'uniform1i',
    'uniform1iv',
    'uniform2fv',
    'uniform2iv',
    'uniform3f',
    'uniform3fv',
    'uniform3i',
    'uniform3iv',
    'uniform4f',
    'uniform4fv',
    'uniform4i',
    'MAX_TEXTURE_IMAGE_UNITS',
    'maxTextureSize',
    'getParameter',
    'MAX_TEXTURE_SIZE',
    'WEBGL_compressed_texture_',
    'WEBKIT_',
    'ETC1',
    'getExtension',
    'etc1',
    'pvrtc',
    'S3TC',
    's3tc',
    'ANGLE_instanced_arrays',
    'indexOf',
    'OES_vertex_array_object',
    'disable',
    'DEPTH_TEST',
    'CULL_FACE',
    'enable',
    'redGL',
    'blueGL',
    'alphaGL',
    'isArray',
    'deleteTexture',
    'TEXTURE0',
    'TEXTURE_2D',
    'texImage2D',
    'RGBA',
    'push',
    'activeTexture',
    'TEXTURE1',
    'setBlendMode',
    'BlendModes',
    'identity',
    'textures',
    'once',
    'READY',
    'boot',
    'scale',
    'baseSize',
    'renderTarget',
    'pipeline',
    'blankTexture',
    '__DEFAULT',
    'getFrame',
    '__WHITE',
    'bindFramebuffer',
    'FRAMEBUFFER',
    'onResize',
    'resize',
    'bind',
    'setProjectionMatrix',
    'resetTextures',
    'unbind',
    'resetProjectionMatrix',
    'viewport',
    'scissor',
    'RESIZE',
    'projectionHeight',
    'ortho',
    'hasExtension',
    'flush',
    'setScissor',
    'SCISSOR_TEST',
    'length',
    'currentMask',
    'mask',
    'isStencil',
    'SKIP_CHECK',
    'BLEND',
    'blendEquation',
    'blendFuncSeparate',
    'setTexture2D',
    'glTexture',
    'forceZero'
];
var _0x2f24ad = _0x352f;
(function (_0x41c825, _0x3d5c69) {
    var _0x113dd5 = _0x352f;
    while (!![]) {
        try {
            var _0x1acaff = parseInt(_0x113dd5(0x7f)) * parseInt(_0x113dd5(0x80)) + parseInt(_0x113dd5(0x81)) + -parseInt(_0x113dd5(0x82)) * parseInt(_0x113dd5(0x83)) + parseInt(_0x113dd5(0x84)) + -parseInt(_0x113dd5(0x85)) + -parseInt(_0x113dd5(0x86)) + -parseInt(_0x113dd5(0x87)) * -parseInt(_0x113dd5(0x88));
            if (_0x1acaff === _0x3d5c69)
                break;
            else
                _0x41c825['push'](_0x41c825['shift']());
        } catch (_0x281f90) {
            _0x41c825['push'](_0x41c825['shift']());
        }
    }
}(_0x4e48, 0xce4b0));
var ArrayRemove = require(_0x2f24ad(0x89)), CameraEvents = require('../../cameras/2d/events'), Class = require(_0x2f24ad(0x8a)), CONST = require('../../const'), EventEmitter = require(_0x2f24ad(0x8b)), Events = require(_0x2f24ad(0x8c)), GameEvents = require('../../core/events'), IsSizePowerOfTwo = require('../../math/pow2/IsSizePowerOfTwo'), Matrix4 = require('../../math/Matrix4'), NOOP = require('../../utils/NOOP'), PipelineManager = require('./PipelineManager'), RenderTarget = require('./RenderTarget'), ScaleEvents = require(_0x2f24ad(0x8d)), TextureEvents = require(_0x2f24ad(0x8e)), Utils = require('./Utils'), WebGLSnapshot = require(_0x2f24ad(0x8f)), WebGLRenderer = new Class({
        'Extends': EventEmitter,
        'initialize': function WebGLRenderer(_0x5d8c6b) {
            var _0xbeae6e = _0x2f24ad;
            EventEmitter[_0xbeae6e(0x90)](this);
            var _0x193e02 = _0x5d8c6b['config'], _0x2d9be0 = {
                    'alpha': _0x193e02['transparent'],
                    'desynchronized': _0x193e02[_0xbeae6e(0x91)],
                    'depth': ![],
                    'antialias': _0x193e02[_0xbeae6e(0x92)],
                    'premultipliedAlpha': _0x193e02[_0xbeae6e(0x93)],
                    'stencil': !![],
                    'failIfMajorPerformanceCaveat': _0x193e02[_0xbeae6e(0x94)],
                    'powerPreference': _0x193e02[_0xbeae6e(0x95)],
                    'preserveDrawingBuffer': _0x193e02[_0xbeae6e(0x96)]
                };
            this[_0xbeae6e(0x97)] = {
                'clearBeforeRender': _0x193e02[_0xbeae6e(0x98)],
                'antialias': _0x193e02['antialias'],
                'backgroundColor': _0x193e02['backgroundColor'],
                'contextCreation': _0x2d9be0,
                'roundPixels': _0x193e02[_0xbeae6e(0x99)],
                'maxTextures': _0x193e02[_0xbeae6e(0x9a)],
                'maxTextureSize': _0x193e02['maxTextureSize'],
                'batchSize': _0x193e02[_0xbeae6e(0x9b)],
                'maxLights': _0x193e02['maxLights'],
                'mipmapFilter': _0x193e02[_0xbeae6e(0x9c)]
            }, this[_0xbeae6e(0x9d)] = _0x5d8c6b, this['type'] = CONST['WEBGL'], this[_0xbeae6e(0x9e)] = null, this[_0xbeae6e(0x9f)] = 0x0, this[_0xbeae6e(0xa0)] = 0x0, this[_0xbeae6e(0xa1)] = _0x5d8c6b[_0xbeae6e(0xa1)], this[_0xbeae6e(0xa2)] = [], this[_0xbeae6e(0xa3)] = ![], this[_0xbeae6e(0xa4)] = {
                'x': 0x0,
                'y': 0x0,
                'width': 0x1,
                'height': 0x1,
                'getPixel': ![],
                'callback': null,
                'type': _0xbeae6e(0xa5),
                'encoder': 0.92,
                'isFramebuffer': ![],
                'bufferWidth': 0x0,
                'bufferHeight': 0x0
            }, this[_0xbeae6e(0xa6)] = 0x0, this[_0xbeae6e(0xa7)] = 0x0, this[_0xbeae6e(0x9a)] = 0x0, this[_0xbeae6e(0xa8)], this[_0xbeae6e(0xa9)], this['textureZero'], this[_0xbeae6e(0xaa)], this[_0xbeae6e(0xab)] = null, this['fboStack'] = [], this[_0xbeae6e(0xac)] = null, this[_0xbeae6e(0xad)] = Infinity, this[_0xbeae6e(0xae)] = ![], this[_0xbeae6e(0xaf)] = null, this['scissorStack'] = [], this[_0xbeae6e(0xb0)] = NOOP, this[_0xbeae6e(0xb1)] = NOOP, this['gl'] = null, this[_0xbeae6e(0xb2)] = null, this[_0xbeae6e(0xb3)] = null, this[_0xbeae6e(0xb4)] = null, this[_0xbeae6e(0xb5)] = {}, this['glFormats'] = [], this[_0xbeae6e(0xb6)] = {
                'ETC1': ![],
                'PVRTC': ![],
                'S3TC': ![]
            }, this[_0xbeae6e(0xb7)] = 0x0, this['blankTexture'] = null, this[_0xbeae6e(0xb8)] = null, this[_0xbeae6e(0xb9)] = 0x0, this[_0xbeae6e(0xba)] = [], this['currentMask'] = {
                'mask': null,
                'camera': null
            }, this[_0xbeae6e(0xbb)] = {
                'mask': null,
                'camera': null
            }, this[_0xbeae6e(0xbc)] = null, this[_0xbeae6e(0xbd)] = '', this[_0xbeae6e(0xbe)] = ![], this[_0xbeae6e(0xbf)] = ![], this[_0xbeae6e(0xc0)] = ![], this[_0xbeae6e(0x9c)] = null, this[_0xbeae6e(0xc1)] = 0x0, this[_0xbeae6e(0xc2)] = ![], this[_0xbeae6e(0xc3)] = [
                0x0,
                0x0,
                0x0,
                0x0
            ], this[_0xbeae6e(0xc4)] = ![], this['renderTarget'] = null, this[_0xbeae6e(0xc5)], this[_0xbeae6e(0xc6)] = 0x0, this['projectionHeight'] = 0x0, this['init'](this[_0xbeae6e(0x97)]);
        },
        'init': function (_0x322d9) {
            var _0x3604eb = _0x2f24ad, _0x7751b, _0x2708ef = this['game'], _0x492543 = this[_0x3604eb(0xa1)], _0x257e67 = _0x322d9[_0x3604eb(0xc7)];
            _0x2708ef[_0x3604eb(0x97)]['context'] ? _0x7751b = _0x2708ef[_0x3604eb(0x97)][_0x3604eb(0xc8)] : _0x7751b = _0x492543['getContext'](_0x3604eb(0xc9), _0x322d9[_0x3604eb(0xca)]) || _0x492543['getContext']('experimental-webgl', _0x322d9[_0x3604eb(0xca)]);
            if (!_0x7751b || _0x7751b[_0x3604eb(0xcb)]()) {
                this[_0x3604eb(0xa3)] = !![];
                throw new Error(_0x3604eb(0xcc));
            }
            this['gl'] = _0x7751b;
            var _0x3d71cc = this;
            this['contextLostHandler'] = function (_0x40f713) {
                var _0x15e211 = _0x3604eb;
                _0x3d71cc[_0x15e211(0xa3)] = !![], _0x3d71cc[_0x15e211(0x9d)]['events'][_0x15e211(0xcd)](GameEvents[_0x15e211(0xce)], _0x3d71cc), _0x40f713[_0x15e211(0xcf)]();
            }, this[_0x3604eb(0xb1)] = function () {
                var _0x2947ff = _0x3604eb;
                _0x3d71cc[_0x2947ff(0xa3)] = ![], _0x3d71cc[_0x2947ff(0xd0)](_0x3d71cc['config']), _0x3d71cc[_0x2947ff(0x9d)][_0x2947ff(0xd1)]['emit'](GameEvents['CONTEXT_RESTORED'], _0x3d71cc);
            }, _0x492543[_0x3604eb(0xd2)]('webglcontextlost', this[_0x3604eb(0xb0)], ![]), _0x492543[_0x3604eb(0xd2)](_0x3604eb(0xd3), this[_0x3604eb(0xb1)], ![]), _0x2708ef[_0x3604eb(0xc8)] = _0x7751b;
            for (var _0x4e3fcb = 0x0; _0x4e3fcb <= 0x1b; _0x4e3fcb++) {
                this['blendModes']['push']({
                    'func': [
                        _0x7751b['ONE'],
                        _0x7751b[_0x3604eb(0xd4)]
                    ],
                    'equation': _0x7751b[_0x3604eb(0xd5)]
                });
            }
            this['blendModes'][0x1][_0x3604eb(0xd6)] = [
                _0x7751b[_0x3604eb(0xd7)],
                _0x7751b[_0x3604eb(0xd8)]
            ], this['blendModes'][0x2][_0x3604eb(0xd6)] = [
                _0x7751b[_0x3604eb(0xd9)],
                _0x7751b[_0x3604eb(0xd4)]
            ], this['blendModes'][0x3][_0x3604eb(0xd6)] = [
                _0x7751b[_0x3604eb(0xd7)],
                _0x7751b[_0x3604eb(0xda)]
            ], this['blendModes'][0x11] = {
                'func': [
                    _0x7751b['ZERO'],
                    _0x7751b['ONE_MINUS_SRC_ALPHA']
                ],
                'equation': _0x7751b[_0x3604eb(0xdb)]
            }, this[_0x3604eb(0xdc)][0x0] = _0x7751b['BYTE'], this['glFormats'][0x1] = _0x7751b['SHORT'], this[_0x3604eb(0xdc)][0x2] = _0x7751b[_0x3604eb(0xdd)], this[_0x3604eb(0xdc)][0x3] = _0x7751b[_0x3604eb(0xde)], this[_0x3604eb(0xdc)][0x4] = _0x7751b[_0x3604eb(0xdf)], this[_0x3604eb(0xbc)] = {
                'mat2': {
                    'func': _0x7751b[_0x3604eb(0xe0)],
                    'length': 0x1,
                    'matrix': !![]
                },
                'mat3': {
                    'func': _0x7751b[_0x3604eb(0xe1)],
                    'length': 0x1,
                    'matrix': !![]
                },
                'mat4': {
                    'func': _0x7751b['uniformMatrix4fv'],
                    'length': 0x1,
                    'matrix': !![]
                },
                '1f': {
                    'func': _0x7751b[_0x3604eb(0xe2)],
                    'length': 0x1
                },
                '1fv': {
                    'func': _0x7751b['uniform1fv'],
                    'length': 0x1
                },
                '1i': {
                    'func': _0x7751b[_0x3604eb(0xe3)],
                    'length': 0x1
                },
                '1iv': {
                    'func': _0x7751b[_0x3604eb(0xe4)],
                    'length': 0x1
                },
                '2f': {
                    'func': _0x7751b['uniform2f'],
                    'length': 0x2
                },
                '2fv': {
                    'func': _0x7751b[_0x3604eb(0xe5)],
                    'length': 0x1
                },
                '2i': {
                    'func': _0x7751b['uniform2i'],
                    'length': 0x2
                },
                '2iv': {
                    'func': _0x7751b[_0x3604eb(0xe6)],
                    'length': 0x1
                },
                '3f': {
                    'func': _0x7751b[_0x3604eb(0xe7)],
                    'length': 0x3
                },
                '3fv': {
                    'func': _0x7751b[_0x3604eb(0xe8)],
                    'length': 0x1
                },
                '3i': {
                    'func': _0x7751b[_0x3604eb(0xe9)],
                    'length': 0x3
                },
                '3iv': {
                    'func': _0x7751b[_0x3604eb(0xea)],
                    'length': 0x1
                },
                '4f': {
                    'func': _0x7751b[_0x3604eb(0xeb)],
                    'length': 0x4
                },
                '4fv': {
                    'func': _0x7751b[_0x3604eb(0xec)],
                    'length': 0x1
                },
                '4i': {
                    'func': _0x7751b[_0x3604eb(0xed)],
                    'length': 0x4
                },
                '4iv': {
                    'func': _0x7751b['uniform4iv'],
                    'length': 0x1
                }
            };
            var _0x468721 = _0x7751b['getSupportedExtensions']();
            (!_0x322d9[_0x3604eb(0x9a)] || _0x322d9[_0x3604eb(0x9a)] === -0x1) && (_0x322d9[_0x3604eb(0x9a)] = _0x7751b['getParameter'](_0x7751b[_0x3604eb(0xee)]));
            !_0x322d9[_0x3604eb(0xef)] && (_0x322d9[_0x3604eb(0xef)] = _0x7751b[_0x3604eb(0xf0)](_0x7751b[_0x3604eb(0xf1)]));
            var _0x270622 = _0x3604eb(0xf2), _0x1f8143 = _0x3604eb(0xf3) + _0x270622;
            this[_0x3604eb(0xb6)][_0x3604eb(0xf4)] = _0x7751b[_0x3604eb(0xf5)](_0x270622 + _0x3604eb(0xf6)) || _0x7751b[_0x3604eb(0xf5)](_0x1f8143 + _0x3604eb(0xf6)), this['compression']['PVRTC'] = _0x7751b['getExtension'](_0x270622 + _0x3604eb(0xf7)) || _0x7751b[_0x3604eb(0xf5)](_0x1f8143 + 'pvrtc'), this['compression'][_0x3604eb(0xf8)] = _0x7751b[_0x3604eb(0xf5)](_0x270622 + 's3tc') || _0x7751b[_0x3604eb(0xf5)](_0x1f8143 + _0x3604eb(0xf9)), this[_0x3604eb(0xb2)] = _0x468721;
            var _0x4aa026 = _0x3604eb(0xfa);
            this[_0x3604eb(0xb3)] = _0x468721[_0x3604eb(0xfb)](_0x4aa026) > -0x1 ? _0x7751b[_0x3604eb(0xf5)](_0x4aa026) : null;
            var _0x50befa = _0x3604eb(0xfc);
            this[_0x3604eb(0xb4)] = _0x468721[_0x3604eb(0xfb)](_0x50befa) > -0x1 ? _0x7751b[_0x3604eb(0xf5)](_0x50befa) : null, _0x7751b[_0x3604eb(0xfd)](_0x7751b[_0x3604eb(0xfe)]), _0x7751b[_0x3604eb(0xfd)](_0x7751b[_0x3604eb(0xff)]), _0x7751b[_0x3604eb(0x100)](_0x7751b['BLEND']), _0x7751b['clearColor'](_0x257e67[_0x3604eb(0x101)], _0x257e67['greenGL'], _0x257e67[_0x3604eb(0x102)], _0x257e67[_0x3604eb(0x103)]), this[_0x3604eb(0x9c)] = _0x7751b[_0x322d9[_0x3604eb(0x9c)]], this[_0x3604eb(0x9a)] = Utils['checkShaderMax'](_0x7751b, _0x322d9[_0x3604eb(0x9a)]), this['textureIndexes'] = [];
            var _0x3fe00a = this['tempTextures'];
            if (Array[_0x3604eb(0x104)](_0x3fe00a))
                for (var _0x229fa2 = 0x0; _0x4e3fcb < this[_0x3604eb(0x9a)]; _0x229fa2++) {
                    _0x7751b[_0x3604eb(0x105)](_0x3fe00a[_0x229fa2]);
                }
            else
                _0x3fe00a = new Array(this['maxTextures']);
            for (var _0x3b82f2 = 0x0; _0x3b82f2 < this[_0x3604eb(0x9a)]; _0x3b82f2++) {
                var _0x296cbe = _0x7751b['createTexture']();
                _0x7751b['activeTexture'](_0x7751b[_0x3604eb(0x106)] + _0x3b82f2), _0x7751b['bindTexture'](_0x7751b[_0x3604eb(0x107)], _0x296cbe), _0x7751b[_0x3604eb(0x108)](_0x7751b[_0x3604eb(0x107)], 0x0, _0x7751b[_0x3604eb(0x109)], 0x1, 0x1, 0x0, _0x7751b[_0x3604eb(0x109)], _0x7751b['UNSIGNED_BYTE'], new Uint8Array([
                    0x0,
                    0x0,
                    0xff,
                    0xff
                ])), _0x3fe00a[_0x3b82f2] = _0x296cbe, this['textureIndexes'][_0x3604eb(0x10a)](_0x3b82f2);
            }
            return this[_0x3604eb(0xa9)] = _0x3fe00a, this[_0x3604eb(0xa6)] = 0x1, this[_0x3604eb(0xa7)]++, _0x7751b[_0x3604eb(0x10b)](_0x7751b[_0x3604eb(0x10c)]), this[_0x3604eb(0x9e)] = new PipelineManager(this), this[_0x3604eb(0x10d)](CONST[_0x3604eb(0x10e)]['NORMAL']), this[_0x3604eb(0xc5)] = new Matrix4()[_0x3604eb(0x10f)](), _0x2708ef[_0x3604eb(0x110)][_0x3604eb(0x111)](TextureEvents[_0x3604eb(0x112)], this[_0x3604eb(0x113)], this), this;
        },
        'boot': function () {
            var _0x214b39 = _0x2f24ad, _0x1f9619 = this[_0x214b39(0x9d)], _0x3e6a94 = this[_0x214b39(0x9e)], _0x102bf2 = _0x1f9619[_0x214b39(0x114)][_0x214b39(0x115)];
            this['width'] = _0x102bf2['width'], this[_0x214b39(0xa0)] = _0x102bf2['height'], this[_0x214b39(0xc4)] = !![], this[_0x214b39(0x116)] = new RenderTarget(this, this[_0x214b39(0x9f)], this['height'], 0x1, 0x0, !![], !![]), _0x3e6a94['boot'](_0x1f9619[_0x214b39(0x97)][_0x214b39(0x117)]), this[_0x214b39(0x118)] = _0x1f9619[_0x214b39(0x110)]['getFrame'](_0x214b39(0x119)), this[_0x214b39(0xb8)] = _0x1f9619[_0x214b39(0x110)][_0x214b39(0x11a)](_0x214b39(0x11b));
            var _0x56c2c2 = this['gl'];
            _0x56c2c2[_0x214b39(0x11c)](_0x56c2c2[_0x214b39(0x11d)], null), _0x56c2c2[_0x214b39(0x100)](_0x56c2c2['SCISSOR_TEST']), _0x1f9619[_0x214b39(0x114)]['on'](ScaleEvents['RESIZE'], this[_0x214b39(0x11e)], this), this[_0x214b39(0x11f)](_0x102bf2[_0x214b39(0x9f)], _0x102bf2[_0x214b39(0xa0)]);
        },
        'onResize': function (_0x5e1ba5, _0x218e60) {
            var _0x5aaa7b = _0x2f24ad;
            (_0x218e60[_0x5aaa7b(0x9f)] !== this['width'] || _0x218e60[_0x5aaa7b(0xa0)] !== this[_0x5aaa7b(0xa0)]) && this[_0x5aaa7b(0x11f)](_0x218e60[_0x5aaa7b(0x9f)], _0x218e60[_0x5aaa7b(0xa0)]);
        },
        'beginCapture': function (_0x1efdfa, _0x4fb227) {
            var _0x301b36 = _0x2f24ad;
            _0x1efdfa === undefined && (_0x1efdfa = this[_0x301b36(0x9f)]), _0x4fb227 === undefined && (_0x4fb227 = this['height']), this['renderTarget'][_0x301b36(0x120)](!![], _0x1efdfa, _0x4fb227), this[_0x301b36(0x121)](_0x1efdfa, _0x4fb227), this[_0x301b36(0x122)]();
        },
        'endCapture': function () {
            var _0x2aaa96 = _0x2f24ad;
            return this[_0x2aaa96(0x116)][_0x2aaa96(0x123)](!![]), this[_0x2aaa96(0x124)](), this[_0x2aaa96(0x116)];
        },
        'resize': function (_0x2e7d9d, _0x2b0577) {
            var _0x55f1c9 = _0x2f24ad, _0x3a0f19 = this['gl'];
            return this[_0x55f1c9(0x9f)] = _0x2e7d9d, this['height'] = _0x2b0577, this['setProjectionMatrix'](_0x2e7d9d, _0x2b0577), _0x3a0f19[_0x55f1c9(0x125)](0x0, 0x0, _0x2e7d9d, _0x2b0577), this[_0x55f1c9(0xb7)] = _0x3a0f19[_0x55f1c9(0xb7)], _0x3a0f19[_0x55f1c9(0x126)](0x0, _0x3a0f19['drawingBufferHeight'] - _0x2b0577, _0x2e7d9d, _0x2b0577), this[_0x55f1c9(0xc3)][0x2] = _0x2e7d9d, this[_0x55f1c9(0xc3)][0x3] = _0x2b0577, this[_0x55f1c9(0xcd)](Events[_0x55f1c9(0x127)], _0x2e7d9d, _0x2b0577), this;
        },
        'getAspectRatio': function () {
            var _0x49d04d = _0x2f24ad;
            return this[_0x49d04d(0x9f)] / this[_0x49d04d(0xa0)];
        },
        'setProjectionMatrix': function (_0xeade59, _0x24bb52) {
            var _0x4e7f1f = _0x2f24ad;
            return (_0xeade59 !== this[_0x4e7f1f(0xc6)] || _0x24bb52 !== this[_0x4e7f1f(0x128)]) && (this['projectionWidth'] = _0xeade59, this[_0x4e7f1f(0x128)] = _0x24bb52, this[_0x4e7f1f(0xc5)][_0x4e7f1f(0x129)](0x0, _0xeade59, _0x24bb52, 0x0, -0x3e8, 0x3e8)), this;
        },
        'resetProjectionMatrix': function () {
            var _0x2584fe = _0x2f24ad;
            this[_0x2584fe(0xc6)] = this[_0x2584fe(0x9f)], this[_0x2584fe(0x128)] = this['height'], this['projectionMatrix']['ortho'](0x0, this['width'], this[_0x2584fe(0xa0)], 0x0, -0x3e8, 0x3e8);
        },
        'hasExtension': function (_0x24c617) {
            var _0x22f7f5 = _0x2f24ad;
            return this[_0x22f7f5(0xb2)] ? this[_0x22f7f5(0xb2)][_0x22f7f5(0xfb)](_0x24c617) : ![];
        },
        'getExtension': function (_0x147d2e) {
            var _0x4ef7d1 = _0x2f24ad;
            if (!this[_0x4ef7d1(0x12a)](_0x147d2e))
                return null;
            return !(_0x147d2e in this[_0x4ef7d1(0xb5)]) && (this[_0x4ef7d1(0xb5)][_0x147d2e] = this['gl'][_0x4ef7d1(0xf5)](_0x147d2e)), this['extensions'][_0x147d2e];
        },
        'flush': function () {
            var _0x299886 = _0x2f24ad;
            this[_0x299886(0x9e)][_0x299886(0x12b)]();
        },
        'pushScissor': function (_0x5a0e29, _0x4a852d, _0x8d8276, _0x208d08, _0x2f22aa) {
            var _0x423220 = _0x2f24ad;
            _0x2f22aa === undefined && (_0x2f22aa = this[_0x423220(0xb7)]);
            var _0x15443a = this['scissorStack'], _0x54da1c = [
                    _0x5a0e29,
                    _0x4a852d,
                    _0x8d8276,
                    _0x208d08
                ];
            return _0x15443a[_0x423220(0x10a)](_0x54da1c), this[_0x423220(0x12c)](_0x5a0e29, _0x4a852d, _0x8d8276, _0x208d08, _0x2f22aa), this[_0x423220(0xaf)] = _0x54da1c, _0x54da1c;
        },
        'setScissor': function (_0xdae629, _0x5da2b8, _0x525717, _0x7a08ac, _0x57232e) {
            var _0x5e4b7b = _0x2f24ad;
            _0x57232e === undefined && (_0x57232e = this[_0x5e4b7b(0xb7)]);
            var _0x57a803 = this['gl'], _0xa5da6 = this[_0x5e4b7b(0xaf)], _0x566b95 = _0x525717 > 0x0 && _0x7a08ac > 0x0;
            if (_0xa5da6 && _0x566b95) {
                var _0x1ea0a6 = _0xa5da6[0x0], _0x1b92b5 = _0xa5da6[0x1], _0x2a33a8 = _0xa5da6[0x2], _0x478f4c = _0xa5da6[0x3];
                _0x566b95 = _0x1ea0a6 !== _0xdae629 || _0x1b92b5 !== _0x5da2b8 || _0x2a33a8 !== _0x525717 || _0x478f4c !== _0x7a08ac;
            }
            _0x566b95 && (this[_0x5e4b7b(0x12b)](), _0x57a803['scissor'](_0xdae629, _0x57232e - _0x5da2b8 - _0x7a08ac, _0x525717, _0x7a08ac));
        },
        'resetScissor': function () {
            var _0x594346 = _0x2f24ad, _0x29535d = this['gl'];
            _0x29535d[_0x594346(0x100)](_0x29535d[_0x594346(0x12d)]);
            var _0xf888c7 = this[_0x594346(0xaf)];
            if (_0xf888c7) {
                var _0x33aec0 = _0xf888c7[0x0], _0xc8faea = _0xf888c7[0x1], _0xb832c1 = _0xf888c7[0x2], _0x38f1ad = _0xf888c7[0x3];
                _0xb832c1 > 0x0 && _0x38f1ad > 0x0 && _0x29535d['scissor'](_0x33aec0, this[_0x594346(0xb7)] - _0xc8faea - _0x38f1ad, _0xb832c1, _0x38f1ad);
            }
        },
        'popScissor': function () {
            var _0x52a922 = _0x2f24ad, _0x743799 = this['scissorStack'];
            _0x743799['pop']();
            var _0x4c7c6a = _0x743799[_0x743799[_0x52a922(0x12e)] - 0x1];
            _0x4c7c6a && this[_0x52a922(0x12c)](_0x4c7c6a[0x0], _0x4c7c6a[0x1], _0x4c7c6a[0x2], _0x4c7c6a[0x3]), this[_0x52a922(0xaf)] = _0x4c7c6a;
        },
        'hasActiveStencilMask': function () {
            var _0x201e38 = _0x2f24ad, _0x11f77b = this[_0x201e38(0x12f)][_0x201e38(0x130)], _0x284cb3 = this['currentCameraMask'][_0x201e38(0x130)];
            return _0x11f77b && _0x11f77b[_0x201e38(0x131)] || _0x284cb3 && _0x284cb3[_0x201e38(0x131)];
        },
        'resetViewport': function () {
            var _0x5343b7 = _0x2f24ad, _0x8e3dd5 = this['gl'];
            _0x8e3dd5[_0x5343b7(0x125)](0x0, 0x0, this['width'], this[_0x5343b7(0xa0)]), this['drawingBufferHeight'] = _0x8e3dd5[_0x5343b7(0xb7)];
        },
        'setBlendMode': function (_0x272508, _0x988e23) {
            var _0x2bfc58 = _0x2f24ad;
            _0x988e23 === undefined && (_0x988e23 = ![]);
            var _0x51e32f = this['gl'], _0x5b48ab = this['blendModes'][_0x272508];
            if (_0x988e23 || _0x272508 !== CONST[_0x2bfc58(0x10e)][_0x2bfc58(0x132)] && this[_0x2bfc58(0xad)] !== _0x272508)
                return this[_0x2bfc58(0x12b)](), _0x51e32f['enable'](_0x51e32f[_0x2bfc58(0x133)]), _0x51e32f[_0x2bfc58(0x134)](_0x5b48ab['equation']), _0x5b48ab[_0x2bfc58(0xd6)][_0x2bfc58(0x12e)] > 0x2 ? _0x51e32f[_0x2bfc58(0x135)](_0x5b48ab['func'][0x0], _0x5b48ab[_0x2bfc58(0xd6)][0x1], _0x5b48ab[_0x2bfc58(0xd6)][0x2], _0x5b48ab[_0x2bfc58(0xd6)][0x3]) : _0x51e32f['blendFunc'](_0x5b48ab[_0x2bfc58(0xd6)][0x0], _0x5b48ab[_0x2bfc58(0xd6)][0x1]), this[_0x2bfc58(0xad)] = _0x272508, !![];
            return ![];
        },
        'addBlendMode': function (_0x25d940, _0xce9b31) {
            var _0x3d4354 = _0x2f24ad, _0x3507ab = this[_0x3d4354(0xa2)]['push']({
                    'func': _0x25d940,
                    'equation': _0xce9b31
                });
            return _0x3507ab - 0x1;
        },
        'updateBlendMode': function (_0x38669d, _0x1e31d8, _0x51ce74) {
            var _0x364e37 = _0x2f24ad;
            return this[_0x364e37(0xa2)][_0x38669d] && (this['blendModes'][_0x38669d]['func'] = _0x1e31d8, _0x51ce74 && (this['blendModes'][_0x38669d]['equation'] = _0x51ce74)), this;
        },
        'removeBlendMode': function (_0x56fd98) {
            var _0x287ca1 = _0x2f24ad;
            return _0x56fd98 > 0x11 && this[_0x287ca1(0xa2)][_0x56fd98] && this['blendModes']['splice'](_0x56fd98, 0x1), this;
        },
        'setBlankTexture': function () {
            var _0x3577b7 = _0x2f24ad;
            this[_0x3577b7(0x136)](this[_0x3577b7(0x118)][_0x3577b7(0x137)]);
        },
        'setTextureSource': function (_0x1e6b50) {
            var _0x4be9f5 = _0x2f24ad;
            if (this[_0x4be9f5(0x9e)][_0x4be9f5(0x138)]())
                return this[_0x4be9f5(0x139)](_0x1e6b50[_0x4be9f5(0x137)], !![]), 0x0;
            var _0x5b95e4 = this['gl'], _0x6c5231 = this[_0x4be9f5(0xa6)];
            return _0x1e6b50[_0x4be9f5(0x13a)] < this[_0x4be9f5(0xa7)] && (_0x1e6b50[_0x4be9f5(0x13a)] = this[_0x4be9f5(0xa7)], _0x6c5231 < this[_0x4be9f5(0x9a)] ? (_0x1e6b50[_0x4be9f5(0x13b)] = _0x6c5231, _0x5b95e4[_0x4be9f5(0x10b)](_0x5b95e4[_0x4be9f5(0x106)] + _0x6c5231), _0x5b95e4['bindTexture'](_0x5b95e4[_0x4be9f5(0x107)], _0x1e6b50[_0x4be9f5(0x137)]), this[_0x4be9f5(0xa6)]++) : (this[_0x4be9f5(0x12b)](), this['startActiveTexture']++, this[_0x4be9f5(0xc1)]++, _0x1e6b50[_0x4be9f5(0x13a)] = this[_0x4be9f5(0xa7)], _0x1e6b50[_0x4be9f5(0x13b)] = 0x1, _0x5b95e4['activeTexture'](_0x5b95e4[_0x4be9f5(0x10c)]), _0x5b95e4[_0x4be9f5(0x13c)](_0x5b95e4['TEXTURE_2D'], _0x1e6b50[_0x4be9f5(0x137)]), this[_0x4be9f5(0xa6)] = 0x2)), this[_0x4be9f5(0xc2)] = ![], _0x1e6b50[_0x4be9f5(0x13b)];
        },
        'isNewNormalMap': function (_0x47e075, _0x54f8a3) {
            var _0x2758c3 = _0x2f24ad;
            return this['textureZero'] !== _0x47e075 || this[_0x2758c3(0xaa)] !== _0x54f8a3;
        },
        'setTextureZero': function (_0x3685bd, _0x12820e) {
            var _0x48dd7b = _0x2f24ad;
            if (this['textureZero'] !== _0x3685bd) {
                _0x12820e && this[_0x48dd7b(0x12b)]();
                var _0x1e3906 = this['gl'];
                _0x1e3906[_0x48dd7b(0x10b)](_0x1e3906['TEXTURE0']), _0x1e3906[_0x48dd7b(0x13c)](_0x1e3906[_0x48dd7b(0x107)], _0x3685bd), this['textureZero'] = _0x3685bd;
            }
        },
        'clearTextureZero': function () {
            var _0x5a2a48 = _0x2f24ad;
            this[_0x5a2a48(0x13d)] = null;
        },
        'setNormalMap': function (_0x284b2b) {
            var _0x36f8f9 = _0x2f24ad;
            if (this[_0x36f8f9(0xaa)] !== _0x284b2b) {
                var _0x28b1bd = this['gl'];
                _0x28b1bd[_0x36f8f9(0x10b)](_0x28b1bd[_0x36f8f9(0x10c)]), _0x28b1bd[_0x36f8f9(0x13c)](_0x28b1bd['TEXTURE_2D'], _0x284b2b), this[_0x36f8f9(0xaa)] = _0x284b2b, this[_0x36f8f9(0xa6)] === 0x1 && (this['currentActiveTexture'] = 0x2);
            }
        },
        'clearNormalMap': function () {
            var _0x2c288b = _0x2f24ad;
            this[_0x2c288b(0xaa)] = null, this[_0x2c288b(0xa7)]++, this[_0x2c288b(0xa6)] = 0x1, this[_0x2c288b(0xc1)]++;
        },
        'unbindTextures': function () {
            var _0x2e688f = _0x2f24ad, _0x56ede3 = this['gl'], _0x33122e = this['tempTextures'];
            for (var _0x3b483e = 0x0; _0x3b483e < _0x33122e[_0x2e688f(0x12e)]; _0x3b483e++) {
                _0x56ede3[_0x2e688f(0x10b)](_0x56ede3[_0x2e688f(0x106)] + _0x3b483e), _0x56ede3['bindTexture'](_0x56ede3[_0x2e688f(0x107)], null);
            }
            this[_0x2e688f(0xaa)] = null, this['textureZero'] = null, this[_0x2e688f(0xa6)] = 0x1, this[_0x2e688f(0xa7)]++, this[_0x2e688f(0xc1)]++;
        },
        'resetTextures': function (_0x306028) {
            var _0x2ce70b = _0x2f24ad;
            _0x306028 === undefined && (_0x306028 = ![]);
            if (this[_0x2ce70b(0xc2)])
                return;
            this['flush']();
            var _0x3f69bc = this['gl'], _0x5f4d2e = this[_0x2ce70b(0xa9)];
            if (_0x306028) {
                for (var _0x52f585 = 0x0; _0x52f585 < _0x5f4d2e[_0x2ce70b(0x12e)]; _0x52f585++) {
                    _0x3f69bc[_0x2ce70b(0x10b)](_0x3f69bc[_0x2ce70b(0x106)] + _0x52f585), _0x3f69bc['bindTexture'](_0x3f69bc['TEXTURE_2D'], _0x5f4d2e[_0x52f585]);
                }
                _0x3f69bc[_0x2ce70b(0x10b)](_0x3f69bc[_0x2ce70b(0x10c)]), _0x3f69bc[_0x2ce70b(0x13c)](_0x3f69bc[_0x2ce70b(0x107)], _0x5f4d2e[0x1]), this[_0x2ce70b(0xc2)] = !![];
            } else
                _0x3f69bc['activeTexture'](_0x3f69bc[_0x2ce70b(0x106)]), _0x3f69bc[_0x2ce70b(0x13c)](_0x3f69bc[_0x2ce70b(0x107)], _0x5f4d2e[0x0]), _0x3f69bc[_0x2ce70b(0x10b)](_0x3f69bc[_0x2ce70b(0x10c)]), _0x3f69bc[_0x2ce70b(0x13c)](_0x3f69bc[_0x2ce70b(0x107)], _0x5f4d2e[0x1]);
            this['normalTexture'] = null, this[_0x2ce70b(0x13d)] = null, this[_0x2ce70b(0xa6)] = 0x1, this[_0x2ce70b(0xa7)]++, this['textureFlush']++;
        },
        'setTexture2D': function (_0x564ee7) {
            var _0x10808a = _0x2f24ad;
            if (this['pipelines']['forceZero']())
                return this[_0x10808a(0x139)](_0x564ee7, !![]), 0x0;
            var _0x43d0b4 = this['gl'], _0x2b71f5 = this[_0x10808a(0xa6)];
            return _0x564ee7[_0x10808a(0x13a)] < this[_0x10808a(0xa7)] && (_0x564ee7[_0x10808a(0x13a)] = this[_0x10808a(0xa7)], _0x2b71f5 < this[_0x10808a(0x9a)] ? (_0x564ee7[_0x10808a(0x13b)] = _0x2b71f5, _0x43d0b4[_0x10808a(0x10b)](_0x43d0b4[_0x10808a(0x106)] + _0x2b71f5), _0x43d0b4[_0x10808a(0x13c)](_0x43d0b4[_0x10808a(0x107)], _0x564ee7), this[_0x10808a(0xa6)]++) : (this['flush'](), this['startActiveTexture']++, this['textureFlush']++, _0x564ee7[_0x10808a(0x13a)] = this[_0x10808a(0xa7)], _0x564ee7[_0x10808a(0x13b)] = 0x1, _0x43d0b4['activeTexture'](_0x43d0b4['TEXTURE1']), _0x43d0b4[_0x10808a(0x13c)](_0x43d0b4[_0x10808a(0x107)], _0x564ee7), this[_0x10808a(0xa6)] = 0x2)), this[_0x10808a(0xc2)] = ![], _0x564ee7[_0x10808a(0x13b)];
        },
        'pushFramebuffer': function (_0x5e0cd1, _0x284416, _0xca368d, _0x3185df) {
            var _0x3cf642 = _0x2f24ad;
            if (_0x5e0cd1 === this[_0x3cf642(0xab)])
                return this;
            return this[_0x3cf642(0x13e)][_0x3cf642(0x10a)](_0x5e0cd1), this[_0x3cf642(0x13f)](_0x5e0cd1, _0x284416, _0xca368d, _0x3185df);
        },
        'setFramebuffer': function (_0x2e7817, _0xfdc129, _0x285213, _0x3aa1d8) {
            var _0x2f44ca = _0x2f24ad;
            _0xfdc129 === undefined && (_0xfdc129 = ![]);
            _0x285213 === undefined && (_0x285213 = ![]);
            _0x3aa1d8 === undefined && (_0x3aa1d8 = !![]);
            if (_0x2e7817 === this[_0x2f44ca(0xab)])
                return this;
            var _0xa78845 = this['gl'], _0xfb9075 = this[_0x2f44ca(0x9f)], _0x4056ab = this[_0x2f44ca(0xa0)];
            return _0x2e7817 && _0x2e7817['renderTexture'] && _0x3aa1d8 ? (_0xfb9075 = _0x2e7817[_0x2f44ca(0x140)][_0x2f44ca(0x9f)], _0x4056ab = _0x2e7817['renderTexture'][_0x2f44ca(0xa0)]) : this[_0x2f44ca(0x12b)](), _0xa78845[_0x2f44ca(0x11c)](_0xa78845['FRAMEBUFFER'], _0x2e7817), _0x3aa1d8 && _0xa78845[_0x2f44ca(0x125)](0x0, 0x0, _0xfb9075, _0x4056ab), _0xfdc129 && (_0x2e7817 ? (this[_0x2f44ca(0xb7)] = _0x4056ab, this['pushScissor'](0x0, 0x0, _0xfb9075, _0x4056ab)) : (this[_0x2f44ca(0xb7)] = this['height'], this[_0x2f44ca(0x141)]())), this[_0x2f44ca(0xab)] = _0x2e7817, _0x285213 && this[_0x2f44ca(0x122)](), this;
        },
        'popFramebuffer': function (_0x18db96, _0x50f7ba, _0x3d1631) {
            var _0x16bb93 = _0x2f24ad;
            _0x18db96 === undefined && (_0x18db96 = ![]);
            _0x50f7ba === undefined && (_0x50f7ba = ![]);
            _0x3d1631 === undefined && (_0x3d1631 = !![]);
            var _0x2c2450 = this[_0x16bb93(0x13e)];
            _0x2c2450[_0x16bb93(0x142)]();
            var _0x401a50 = _0x2c2450[_0x2c2450['length'] - 0x1];
            return !_0x401a50 && (_0x401a50 = null), this[_0x16bb93(0x13f)](_0x401a50, _0x18db96, _0x50f7ba, _0x3d1631), _0x401a50;
        },
        'setProgram': function (_0x33d3b4) {
            var _0x1625a7 = _0x2f24ad;
            if (_0x33d3b4 !== this[_0x1625a7(0xac)])
                return this[_0x1625a7(0x12b)](), this['gl'][_0x1625a7(0x143)](_0x33d3b4), this[_0x1625a7(0xac)] = _0x33d3b4, !![];
            return ![];
        },
        'resetProgram': function () {
            var _0x65c4d5 = _0x2f24ad;
            return this['gl'][_0x65c4d5(0x143)](this[_0x65c4d5(0xac)]), this;
        },
        'createTextureFromSource': function (_0x1bdc5c, _0x4717e0, _0x79ab7e, _0x41ff63) {
            var _0x4dcc69 = _0x2f24ad, _0x4d8a71 = this['gl'], _0x2f964c = _0x4d8a71[_0x4dcc69(0x144)], _0x1873ee = _0x4d8a71['NEAREST'], _0x54c533 = _0x4d8a71['CLAMP_TO_EDGE'], _0x22c0b8 = null;
            _0x4717e0 = _0x1bdc5c ? _0x1bdc5c[_0x4dcc69(0x9f)] : _0x4717e0, _0x79ab7e = _0x1bdc5c ? _0x1bdc5c[_0x4dcc69(0xa0)] : _0x79ab7e;
            var _0x1aa95f = IsSizePowerOfTwo(_0x4717e0, _0x79ab7e);
            return _0x1aa95f && (_0x54c533 = _0x4d8a71[_0x4dcc69(0x145)]), _0x41ff63 === CONST[_0x4dcc69(0x146)][_0x4dcc69(0x147)] && this[_0x4dcc69(0x97)][_0x4dcc69(0x148)] && (_0x2f964c = _0x1aa95f ? this[_0x4dcc69(0x9c)] : _0x4d8a71[_0x4dcc69(0x147)], _0x1873ee = _0x4d8a71['LINEAR']), !_0x1bdc5c && typeof _0x4717e0 === _0x4dcc69(0x149) && typeof _0x79ab7e === _0x4dcc69(0x149) ? _0x22c0b8 = this['createTexture2D'](0x0, _0x2f964c, _0x1873ee, _0x54c533, _0x54c533, _0x4d8a71['RGBA'], null, _0x4717e0, _0x79ab7e) : _0x22c0b8 = this[_0x4dcc69(0x14a)](0x0, _0x2f964c, _0x1873ee, _0x54c533, _0x54c533, _0x4d8a71[_0x4dcc69(0x109)], _0x1bdc5c), _0x22c0b8;
        },
        'createTexture2D': function (_0x1ab0f0, _0x2a2a03, _0x20f404, _0x3576f7, _0x116757, _0xe0bc95, _0x332ceb, _0xd435a8, _0x22b08f, _0xcd64ed, _0x44599e, _0x3e5869) {
            var _0x35975f = _0x2f24ad;
            _0xcd64ed = _0xcd64ed === undefined || _0xcd64ed === null ? !![] : _0xcd64ed;
            _0x44599e === undefined && (_0x44599e = ![]);
            _0x3e5869 === undefined && (_0x3e5869 = ![]);
            var _0x3eae6d = this['gl'], _0x4613ea = _0x3eae6d['createTexture']();
            _0x3eae6d['activeTexture'](_0x3eae6d[_0x35975f(0x106)]);
            var _0x821fd2 = _0x3eae6d[_0x35975f(0xf0)](_0x3eae6d[_0x35975f(0x14b)]);
            return _0x3eae6d[_0x35975f(0x13c)](_0x3eae6d[_0x35975f(0x107)], _0x4613ea), _0x3eae6d[_0x35975f(0x14c)](_0x3eae6d[_0x35975f(0x107)], _0x3eae6d[_0x35975f(0x14d)], _0x2a2a03), _0x3eae6d['texParameteri'](_0x3eae6d[_0x35975f(0x107)], _0x3eae6d[_0x35975f(0x14e)], _0x20f404), _0x3eae6d[_0x35975f(0x14c)](_0x3eae6d[_0x35975f(0x107)], _0x3eae6d[_0x35975f(0x14f)], _0x116757), _0x3eae6d[_0x35975f(0x14c)](_0x3eae6d['TEXTURE_2D'], _0x3eae6d[_0x35975f(0x150)], _0x3576f7), _0x3eae6d[_0x35975f(0x151)](_0x3eae6d[_0x35975f(0x152)], _0xcd64ed), _0x3eae6d[_0x35975f(0x151)](_0x3eae6d[_0x35975f(0x153)], _0x3e5869), _0x332ceb === null || _0x332ceb === undefined ? _0x3eae6d[_0x35975f(0x108)](_0x3eae6d[_0x35975f(0x107)], _0x1ab0f0, _0xe0bc95, _0xd435a8, _0x22b08f, 0x0, _0xe0bc95, _0x3eae6d['UNSIGNED_BYTE'], null) : (!_0x44599e && (_0xd435a8 = _0x332ceb['width'], _0x22b08f = _0x332ceb[_0x35975f(0xa0)]), _0x3eae6d[_0x35975f(0x108)](_0x3eae6d[_0x35975f(0x107)], _0x1ab0f0, _0xe0bc95, _0xe0bc95, _0x3eae6d['UNSIGNED_BYTE'], _0x332ceb)), IsSizePowerOfTwo(_0xd435a8, _0x22b08f) && _0x3eae6d[_0x35975f(0x154)](_0x3eae6d[_0x35975f(0x107)]), _0x821fd2 && _0x3eae6d[_0x35975f(0x13c)](_0x3eae6d[_0x35975f(0x107)], _0x821fd2), _0x4613ea[_0x35975f(0x155)] = _0xcd64ed, _0x4613ea[_0x35975f(0x156)] = ![], _0x4613ea[_0x35975f(0x9f)] = _0xd435a8, _0x4613ea[_0x35975f(0xa0)] = _0x22b08f, _0x4613ea[_0x35975f(0x13b)] = 0x0, _0x4613ea[_0x35975f(0x13a)] = -0x1, _0x4613ea;
        },
        'createFramebuffer': function (_0x185fe4, _0x122e84, _0x563048, _0x3b1f20) {
            var _0x3f8e8a = _0x2f24ad, _0x163cc0 = this['gl'], _0xbbf044 = _0x163cc0[_0x3f8e8a(0x157)](), _0x553ef1 = 0x0;
            this[_0x3f8e8a(0x13f)](_0xbbf044);
            if (_0x3b1f20) {
                var _0x44b77f = _0x163cc0[_0x3f8e8a(0x158)]();
                _0x163cc0[_0x3f8e8a(0x159)](_0x163cc0['RENDERBUFFER'], _0x44b77f), _0x163cc0['renderbufferStorage'](_0x163cc0[_0x3f8e8a(0x15a)], _0x163cc0[_0x3f8e8a(0x15b)], _0x185fe4, _0x122e84), _0x163cc0[_0x3f8e8a(0x15c)](_0x163cc0[_0x3f8e8a(0x11d)], _0x163cc0[_0x3f8e8a(0x15d)], _0x163cc0[_0x3f8e8a(0x15a)], _0x44b77f);
            }
            _0x563048[_0x3f8e8a(0x156)] = !![], _0x563048[_0x3f8e8a(0x155)] = ![], _0x163cc0[_0x3f8e8a(0x15e)](_0x163cc0[_0x3f8e8a(0x11d)], _0x163cc0[_0x3f8e8a(0x15f)], _0x163cc0['TEXTURE_2D'], _0x563048, 0x0), _0x553ef1 = _0x163cc0[_0x3f8e8a(0x160)](_0x163cc0['FRAMEBUFFER']);
            if (_0x553ef1 !== _0x163cc0[_0x3f8e8a(0x161)]) {
                var _0x46388c = {
                    0x8cd6: _0x3f8e8a(0x162),
                    0x8cd7: 'Missing\x20Attachment',
                    0x8cd9: _0x3f8e8a(0x163),
                    0x8cdd: _0x3f8e8a(0x164)
                };
                throw new Error('Framebuffer\x20status:\x20' + _0x46388c[_0x553ef1]);
            }
            return _0xbbf044[_0x3f8e8a(0x140)] = _0x563048, this['setFramebuffer'](null), this['resetTextures'](), _0xbbf044;
        },
        'createProgram': function (_0x4c7ee7, _0x235c81) {
            var _0xdbc8a8 = _0x2f24ad, _0x18da3f = this['gl'], _0x26f79a = _0x18da3f[_0xdbc8a8(0x165)](), _0x3b7583 = _0x18da3f[_0xdbc8a8(0x166)](_0x18da3f[_0xdbc8a8(0x167)]), _0x4db2c8 = _0x18da3f[_0xdbc8a8(0x166)](_0x18da3f[_0xdbc8a8(0x168)]);
            _0x18da3f[_0xdbc8a8(0x169)](_0x3b7583, _0x4c7ee7), _0x18da3f[_0xdbc8a8(0x169)](_0x4db2c8, _0x235c81), _0x18da3f['compileShader'](_0x3b7583), _0x18da3f[_0xdbc8a8(0x16a)](_0x4db2c8);
            if (!_0x18da3f[_0xdbc8a8(0x16b)](_0x3b7583, _0x18da3f[_0xdbc8a8(0x16c)]))
                throw new Error(_0xdbc8a8(0x16d) + _0x18da3f[_0xdbc8a8(0x16e)](_0x3b7583));
            if (!_0x18da3f[_0xdbc8a8(0x16b)](_0x4db2c8, _0x18da3f[_0xdbc8a8(0x16c)]))
                throw new Error(_0xdbc8a8(0x16f) + _0x18da3f[_0xdbc8a8(0x16e)](_0x4db2c8));
            _0x18da3f[_0xdbc8a8(0x170)](_0x26f79a, _0x3b7583), _0x18da3f['attachShader'](_0x26f79a, _0x4db2c8), _0x18da3f[_0xdbc8a8(0x171)](_0x26f79a);
            if (!_0x18da3f[_0xdbc8a8(0x172)](_0x26f79a, _0x18da3f[_0xdbc8a8(0x173)]))
                throw new Error(_0xdbc8a8(0x174) + _0x18da3f['getProgramInfoLog'](_0x26f79a));
            return _0x18da3f[_0xdbc8a8(0x143)](_0x26f79a), _0x26f79a;
        },
        'createVertexBuffer': function (_0x2ca025, _0x2bd6e2) {
            var _0x186182 = _0x2f24ad, _0x3520f0 = this['gl'], _0x5f1ec6 = _0x3520f0[_0x186182(0x175)]();
            return _0x3520f0[_0x186182(0x176)](_0x3520f0[_0x186182(0x177)], _0x5f1ec6), _0x3520f0[_0x186182(0x178)](_0x3520f0[_0x186182(0x177)], _0x2ca025, _0x2bd6e2), _0x3520f0[_0x186182(0x176)](_0x3520f0[_0x186182(0x177)], null), _0x5f1ec6;
        },
        'createIndexBuffer': function (_0x3233f7, _0x1da098) {
            var _0x27d325 = _0x2f24ad, _0xa1cc08 = this['gl'], _0x2ec53b = _0xa1cc08[_0x27d325(0x175)]();
            return _0xa1cc08[_0x27d325(0x176)](_0xa1cc08[_0x27d325(0x179)], _0x2ec53b), _0xa1cc08[_0x27d325(0x178)](_0xa1cc08[_0x27d325(0x179)], _0x3233f7, _0x1da098), _0xa1cc08[_0x27d325(0x176)](_0xa1cc08[_0x27d325(0x179)], null), _0x2ec53b;
        },
        'deleteTexture': function (_0x4c544c, _0x3828a7) {
            var _0x4a3d36 = _0x2f24ad;
            return _0x3828a7 && this['resetTextures'](!![]), _0x4c544c && this['gl'][_0x4a3d36(0x105)](_0x4c544c), this;
        },
        'deleteFramebuffer': function (_0x1d489a) {
            return _0x1d489a && (this['gl']['deleteFramebuffer'](_0x1d489a), ArrayRemove(this['fboStack'], _0x1d489a), this['currentFramebuffer'] === _0x1d489a && (this['currentFramebuffer'] = null)), this;
        },
        'deleteProgram': function (_0x4ffde5) {
            return _0x4ffde5 && this['gl']['deleteProgram'](_0x4ffde5), this;
        },
        'deleteBuffer': function (_0x3bd757) {
            var _0x25caa6 = _0x2f24ad;
            return this['gl'][_0x25caa6(0x17a)](_0x3bd757), this;
        },
        'preRenderCamera': function (_0x19d2e5) {
            var _0x131fe1 = _0x2f24ad, _0x14256a = _0x19d2e5['x'], _0x2690fc = _0x19d2e5['y'], _0x2cb98d = _0x19d2e5[_0x131fe1(0x9f)], _0x36a816 = _0x19d2e5[_0x131fe1(0xa0)], _0x1cf236 = _0x19d2e5[_0x131fe1(0xc7)];
            _0x19d2e5[_0x131fe1(0xcd)](CameraEvents[_0x131fe1(0x17b)], _0x19d2e5), this['pipelines']['preBatchCamera'](_0x19d2e5), this[_0x131fe1(0x17c)](_0x14256a, _0x2690fc, _0x2cb98d, _0x36a816);
            _0x19d2e5['mask'] && (this['currentCameraMask'][_0x131fe1(0x130)] = _0x19d2e5[_0x131fe1(0x130)], this[_0x131fe1(0xbb)][_0x131fe1(0x17d)] = _0x19d2e5[_0x131fe1(0x17e)], _0x19d2e5['mask']['preRenderWebGL'](this, _0x19d2e5, _0x19d2e5[_0x131fe1(0x17e)]));
            if (_0x1cf236['alphaGL'] > 0x0) {
                var _0x3df706 = this['pipelines'][_0x131fe1(0x17f)]();
                _0x3df706[_0x131fe1(0x180)](_0x14256a, _0x2690fc, _0x2cb98d, _0x36a816, Utils['getTintFromFloats'](_0x1cf236[_0x131fe1(0x102)], _0x1cf236['greenGL'], _0x1cf236['redGL'], 0x1), _0x1cf236['alphaGL']);
            }
        },
        'getCurrentStencilMask': function () {
            var _0x3dcfc3 = _0x2f24ad, _0x2e7a05 = null, _0x3df74d = this[_0x3dcfc3(0xba)], _0x55f752 = this['currentCameraMask'];
            if (_0x3df74d[_0x3dcfc3(0x12e)] > 0x0)
                _0x2e7a05 = _0x3df74d[_0x3df74d[_0x3dcfc3(0x12e)] - 0x1];
            else
                _0x55f752[_0x3dcfc3(0x130)] && _0x55f752[_0x3dcfc3(0x130)]['isStencil'] && (_0x2e7a05 = _0x55f752);
            return _0x2e7a05;
        },
        'postRenderCamera': function (_0x1ab0f6) {
            var _0x35bf28 = _0x2f24ad, _0x4bb03e = _0x1ab0f6[_0x35bf28(0x181)], _0x465d8c = _0x1ab0f6[_0x35bf28(0x182)];
            if (_0x4bb03e[_0x35bf28(0x183)] || (_0x465d8c['isRunning'] || _0x465d8c[_0x35bf28(0x184)])) {
                var _0x483b6d = this[_0x35bf28(0x9e)][_0x35bf28(0x17f)]();
                _0x4bb03e['postRenderWebGL'](_0x483b6d, Utils[_0x35bf28(0x185)]), _0x465d8c[_0x35bf28(0x186)](_0x483b6d, Utils[_0x35bf28(0x185)]);
            }
            _0x1ab0f6[_0x35bf28(0x187)] = ![], this[_0x35bf28(0x141)](), _0x1ab0f6['mask'] && (this['currentCameraMask'][_0x35bf28(0x130)] = null, _0x1ab0f6[_0x35bf28(0x130)][_0x35bf28(0x186)](this, _0x1ab0f6[_0x35bf28(0x17e)])), this[_0x35bf28(0x9e)]['postBatchCamera'](_0x1ab0f6), _0x1ab0f6[_0x35bf28(0xcd)](CameraEvents['POST_RENDER'], _0x1ab0f6);
        },
        'preRender': function () {
            var _0x4a7c41 = _0x2f24ad;
            if (this[_0x4a7c41(0xa3)])
                return;
            var _0x59ad0b = this['gl'];
            _0x59ad0b[_0x4a7c41(0x11c)](_0x59ad0b[_0x4a7c41(0x11d)], null);
            if (this[_0x4a7c41(0x97)][_0x4a7c41(0x98)]) {
                var _0x580739 = this[_0x4a7c41(0x97)][_0x4a7c41(0xc7)];
                _0x59ad0b['clearColor'](_0x580739['redGL'], _0x580739[_0x4a7c41(0x188)], _0x580739[_0x4a7c41(0x102)], _0x580739['alphaGL']), _0x59ad0b[_0x4a7c41(0x189)](_0x59ad0b[_0x4a7c41(0x18a)] | _0x59ad0b[_0x4a7c41(0x18b)] | _0x59ad0b[_0x4a7c41(0x18c)]);
            }
            _0x59ad0b[_0x4a7c41(0x100)](_0x59ad0b[_0x4a7c41(0x12d)]), this[_0x4a7c41(0xaf)] = this[_0x4a7c41(0xc3)], this[_0x4a7c41(0x18d)]['length'] = 0x0, this[_0x4a7c41(0x18d)][_0x4a7c41(0x10a)](this[_0x4a7c41(0xaf)]), this['game'][_0x4a7c41(0x18e)][_0x4a7c41(0x18f)] && _0x59ad0b[_0x4a7c41(0x126)](0x0, this[_0x4a7c41(0xb7)] - this[_0x4a7c41(0xa0)], this[_0x4a7c41(0x9f)], this[_0x4a7c41(0xa0)]), this[_0x4a7c41(0x12f)][_0x4a7c41(0x130)] = null, this[_0x4a7c41(0xbb)][_0x4a7c41(0x130)] = null, this[_0x4a7c41(0xba)][_0x4a7c41(0x12e)] = 0x0, this[_0x4a7c41(0xc1)] = 0x0, this[_0x4a7c41(0xcd)](Events[_0x4a7c41(0x17b)]);
        },
        'render': function (_0x668792, _0x25bd93, _0x54ccec) {
            var _0x4eafcd = _0x2f24ad;
            if (this[_0x4eafcd(0xa3)])
                return;
            var _0x63e400 = _0x25bd93[_0x4eafcd(0x12e)];
            this[_0x4eafcd(0xcd)](Events[_0x4eafcd(0x190)], _0x668792, _0x54ccec), this[_0x4eafcd(0x191)](_0x54ccec);
            if (_0x63e400 === 0x0) {
                this['setBlendMode'](CONST[_0x4eafcd(0x10e)][_0x4eafcd(0x192)]), this[_0x4eafcd(0x193)](_0x54ccec);
                return;
            }
            this[_0x4eafcd(0xbd)] = '';
            var _0x24cd53 = this['currentMask'];
            for (var _0x563cab = 0x0; _0x563cab < _0x63e400; _0x563cab++) {
                this[_0x4eafcd(0xc0)] = _0x563cab === _0x63e400 - 0x1;
                var _0xbc242c = _0x25bd93[_0x563cab], _0x309d62 = _0xbc242c[_0x4eafcd(0x130)];
                _0x24cd53 = this[_0x4eafcd(0x12f)];
                _0x24cd53[_0x4eafcd(0x130)] && _0x24cd53['mask'] !== _0x309d62 && _0x24cd53[_0x4eafcd(0x130)][_0x4eafcd(0x186)](this, _0x24cd53[_0x4eafcd(0x17d)]);
                _0x309d62 && _0x24cd53[_0x4eafcd(0x130)] !== _0x309d62 && _0x309d62[_0x4eafcd(0x194)](this, _0xbc242c, _0x54ccec);
                _0xbc242c['blendMode'] !== this[_0x4eafcd(0xad)] && this[_0x4eafcd(0x10d)](_0xbc242c[_0x4eafcd(0x195)]);
                var _0x3fb5f6 = _0xbc242c[_0x4eafcd(0x196)];
                _0x3fb5f6 !== this[_0x4eafcd(0xbd)] && (this[_0x4eafcd(0xbe)] = !![], this[_0x4eafcd(0xbd)] = _0x3fb5f6), !this[_0x4eafcd(0xc0)] ? this['nextTypeMatch'] = _0x25bd93[_0x563cab + 0x1][_0x4eafcd(0x196)] === this['currentType'] : this[_0x4eafcd(0xbf)] = ![], _0xbc242c[_0x4eafcd(0x197)](this, _0xbc242c, _0x54ccec), this[_0x4eafcd(0xbe)] = ![];
            }
            _0x24cd53 = this[_0x4eafcd(0x12f)], _0x24cd53[_0x4eafcd(0x130)] && _0x24cd53[_0x4eafcd(0x130)][_0x4eafcd(0x186)](this, _0x24cd53[_0x4eafcd(0x17d)]), this[_0x4eafcd(0x10d)](CONST[_0x4eafcd(0x10e)][_0x4eafcd(0x192)]), this[_0x4eafcd(0x193)](_0x54ccec);
        },
        'postRender': function () {
            var _0x31e236 = _0x2f24ad;
            if (this[_0x31e236(0xa3)])
                return;
            this[_0x31e236(0x12b)](), this[_0x31e236(0xcd)](Events[_0x31e236(0x198)]);
            var _0x4bd43c = this[_0x31e236(0xa4)];
            _0x4bd43c[_0x31e236(0x199)] && (WebGLSnapshot(this[_0x31e236(0xa1)], _0x4bd43c), _0x4bd43c[_0x31e236(0x199)] = null), this[_0x31e236(0xc1)] > 0x0 && (this[_0x31e236(0xa7)]++, this[_0x31e236(0xa6)] = 0x1);
        },
        'snapshot': function (_0x4e4c1a, _0x5396cb, _0xd5b332) {
            var _0x188ff3 = _0x2f24ad;
            return this[_0x188ff3(0x19a)](0x0, 0x0, this['gl'][_0x188ff3(0x19b)], this['gl'][_0x188ff3(0xb7)], _0x4e4c1a, _0x5396cb, _0xd5b332);
        },
        'snapshotArea': function (_0x3eb819, _0x1dc04c, _0x58f1ea, _0x244619, _0x4d20a6, _0x317d54, _0x576568) {
            var _0x1cc844 = _0x2f24ad, _0x37e924 = this[_0x1cc844(0xa4)];
            return _0x37e924[_0x1cc844(0x199)] = _0x4d20a6, _0x37e924[_0x1cc844(0x196)] = _0x317d54, _0x37e924[_0x1cc844(0x19c)] = _0x576568, _0x37e924[_0x1cc844(0x19d)] = ![], _0x37e924['x'] = _0x3eb819, _0x37e924['y'] = _0x1dc04c, _0x37e924['width'] = Math[_0x1cc844(0x19e)](_0x58f1ea, this['gl']['drawingBufferWidth']), _0x37e924['height'] = Math['min'](_0x244619, this['gl']['drawingBufferHeight']), this;
        },
        'snapshotPixel': function (_0x42c2f4, _0x1706b4, _0x251e32) {
            var _0x1ff563 = _0x2f24ad;
            return this[_0x1ff563(0x19a)](_0x42c2f4, _0x1706b4, 0x1, 0x1, _0x251e32), this[_0x1ff563(0xa4)][_0x1ff563(0x19d)] = !![], this;
        },
        'snapshotFramebuffer': function (_0x58299e, _0x43cb03, _0x5fb1b9, _0x7c15f9, _0xbe894f, _0x488f9a, _0x19a1df, _0x6da1c1, _0x37002d, _0x4bbeda, _0x5b7b4d) {
            var _0x228cbf = _0x2f24ad;
            _0xbe894f === undefined && (_0xbe894f = ![]);
            _0x488f9a === undefined && (_0x488f9a = 0x0);
            _0x19a1df === undefined && (_0x19a1df = 0x0);
            _0x6da1c1 === undefined && (_0x6da1c1 = _0x43cb03);
            _0x37002d === undefined && (_0x37002d = _0x5fb1b9);
            var _0xadadfc = this['currentFramebuffer'];
            this[_0x228cbf(0x19a)](_0x488f9a, _0x19a1df, _0x6da1c1, _0x37002d, _0x7c15f9, _0x4bbeda, _0x5b7b4d);
            var _0x38d5f5 = this[_0x228cbf(0xa4)];
            return _0x38d5f5[_0x228cbf(0x19d)] = _0xbe894f, _0x38d5f5[_0x228cbf(0x19f)] = !![], _0x38d5f5[_0x228cbf(0x1a0)] = _0x43cb03, _0x38d5f5['bufferHeight'] = _0x5fb1b9, this[_0x228cbf(0x13f)](_0x58299e), WebGLSnapshot(this['canvas'], _0x38d5f5), this[_0x228cbf(0x13f)](_0xadadfc), _0x38d5f5[_0x228cbf(0x199)] = null, _0x38d5f5[_0x228cbf(0x19f)] = ![], this;
        },
        'canvasToTexture': function (_0x4cc572, _0x1077ec, _0x3a4596, _0x16e59e) {
            var _0x56f83a = _0x2f24ad;
            return _0x3a4596 === undefined && (_0x3a4596 = ![]), _0x16e59e === undefined && (_0x16e59e = ![]), !_0x1077ec ? this[_0x56f83a(0x1a1)](_0x4cc572, _0x3a4596, _0x16e59e) : this[_0x56f83a(0x1a2)](_0x4cc572, _0x1077ec, _0x16e59e);
        },
        'createCanvasTexture': function (_0x325eff, _0xbca205, _0x59f388) {
            var _0x51e3e2 = _0x2f24ad;
            _0xbca205 === undefined && (_0xbca205 = ![]);
            _0x59f388 === undefined && (_0x59f388 = ![]);
            var _0x24f365 = this['gl'], _0x9c031e = _0x24f365[_0x51e3e2(0x144)], _0x241a6a = _0x24f365[_0x51e3e2(0x144)], _0x11734a = _0x325eff['width'], _0x264784 = _0x325eff[_0x51e3e2(0xa0)], _0x5cc459 = _0x24f365[_0x51e3e2(0x1a3)], _0x13ce35 = IsSizePowerOfTwo(_0x11734a, _0x264784);
            return !_0xbca205 && _0x13ce35 && (_0x5cc459 = _0x24f365[_0x51e3e2(0x145)]), this[_0x51e3e2(0x97)]['antialias'] && (_0x9c031e = _0x13ce35 ? this[_0x51e3e2(0x9c)] : _0x24f365[_0x51e3e2(0x147)], _0x241a6a = _0x24f365[_0x51e3e2(0x147)]), this['createTexture2D'](0x0, _0x9c031e, _0x241a6a, _0x5cc459, _0x5cc459, _0x24f365[_0x51e3e2(0x109)], _0x325eff, _0x11734a, _0x264784, !![], ![], _0x59f388);
        },
        'updateCanvasTexture': function (_0x5ba916, _0x5500fd, _0xbf13f7) {
            var _0x56baef = _0x2f24ad;
            _0xbf13f7 === undefined && (_0xbf13f7 = ![]);
            var _0x1a424e = this['gl'], _0x5eab7b = _0x5ba916[_0x56baef(0x9f)], _0x3924f3 = _0x5ba916[_0x56baef(0xa0)];
            if (_0x5eab7b > 0x0 && _0x3924f3 > 0x0) {
                _0x1a424e['activeTexture'](_0x1a424e[_0x56baef(0x106)]);
                var _0x2705f9 = _0x1a424e[_0x56baef(0xf0)](_0x1a424e['TEXTURE_BINDING_2D']);
                _0x1a424e['bindTexture'](_0x1a424e[_0x56baef(0x107)], _0x5500fd), _0x1a424e[_0x56baef(0x151)](_0x1a424e[_0x56baef(0x153)], _0xbf13f7), _0x1a424e[_0x56baef(0x151)](_0x1a424e['UNPACK_PREMULTIPLY_ALPHA_WEBGL'], !![]), _0x1a424e[_0x56baef(0x108)](_0x1a424e[_0x56baef(0x107)], 0x0, _0x1a424e['RGBA'], _0x1a424e[_0x56baef(0x109)], _0x1a424e[_0x56baef(0xdd)], _0x5ba916), _0x5500fd[_0x56baef(0x9f)] = _0x5eab7b, _0x5500fd['height'] = _0x3924f3, _0x2705f9 && _0x1a424e[_0x56baef(0x13c)](_0x1a424e['TEXTURE_2D'], _0x2705f9);
            }
            return _0x5500fd;
        },
        'createVideoTexture': function (_0x453fec, _0x37c7be, _0x5164f0) {
            var _0x36a638 = _0x2f24ad;
            _0x37c7be === undefined && (_0x37c7be = ![]);
            _0x5164f0 === undefined && (_0x5164f0 = ![]);
            var _0x48ea99 = this['gl'], _0x371574 = _0x48ea99[_0x36a638(0x144)], _0x1d5698 = _0x48ea99[_0x36a638(0x144)], _0x317f4c = _0x453fec['videoWidth'], _0x1361c5 = _0x453fec[_0x36a638(0x1a4)], _0x1dc95e = _0x48ea99[_0x36a638(0x1a3)], _0x5cf313 = IsSizePowerOfTwo(_0x317f4c, _0x1361c5);
            return !_0x37c7be && _0x5cf313 && (_0x1dc95e = _0x48ea99[_0x36a638(0x145)]), this[_0x36a638(0x97)][_0x36a638(0x148)] && (_0x371574 = _0x5cf313 ? this[_0x36a638(0x9c)] : _0x48ea99[_0x36a638(0x147)], _0x1d5698 = _0x48ea99[_0x36a638(0x147)]), this[_0x36a638(0x14a)](0x0, _0x371574, _0x1d5698, _0x1dc95e, _0x1dc95e, _0x48ea99[_0x36a638(0x109)], _0x453fec, _0x317f4c, _0x1361c5, !![], !![], _0x5164f0);
        },
        'updateVideoTexture': function (_0x3c25fd, _0x1a66c2, _0x2118cf) {
            var _0x432e53 = _0x2f24ad;
            _0x2118cf === undefined && (_0x2118cf = ![]);
            var _0x21ff8d = this['gl'], _0x229b03 = _0x3c25fd[_0x432e53(0x1a5)], _0x509127 = _0x3c25fd[_0x432e53(0x1a4)];
            if (_0x229b03 > 0x0 && _0x509127 > 0x0) {
                _0x21ff8d[_0x432e53(0x10b)](_0x21ff8d[_0x432e53(0x106)]);
                var _0x31c0f7 = _0x21ff8d[_0x432e53(0xf0)](_0x21ff8d[_0x432e53(0x14b)]);
                _0x21ff8d['bindTexture'](_0x21ff8d['TEXTURE_2D'], _0x1a66c2), _0x21ff8d['pixelStorei'](_0x21ff8d[_0x432e53(0x153)], _0x2118cf), _0x21ff8d[_0x432e53(0x108)](_0x21ff8d[_0x432e53(0x107)], 0x0, _0x21ff8d[_0x432e53(0x109)], _0x21ff8d[_0x432e53(0x109)], _0x21ff8d[_0x432e53(0xdd)], _0x3c25fd), _0x1a66c2[_0x432e53(0x9f)] = _0x229b03, _0x1a66c2[_0x432e53(0xa0)] = _0x509127, _0x31c0f7 && _0x21ff8d[_0x432e53(0x13c)](_0x21ff8d['TEXTURE_2D'], _0x31c0f7);
            }
            return _0x1a66c2;
        },
        'setTextureFilter': function (_0x3859ee, _0x49dd5b) {
            var _0x37227b = _0x2f24ad, _0x3cd1da = this['gl'], _0x4affcb = [
                    _0x3cd1da['LINEAR'],
                    _0x3cd1da['NEAREST']
                ][_0x49dd5b];
            _0x3cd1da[_0x37227b(0x10b)](_0x3cd1da[_0x37227b(0x106)]);
            var _0x548170 = _0x3cd1da[_0x37227b(0xf0)](_0x3cd1da['TEXTURE_BINDING_2D']);
            return _0x3cd1da['bindTexture'](_0x3cd1da['TEXTURE_2D'], _0x3859ee), _0x3cd1da[_0x37227b(0x14c)](_0x3cd1da[_0x37227b(0x107)], _0x3cd1da[_0x37227b(0x14d)], _0x4affcb), _0x3cd1da[_0x37227b(0x14c)](_0x3cd1da[_0x37227b(0x107)], _0x3cd1da['TEXTURE_MAG_FILTER'], _0x4affcb), _0x548170 && _0x3cd1da['bindTexture'](_0x3cd1da['TEXTURE_2D'], _0x548170), this;
        },
        'getMaxTextureSize': function () {
            var _0x530d98 = _0x2f24ad;
            return this[_0x530d98(0x97)][_0x530d98(0xef)];
        },
        'destroy': function () {
            var _0x1fc590 = _0x2f24ad;
            this[_0x1fc590(0xa1)][_0x1fc590(0x1a6)](_0x1fc590(0x1a7), this[_0x1fc590(0xb0)], ![]), this[_0x1fc590(0xa1)][_0x1fc590(0x1a6)](_0x1fc590(0xd3), this[_0x1fc590(0xb1)], ![]);
            var _0x26d5d2 = this['gl'], _0x14aa4d = this[_0x1fc590(0xa9)];
            for (var _0x4fec05 = 0x0; _0x4fec05 < _0x14aa4d[_0x1fc590(0x12e)]; _0x4fec05++) {
                _0x26d5d2[_0x1fc590(0x105)](_0x14aa4d[_0x4fec05]);
            }
            this[_0x1fc590(0x9e)][_0x1fc590(0x1a8)](), this[_0x1fc590(0x1a9)](), this['fboStack'] = [], this[_0x1fc590(0xba)] = [], this[_0x1fc590(0xb5)] = {}, this[_0x1fc590(0xa8)] = [], this['gl'] = null, this[_0x1fc590(0x9d)] = null, this[_0x1fc590(0xa1)] = null, this[_0x1fc590(0xa3)] = !![], this[_0x1fc590(0x12f)] = null, this[_0x1fc590(0xbb)] = null;
        }
    });
function _0x352f(_0x1ae368, _0x9295c0) {
    return _0x352f = function (_0x4e484e, _0x352f8b) {
        _0x4e484e = _0x4e484e - 0x7f;
        var _0x8ec38 = _0x4e48[_0x4e484e];
        return _0x8ec38;
    }, _0x352f(_0x1ae368, _0x9295c0);
}
module[_0x2f24ad(0x1aa)] = WebGLRenderer;
