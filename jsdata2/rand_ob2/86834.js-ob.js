/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var _0x3419 = [
    '_frameTimeMS',
    'entries',
    'tree',
    'clear',
    'load',
    'update',
    'active',
    'WORLD_STEP',
    'step',
    'postUpdate',
    'willDrawDebug',
    'size',
    'world',
    'gameObject',
    'allowRotation',
    'computeAngularVelocity',
    'angularVelocity',
    'angularAcceleration',
    'angularDrag',
    'maxAngular',
    'allowDrag',
    'rotation',
    'acceleration',
    'drag',
    'maxVelocity',
    'speed',
    'useDamping',
    'allowGravity',
    'pow',
    'sqrt',
    'velocity',
    'normalize',
    'scale',
    'none',
    'isCircle',
    'separateCircle',
    'bottom',
    'center',
    'abs',
    'intersects',
    'onOverlap',
    'OVERLAP',
    'onCollide',
    'COLLIDE',
    'position',
    'halfWidth',
    'radius',
    'overlapR',
    'immovable',
    'mass',
    'EPSILON',
    'sin',
    'updateCenter',
    'bounce',
    'circleBodyIntersects',
    'left',
    'collideObjects',
    'children',
    'isArray',
    'collideHandler',
    'collideGroupVsGroup',
    'collideSpriteVsGroup',
    'isTilemap',
    'collideSpriteVsTilemapLayer',
    'collideGroupVsTilemapLayer',
    'separate',
    'minX',
    'minY',
    'top',
    'maxX',
    'maxY',
    'search',
    'contains',
    'indexOf',
    'collideSpriteVsTilesHandler',
    'tileWidth',
    'baseTileWidth',
    'scaleX',
    'tileHeight',
    'baseTileHeight',
    'scaleY',
    'cameras',
    'tilemapLayer',
    'baseHeight',
    'TILE_COLLIDE',
    'wrapObject',
    'wrapArray',
    'destroy',
    'removeAllListeners',
    'shutdown',
    'exports',
    '1391685sLkuDr',
    '362392lraOoq',
    '689823PggJUr',
    '1BvYxdr',
    '140460ZNfmLG',
    '1146765wMLzld',
    '1JTucBy',
    '1206277LMVuoL',
    '1336564cHoTgv',
    '../../math/angle/BetweenPoints',
    './Body',
    './Collider',
    '../../math/distance/DistanceBetween',
    './events',
    '../../math/fuzzy/GreaterThan',
    '../../math/fuzzy/LessThan',
    './GetOverlapX',
    './GetOverlapY',
    '../../tilemaps/components/GetTilesWithinWorldXY',
    '../../utils/object/GetValue',
    '../../structs/ProcessQueue',
    './tilemap/ProcessTileCallbacks',
    '../../geom/rectangle/Rectangle',
    '../../structs/RTree',
    './tilemap/SeparateTile',
    './SeparateX',
    './SeparateY',
    '../../structs/Set',
    './StaticBody',
    '../../gameobjects/components/TransformMatrix',
    '../../math/Vector2',
    '../../math/Wrap',
    'call',
    'scene',
    'staticBodies',
    'pendingDestroy',
    'colliders',
    'gravity',
    'gravity.x',
    'gravity.y',
    'bounds',
    'width',
    'height',
    'sys',
    'checkCollision',
    'checkCollision.up',
    'checkCollision.down',
    'checkCollision.left',
    'checkCollision.right',
    'fps',
    'fixedStep',
    '_elapsed',
    '_frameTime',
    'stepsLastFrame',
    'timeScale',
    'OVERLAP_BIAS',
    'overlapBias',
    'TILE_BIAS',
    'tileBias',
    'forceX',
    'isPaused',
    '_total',
    'debug',
    'debugGraphic',
    'defaults',
    'debugShowBody',
    'debugShowStaticBody',
    'debugShowVelocity',
    'debugBodyColor',
    'debugStaticBodyColor',
    'debugVelocityColor',
    'maxEntries',
    'useTree',
    'staticTree',
    '_tempMatrix',
    '_tempMatrix2',
    'createDebugGraphic',
    'DYNAMIC_BODY',
    'length',
    'isParent',
    'enableBody',
    'body',
    'STATIC_BODY',
    'add',
    'physicsType',
    'bodies',
    'set',
    'enable',
    'getChildren',
    'disableBody',
    'remove',
    'delete',
    'setDepth',
    'MAX_VALUE',
    'drawDebug',
    'setTo',
    'setBoundsCollision',
    'right',
    'down',
    'emit',
    'PAUSE',
    'RESUME'
];
var _0x43793e = _0x252c;
(function (_0x16241e, _0x21b30d) {
    var _0x16ce71 = _0x252c;
    while (!![]) {
        try {
            var _0x54673d = -parseInt(_0x16ce71(0x17e)) + parseInt(_0x16ce71(0x17f)) + parseInt(_0x16ce71(0x180)) * parseInt(_0x16ce71(0x181)) + -parseInt(_0x16ce71(0x182)) + -parseInt(_0x16ce71(0x183)) + parseInt(_0x16ce71(0x184)) * parseInt(_0x16ce71(0x185)) + parseInt(_0x16ce71(0x186));
            if (_0x54673d === _0x21b30d)
                break;
            else
                _0x16241e['push'](_0x16241e['shift']());
        } catch (_0x30431a) {
            _0x16241e['push'](_0x16241e['shift']());
        }
    }
}(_0x3419, 0xdfab2));
var AngleBetweenPoints = require(_0x43793e(0x187)), Body = require(_0x43793e(0x188)), Clamp = require('../../math/Clamp'), Class = require('../../utils/Class'), Collider = require(_0x43793e(0x189)), CONST = require('./const'), DistanceBetween = require(_0x43793e(0x18a)), EventEmitter = require('eventemitter3'), Events = require(_0x43793e(0x18b)), FuzzyEqual = require('../../math/fuzzy/Equal'), FuzzyGreaterThan = require(_0x43793e(0x18c)), FuzzyLessThan = require(_0x43793e(0x18d)), GetOverlapX = require(_0x43793e(0x18e)), GetOverlapY = require(_0x43793e(0x18f)), GetTilesWithinWorldXY = require(_0x43793e(0x190)), GetValue = require(_0x43793e(0x191)), MATH_CONST = require('../../math/const'), ProcessQueue = require(_0x43793e(0x192)), ProcessTileCallbacks = require(_0x43793e(0x193)), Rectangle = require(_0x43793e(0x194)), RTree = require(_0x43793e(0x195)), SeparateTile = require(_0x43793e(0x196)), SeparateX = require(_0x43793e(0x197)), SeparateY = require(_0x43793e(0x198)), Set = require(_0x43793e(0x199)), StaticBody = require(_0x43793e(0x19a)), TileIntersectsBody = require('./tilemap/TileIntersectsBody'), TransformMatrix = require(_0x43793e(0x19b)), Vector2 = require(_0x43793e(0x19c)), Wrap = require(_0x43793e(0x19d)), World = new Class({
        'Extends': EventEmitter,
        'initialize': function World(_0x3a263e, _0x4253b1) {
            var _0x13e697 = _0x43793e;
            EventEmitter[_0x13e697(0x19e)](this), this[_0x13e697(0x19f)] = _0x3a263e, this['bodies'] = new Set(), this[_0x13e697(0x1a0)] = new Set(), this[_0x13e697(0x1a1)] = new Set(), this[_0x13e697(0x1a2)] = new ProcessQueue(), this[_0x13e697(0x1a3)] = new Vector2(GetValue(_0x4253b1, _0x13e697(0x1a4), 0x0), GetValue(_0x4253b1, _0x13e697(0x1a5), 0x0)), this[_0x13e697(0x1a6)] = new Rectangle(GetValue(_0x4253b1, 'x', 0x0), GetValue(_0x4253b1, 'y', 0x0), GetValue(_0x4253b1, _0x13e697(0x1a7), _0x3a263e['sys']['scale'][_0x13e697(0x1a7)]), GetValue(_0x4253b1, _0x13e697(0x1a8), _0x3a263e[_0x13e697(0x1a9)]['scale']['height'])), this[_0x13e697(0x1aa)] = {
                'up': GetValue(_0x4253b1, _0x13e697(0x1ab), !![]),
                'down': GetValue(_0x4253b1, _0x13e697(0x1ac), !![]),
                'left': GetValue(_0x4253b1, _0x13e697(0x1ad), !![]),
                'right': GetValue(_0x4253b1, _0x13e697(0x1ae), !![])
            }, this[_0x13e697(0x1af)] = GetValue(_0x4253b1, _0x13e697(0x1af), 0x3c), this[_0x13e697(0x1b0)] = GetValue(_0x4253b1, _0x13e697(0x1b0), !![]), this[_0x13e697(0x1b1)] = 0x0, this[_0x13e697(0x1b2)] = 0x1 / this[_0x13e697(0x1af)], this['_frameTimeMS'] = 0x3e8 * this[_0x13e697(0x1b2)], this[_0x13e697(0x1b3)] = 0x0, this[_0x13e697(0x1b4)] = GetValue(_0x4253b1, 'timeScale', 0x1), this[_0x13e697(0x1b5)] = GetValue(_0x4253b1, _0x13e697(0x1b6), 0x4), this[_0x13e697(0x1b7)] = GetValue(_0x4253b1, _0x13e697(0x1b8), 0x10), this[_0x13e697(0x1b9)] = GetValue(_0x4253b1, _0x13e697(0x1b9), ![]), this[_0x13e697(0x1ba)] = GetValue(_0x4253b1, _0x13e697(0x1ba), ![]), this[_0x13e697(0x1bb)] = 0x0, this['drawDebug'] = GetValue(_0x4253b1, _0x13e697(0x1bc), ![]), this[_0x13e697(0x1bd)], this[_0x13e697(0x1be)] = {
                'debugShowBody': GetValue(_0x4253b1, _0x13e697(0x1bf), !![]),
                'debugShowStaticBody': GetValue(_0x4253b1, _0x13e697(0x1c0), !![]),
                'debugShowVelocity': GetValue(_0x4253b1, _0x13e697(0x1c1), !![]),
                'bodyDebugColor': GetValue(_0x4253b1, _0x13e697(0x1c2), 0xff00ff),
                'staticBodyDebugColor': GetValue(_0x4253b1, _0x13e697(0x1c3), 0xff),
                'velocityDebugColor': GetValue(_0x4253b1, _0x13e697(0x1c4), 0xff00)
            }, this[_0x13e697(0x1c5)] = GetValue(_0x4253b1, _0x13e697(0x1c5), 0x10), this[_0x13e697(0x1c6)] = GetValue(_0x4253b1, _0x13e697(0x1c6), !![]), this['tree'] = new RTree(this[_0x13e697(0x1c5)]), this[_0x13e697(0x1c7)] = new RTree(this['maxEntries']), this['treeMinMax'] = {
                'minX': 0x0,
                'minY': 0x0,
                'maxX': 0x0,
                'maxY': 0x0
            }, this[_0x13e697(0x1c8)] = new TransformMatrix(), this[_0x13e697(0x1c9)] = new TransformMatrix(), this['drawDebug'] && this[_0x13e697(0x1ca)]();
        },
        'enable': function (_0x4de212, _0x408f77) {
            var _0x1e7d86 = _0x43793e;
            _0x408f77 === undefined && (_0x408f77 = CONST[_0x1e7d86(0x1cb)]);
            !Array['isArray'](_0x4de212) && (_0x4de212 = [_0x4de212]);
            for (var _0x8d6da6 = 0x0; _0x8d6da6 < _0x4de212['length']; _0x8d6da6++) {
                var _0x3bc57f = _0x4de212[_0x8d6da6];
                if (_0x3bc57f['isParent']) {
                    var _0x1ade9c = _0x3bc57f['getChildren']();
                    for (var _0x5e71ab = 0x0; _0x5e71ab < _0x1ade9c[_0x1e7d86(0x1cc)]; _0x5e71ab++) {
                        var _0x1fa27e = _0x1ade9c[_0x5e71ab];
                        _0x1fa27e[_0x1e7d86(0x1cd)] ? this['enable'](_0x1fa27e, _0x408f77) : this[_0x1e7d86(0x1ce)](_0x1fa27e, _0x408f77);
                    }
                } else
                    this[_0x1e7d86(0x1ce)](_0x3bc57f, _0x408f77);
            }
        },
        'enableBody': function (_0x28b6df, _0x297497) {
            var _0xd453d1 = _0x43793e;
            _0x297497 === undefined && (_0x297497 = CONST[_0xd453d1(0x1cb)]);
            if (!_0x28b6df[_0xd453d1(0x1cf)]) {
                if (_0x297497 === CONST[_0xd453d1(0x1cb)])
                    _0x28b6df[_0xd453d1(0x1cf)] = new Body(this, _0x28b6df);
                else
                    _0x297497 === CONST[_0xd453d1(0x1d0)] && (_0x28b6df[_0xd453d1(0x1cf)] = new StaticBody(this, _0x28b6df));
            }
            return this[_0xd453d1(0x1d1)](_0x28b6df['body']), _0x28b6df;
        },
        'add': function (_0x1b28fa) {
            var _0x599608 = _0x43793e;
            if (_0x1b28fa[_0x599608(0x1d2)] === CONST[_0x599608(0x1cb)])
                this[_0x599608(0x1d3)][_0x599608(0x1d4)](_0x1b28fa);
            else
                _0x1b28fa[_0x599608(0x1d2)] === CONST[_0x599608(0x1d0)] && (this[_0x599608(0x1a0)][_0x599608(0x1d4)](_0x1b28fa), this[_0x599608(0x1c7)]['insert'](_0x1b28fa));
            return _0x1b28fa[_0x599608(0x1d5)] = !![], _0x1b28fa;
        },
        'disable': function (_0x3140c8) {
            var _0x14fab3 = _0x43793e;
            !Array['isArray'](_0x3140c8) && (_0x3140c8 = [_0x3140c8]);
            for (var _0x1892b5 = 0x0; _0x1892b5 < _0x3140c8[_0x14fab3(0x1cc)]; _0x1892b5++) {
                var _0x5a47df = _0x3140c8[_0x1892b5];
                if (_0x5a47df[_0x14fab3(0x1cd)]) {
                    var _0x37a748 = _0x5a47df[_0x14fab3(0x1d6)]();
                    for (var _0x35da23 = 0x0; _0x35da23 < _0x37a748[_0x14fab3(0x1cc)]; _0x35da23++) {
                        var _0x117121 = _0x37a748[_0x35da23];
                        _0x117121[_0x14fab3(0x1cd)] ? this['disable'](_0x117121) : this[_0x14fab3(0x1d7)](_0x117121[_0x14fab3(0x1cf)]);
                    }
                } else
                    this[_0x14fab3(0x1d7)](_0x5a47df[_0x14fab3(0x1cf)]);
            }
        },
        'disableBody': function (_0x57aee1) {
            var _0x1c09ff = _0x43793e;
            this[_0x1c09ff(0x1d8)](_0x57aee1), _0x57aee1[_0x1c09ff(0x1d5)] = ![];
        },
        'remove': function (_0x1388b7) {
            var _0x30cc4a = _0x43793e;
            if (_0x1388b7[_0x30cc4a(0x1d2)] === CONST[_0x30cc4a(0x1cb)])
                this['tree'][_0x30cc4a(0x1d8)](_0x1388b7), this[_0x30cc4a(0x1d3)]['delete'](_0x1388b7);
            else
                _0x1388b7[_0x30cc4a(0x1d2)] === CONST['STATIC_BODY'] && (this[_0x30cc4a(0x1a0)][_0x30cc4a(0x1d9)](_0x1388b7), this[_0x30cc4a(0x1c7)][_0x30cc4a(0x1d8)](_0x1388b7));
        },
        'createDebugGraphic': function () {
            var _0x562279 = _0x43793e, _0x244720 = this[_0x562279(0x19f)][_0x562279(0x1a9)]['add']['graphics']({
                    'x': 0x0,
                    'y': 0x0
                });
            return _0x244720[_0x562279(0x1da)](Number[_0x562279(0x1db)]), this[_0x562279(0x1bd)] = _0x244720, this[_0x562279(0x1dc)] = !![], _0x244720;
        },
        'setBounds': function (_0x36607d, _0x3ab386, _0x599566, _0x9b4164, _0x471379, _0x345dcc, _0x3c4c92, _0x253760) {
            var _0x1396f6 = _0x43793e;
            return this['bounds'][_0x1396f6(0x1dd)](_0x36607d, _0x3ab386, _0x599566, _0x9b4164), _0x471379 !== undefined && this[_0x1396f6(0x1de)](_0x471379, _0x345dcc, _0x3c4c92, _0x253760), this;
        },
        'setBoundsCollision': function (_0x57dc91, _0x1b772a, _0x1e7136, _0x1dcab2) {
            var _0x545885 = _0x43793e;
            return _0x57dc91 === undefined && (_0x57dc91 = !![]), _0x1b772a === undefined && (_0x1b772a = !![]), _0x1e7136 === undefined && (_0x1e7136 = !![]), _0x1dcab2 === undefined && (_0x1dcab2 = !![]), this['checkCollision']['left'] = _0x57dc91, this[_0x545885(0x1aa)][_0x545885(0x1df)] = _0x1b772a, this[_0x545885(0x1aa)]['up'] = _0x1e7136, this[_0x545885(0x1aa)][_0x545885(0x1e0)] = _0x1dcab2, this;
        },
        'pause': function () {
            var _0x46e545 = _0x43793e;
            return this[_0x46e545(0x1ba)] = !![], this[_0x46e545(0x1e1)](Events[_0x46e545(0x1e2)]), this;
        },
        'resume': function () {
            var _0x48410c = _0x43793e;
            return this['isPaused'] = ![], this['emit'](Events[_0x48410c(0x1e3)]), this;
        },
        'addCollider': function (_0x5a2936, _0x1ebb13, _0x358084, _0x4fadbe, _0x392234) {
            var _0x124a3a = _0x43793e;
            _0x358084 === undefined && (_0x358084 = null);
            _0x4fadbe === undefined && (_0x4fadbe = null);
            _0x392234 === undefined && (_0x392234 = _0x358084);
            var _0x25068c = new Collider(this, ![], _0x5a2936, _0x1ebb13, _0x358084, _0x4fadbe, _0x392234);
            return this[_0x124a3a(0x1a2)][_0x124a3a(0x1d1)](_0x25068c), _0x25068c;
        },
        'addOverlap': function (_0x487f5e, _0x54ac2b, _0x3b6a13, _0x1efecd, _0x155a0c) {
            var _0x48f2c6 = _0x43793e;
            _0x3b6a13 === undefined && (_0x3b6a13 = null);
            _0x1efecd === undefined && (_0x1efecd = null);
            _0x155a0c === undefined && (_0x155a0c = _0x3b6a13);
            var _0xdd0597 = new Collider(this, !![], _0x487f5e, _0x54ac2b, _0x3b6a13, _0x1efecd, _0x155a0c);
            return this[_0x48f2c6(0x1a2)][_0x48f2c6(0x1d1)](_0xdd0597), _0xdd0597;
        },
        'removeCollider': function (_0x3c0d15) {
            var _0x127893 = _0x43793e;
            return this[_0x127893(0x1a2)][_0x127893(0x1d8)](_0x3c0d15), this;
        },
        'setFPS': function (_0x5210a7) {
            var _0x83f0b = _0x43793e;
            return this[_0x83f0b(0x1af)] = _0x5210a7, this[_0x83f0b(0x1b2)] = 0x1 / this['fps'], this[_0x83f0b(0x1e4)] = 0x3e8 * this[_0x83f0b(0x1b2)], this;
        },
        'update': function (_0x4c955f, _0x354884) {
            var _0x325ee1 = _0x43793e;
            if (this[_0x325ee1(0x1ba)] || this['bodies']['size'] === 0x0)
                return;
            var _0x2d7224, _0x4818da = this[_0x325ee1(0x1b2)], _0x1d322a = this[_0x325ee1(0x1e4)] * this['timeScale'];
            this[_0x325ee1(0x1b1)] += _0x354884;
            var _0x5d4a8e, _0x48a760 = this['bodies'][_0x325ee1(0x1e5)], _0x5687cd = this[_0x325ee1(0x1b1)] >= _0x1d322a;
            !this[_0x325ee1(0x1b0)] && (_0x4818da = _0x354884 * 0.001, _0x5687cd = !![], this['_elapsed'] = 0x0);
            for (_0x2d7224 = 0x0; _0x2d7224 < _0x48a760[_0x325ee1(0x1cc)]; _0x2d7224++) {
                _0x5d4a8e = _0x48a760[_0x2d7224], _0x5d4a8e[_0x325ee1(0x1d5)] && _0x5d4a8e['preUpdate'](_0x5687cd, _0x4818da);
            }
            if (_0x5687cd) {
                this[_0x325ee1(0x1b1)] -= _0x1d322a, this[_0x325ee1(0x1b3)] = 0x1;
                this[_0x325ee1(0x1c6)] && (this[_0x325ee1(0x1e6)][_0x325ee1(0x1e7)](), this[_0x325ee1(0x1e6)][_0x325ee1(0x1e8)](_0x48a760));
                var _0x2b841d = this['colliders'][_0x325ee1(0x1e9)]();
                for (_0x2d7224 = 0x0; _0x2d7224 < _0x2b841d[_0x325ee1(0x1cc)]; _0x2d7224++) {
                    var _0x5a7ec1 = _0x2b841d[_0x2d7224];
                    _0x5a7ec1[_0x325ee1(0x1ea)] && _0x5a7ec1['update']();
                }
                this[_0x325ee1(0x1e1)](Events[_0x325ee1(0x1eb)], _0x4818da);
            }
            while (this[_0x325ee1(0x1b1)] >= _0x1d322a) {
                this[_0x325ee1(0x1b1)] -= _0x1d322a, this[_0x325ee1(0x1ec)](_0x4818da);
            }
        },
        'step': function (_0x12057b) {
            var _0x81463b = _0x43793e, _0x11d557, _0x4ee762, _0x4a2150 = this[_0x81463b(0x1d3)][_0x81463b(0x1e5)], _0x2e86fc = _0x4a2150['length'];
            for (_0x11d557 = 0x0; _0x11d557 < _0x2e86fc; _0x11d557++) {
                _0x4ee762 = _0x4a2150[_0x11d557], _0x4ee762['enable'] && _0x4ee762[_0x81463b(0x1e9)](_0x12057b);
            }
            this['useTree'] && (this[_0x81463b(0x1e6)][_0x81463b(0x1e7)](), this[_0x81463b(0x1e6)][_0x81463b(0x1e8)](_0x4a2150));
            var _0x3a9713 = this[_0x81463b(0x1a2)][_0x81463b(0x1e9)]();
            for (_0x11d557 = 0x0; _0x11d557 < _0x3a9713[_0x81463b(0x1cc)]; _0x11d557++) {
                var _0x2e9dfd = _0x3a9713[_0x11d557];
                _0x2e9dfd[_0x81463b(0x1ea)] && _0x2e9dfd[_0x81463b(0x1e9)]();
            }
            this['emit'](Events['WORLD_STEP'], _0x12057b), this[_0x81463b(0x1b3)]++;
        },
        'postUpdate': function () {
            var _0x3bc1a5 = _0x43793e, _0x175f95, _0x13ec86, _0x26d164 = this[_0x3bc1a5(0x1d3)]['entries'], _0x21f2b8 = _0x26d164[_0x3bc1a5(0x1cc)], _0x4dcfdc = this[_0x3bc1a5(0x1d3)], _0x2b32c8 = this[_0x3bc1a5(0x1a0)];
            if (this[_0x3bc1a5(0x1b3)]) {
                this[_0x3bc1a5(0x1b3)] = 0x0;
                for (_0x175f95 = 0x0; _0x175f95 < _0x21f2b8; _0x175f95++) {
                    _0x13ec86 = _0x26d164[_0x175f95], _0x13ec86[_0x3bc1a5(0x1d5)] && _0x13ec86[_0x3bc1a5(0x1ed)]();
                }
            }
            if (this['drawDebug']) {
                var _0x2f1770 = this[_0x3bc1a5(0x1bd)];
                _0x2f1770[_0x3bc1a5(0x1e7)]();
                for (_0x175f95 = 0x0; _0x175f95 < _0x21f2b8; _0x175f95++) {
                    _0x13ec86 = _0x26d164[_0x175f95], _0x13ec86[_0x3bc1a5(0x1ee)]() && _0x13ec86[_0x3bc1a5(0x1dc)](_0x2f1770);
                }
                _0x26d164 = _0x2b32c8[_0x3bc1a5(0x1e5)], _0x21f2b8 = _0x26d164['length'];
                for (_0x175f95 = 0x0; _0x175f95 < _0x21f2b8; _0x175f95++) {
                    _0x13ec86 = _0x26d164[_0x175f95], _0x13ec86['willDrawDebug']() && _0x13ec86[_0x3bc1a5(0x1dc)](_0x2f1770);
                }
            }
            var _0x486f60 = this['pendingDestroy'];
            if (_0x486f60[_0x3bc1a5(0x1ef)] > 0x0) {
                var _0x5e4820 = this[_0x3bc1a5(0x1e6)], _0x4898e3 = this[_0x3bc1a5(0x1c7)];
                _0x26d164 = _0x486f60[_0x3bc1a5(0x1e5)], _0x21f2b8 = _0x26d164[_0x3bc1a5(0x1cc)];
                for (_0x175f95 = 0x0; _0x175f95 < _0x21f2b8; _0x175f95++) {
                    _0x13ec86 = _0x26d164[_0x175f95];
                    if (_0x13ec86[_0x3bc1a5(0x1d2)] === CONST[_0x3bc1a5(0x1cb)])
                        _0x5e4820[_0x3bc1a5(0x1d8)](_0x13ec86), _0x4dcfdc['delete'](_0x13ec86);
                    else
                        _0x13ec86[_0x3bc1a5(0x1d2)] === CONST[_0x3bc1a5(0x1d0)] && (_0x4898e3[_0x3bc1a5(0x1d8)](_0x13ec86), _0x2b32c8[_0x3bc1a5(0x1d9)](_0x13ec86));
                    _0x13ec86[_0x3bc1a5(0x1f0)] = undefined, _0x13ec86[_0x3bc1a5(0x1f1)] = undefined;
                }
                _0x486f60[_0x3bc1a5(0x1e7)]();
            }
        },
        'updateMotion': function (_0x39a045, _0x4b6fe8) {
            var _0x30fed7 = _0x43793e;
            _0x39a045[_0x30fed7(0x1f2)] && this[_0x30fed7(0x1f3)](_0x39a045, _0x4b6fe8), this['computeVelocity'](_0x39a045, _0x4b6fe8);
        },
        'computeAngularVelocity': function (_0x109fe3, _0x23b121) {
            var _0x29da94 = _0x43793e, _0x4c9793 = _0x109fe3[_0x29da94(0x1f4)], _0x37c810 = _0x109fe3[_0x29da94(0x1f5)], _0x2c80f5 = _0x109fe3[_0x29da94(0x1f6)], _0x26350c = _0x109fe3[_0x29da94(0x1f7)];
            if (_0x37c810)
                _0x4c9793 += _0x37c810 * _0x23b121;
            else {
                if (_0x109fe3[_0x29da94(0x1f8)] && _0x2c80f5) {
                    _0x2c80f5 *= _0x23b121;
                    if (FuzzyGreaterThan(_0x4c9793 - _0x2c80f5, 0x0, 0.1))
                        _0x4c9793 -= _0x2c80f5;
                    else
                        FuzzyLessThan(_0x4c9793 + _0x2c80f5, 0x0, 0.1) ? _0x4c9793 += _0x2c80f5 : _0x4c9793 = 0x0;
                }
            }
            _0x4c9793 = Clamp(_0x4c9793, -_0x26350c, _0x26350c);
            var _0x5e5c7f = _0x4c9793 - _0x109fe3[_0x29da94(0x1f4)];
            _0x109fe3[_0x29da94(0x1f4)] += _0x5e5c7f, _0x109fe3[_0x29da94(0x1f9)] += _0x109fe3['angularVelocity'] * _0x23b121;
        },
        'computeVelocity': function (_0x1a1ca5, _0x50b9cb) {
            var _0x10b705 = _0x43793e, _0x12db51 = _0x1a1ca5['velocity']['x'], _0x3b9d65 = _0x1a1ca5[_0x10b705(0x1fa)]['x'], _0x112f7f = _0x1a1ca5['drag']['x'], _0x3e863f = _0x1a1ca5['maxVelocity']['x'], _0x1c4e60 = _0x1a1ca5['velocity']['y'], _0x15695b = _0x1a1ca5[_0x10b705(0x1fa)]['y'], _0x5a381a = _0x1a1ca5[_0x10b705(0x1fb)]['y'], _0x148890 = _0x1a1ca5[_0x10b705(0x1fc)]['y'], _0x6fbfda = _0x1a1ca5[_0x10b705(0x1fd)], _0x4277e5 = _0x1a1ca5['maxSpeed'], _0x4d628e = _0x1a1ca5[_0x10b705(0x1f8)], _0x6b2b24 = _0x1a1ca5[_0x10b705(0x1fe)];
            _0x1a1ca5[_0x10b705(0x1ff)] && (_0x12db51 += (this['gravity']['x'] + _0x1a1ca5['gravity']['x']) * _0x50b9cb, _0x1c4e60 += (this[_0x10b705(0x1a3)]['y'] + _0x1a1ca5[_0x10b705(0x1a3)]['y']) * _0x50b9cb);
            if (_0x3b9d65)
                _0x12db51 += _0x3b9d65 * _0x50b9cb;
            else {
                if (_0x4d628e && _0x112f7f) {
                    if (_0x6b2b24)
                        _0x112f7f = Math[_0x10b705(0x200)](_0x112f7f, _0x50b9cb), _0x12db51 *= _0x112f7f, _0x6fbfda = Math[_0x10b705(0x201)](_0x12db51 * _0x12db51 + _0x1c4e60 * _0x1c4e60), FuzzyEqual(_0x6fbfda, 0x0, 0.001) && (_0x12db51 = 0x0);
                    else {
                        _0x112f7f *= _0x50b9cb;
                        if (FuzzyGreaterThan(_0x12db51 - _0x112f7f, 0x0, 0.01))
                            _0x12db51 -= _0x112f7f;
                        else
                            FuzzyLessThan(_0x12db51 + _0x112f7f, 0x0, 0.01) ? _0x12db51 += _0x112f7f : _0x12db51 = 0x0;
                    }
                }
            }
            if (_0x15695b)
                _0x1c4e60 += _0x15695b * _0x50b9cb;
            else {
                if (_0x4d628e && _0x5a381a) {
                    if (_0x6b2b24)
                        _0x5a381a = Math[_0x10b705(0x200)](_0x5a381a, _0x50b9cb), _0x1c4e60 *= _0x5a381a, _0x6fbfda = Math[_0x10b705(0x201)](_0x12db51 * _0x12db51 + _0x1c4e60 * _0x1c4e60), FuzzyEqual(_0x6fbfda, 0x0, 0.001) && (_0x1c4e60 = 0x0);
                    else {
                        _0x5a381a *= _0x50b9cb;
                        if (FuzzyGreaterThan(_0x1c4e60 - _0x5a381a, 0x0, 0.01))
                            _0x1c4e60 -= _0x5a381a;
                        else
                            FuzzyLessThan(_0x1c4e60 + _0x5a381a, 0x0, 0.01) ? _0x1c4e60 += _0x5a381a : _0x1c4e60 = 0x0;
                    }
                }
            }
            _0x12db51 = Clamp(_0x12db51, -_0x3e863f, _0x3e863f), _0x1c4e60 = Clamp(_0x1c4e60, -_0x148890, _0x148890), _0x1a1ca5[_0x10b705(0x202)][_0x10b705(0x1d4)](_0x12db51, _0x1c4e60), _0x4277e5 > -0x1 && _0x6fbfda > _0x4277e5 && (_0x1a1ca5[_0x10b705(0x202)][_0x10b705(0x203)]()[_0x10b705(0x204)](_0x4277e5), _0x6fbfda = _0x4277e5), _0x1a1ca5[_0x10b705(0x1fd)] = _0x6fbfda;
        },
        'separate': function (_0xa81f9c, _0x398e56, _0x456d27, _0x3f5853, _0x4971ec, _0x185996) {
            var _0x2ea9f0 = _0x43793e;
            if (!_0x185996 && !_0xa81f9c[_0x2ea9f0(0x1d5)] || !_0x398e56[_0x2ea9f0(0x1d5)] || _0xa81f9c[_0x2ea9f0(0x1aa)][_0x2ea9f0(0x205)] || _0x398e56[_0x2ea9f0(0x1aa)][_0x2ea9f0(0x205)] || !this['intersects'](_0xa81f9c, _0x398e56))
                return ![];
            if (_0x456d27 && _0x456d27[_0x2ea9f0(0x19e)](_0x3f5853, _0xa81f9c[_0x2ea9f0(0x1f1)], _0x398e56[_0x2ea9f0(0x1f1)]) === ![])
                return ![];
            if (_0xa81f9c[_0x2ea9f0(0x206)] && _0x398e56[_0x2ea9f0(0x206)])
                return this[_0x2ea9f0(0x207)](_0xa81f9c, _0x398e56, _0x4971ec);
            if (_0xa81f9c[_0x2ea9f0(0x206)] !== _0x398e56[_0x2ea9f0(0x206)]) {
                var _0x2ebf42 = _0xa81f9c[_0x2ea9f0(0x206)] ? _0x398e56 : _0xa81f9c, _0x2ef1fa = _0xa81f9c['isCircle'] ? _0xa81f9c : _0x398e56, _0x47df14 = {
                        'x': _0x2ebf42['x'],
                        'y': _0x2ebf42['y'],
                        'right': _0x2ebf42[_0x2ea9f0(0x1df)],
                        'bottom': _0x2ebf42[_0x2ea9f0(0x208)]
                    }, _0x4b9153 = _0x2ef1fa[_0x2ea9f0(0x209)];
                if (_0x4b9153['y'] < _0x47df14['y'] || _0x4b9153['y'] > _0x47df14[_0x2ea9f0(0x208)]) {
                    if (_0x4b9153['x'] < _0x47df14['x'] || _0x4b9153['x'] > _0x47df14[_0x2ea9f0(0x1df)])
                        return this[_0x2ea9f0(0x207)](_0xa81f9c, _0x398e56, _0x4971ec);
                }
            }
            var _0x64b5e4 = ![], _0x32bc8f = ![];
            if (_0x4971ec)
                _0x64b5e4 = SeparateX(_0xa81f9c, _0x398e56, _0x4971ec, this['OVERLAP_BIAS']), _0x32bc8f = SeparateY(_0xa81f9c, _0x398e56, _0x4971ec, this[_0x2ea9f0(0x1b5)]);
            else
                this[_0x2ea9f0(0x1b9)] || Math['abs'](this[_0x2ea9f0(0x1a3)]['y'] + _0xa81f9c[_0x2ea9f0(0x1a3)]['y']) < Math[_0x2ea9f0(0x20a)](this[_0x2ea9f0(0x1a3)]['x'] + _0xa81f9c['gravity']['x']) ? (_0x64b5e4 = SeparateX(_0xa81f9c, _0x398e56, _0x4971ec, this['OVERLAP_BIAS']), this[_0x2ea9f0(0x20b)](_0xa81f9c, _0x398e56) && (_0x32bc8f = SeparateY(_0xa81f9c, _0x398e56, _0x4971ec, this[_0x2ea9f0(0x1b5)]))) : (_0x32bc8f = SeparateY(_0xa81f9c, _0x398e56, _0x4971ec, this[_0x2ea9f0(0x1b5)]), this['intersects'](_0xa81f9c, _0x398e56) && (_0x64b5e4 = SeparateX(_0xa81f9c, _0x398e56, _0x4971ec, this[_0x2ea9f0(0x1b5)])));
            var _0x5835a3 = _0x64b5e4 || _0x32bc8f;
            if (_0x5835a3) {
                if (_0x4971ec)
                    (_0xa81f9c[_0x2ea9f0(0x20c)] || _0x398e56[_0x2ea9f0(0x20c)]) && this['emit'](Events[_0x2ea9f0(0x20d)], _0xa81f9c['gameObject'], _0x398e56[_0x2ea9f0(0x1f1)], _0xa81f9c, _0x398e56);
                else
                    (_0xa81f9c['onCollide'] || _0x398e56[_0x2ea9f0(0x20e)]) && this[_0x2ea9f0(0x1e1)](Events[_0x2ea9f0(0x20f)], _0xa81f9c[_0x2ea9f0(0x1f1)], _0x398e56[_0x2ea9f0(0x1f1)], _0xa81f9c, _0x398e56);
            }
            return _0x5835a3;
        },
        'separateCircle': function (_0x6d6ee6, _0x1e0fdb, _0x3ae64d, _0x1e5725) {
            var _0x51eaee = _0x43793e;
            GetOverlapX(_0x6d6ee6, _0x1e0fdb, ![], _0x1e5725), GetOverlapY(_0x6d6ee6, _0x1e0fdb, ![], _0x1e5725);
            var _0x4514ce = 0x0;
            if (_0x6d6ee6[_0x51eaee(0x206)] !== _0x1e0fdb[_0x51eaee(0x206)]) {
                var _0x2264b6 = {
                        'x': _0x1e0fdb[_0x51eaee(0x206)] ? _0x6d6ee6[_0x51eaee(0x210)]['x'] : _0x1e0fdb[_0x51eaee(0x210)]['x'],
                        'y': _0x1e0fdb[_0x51eaee(0x206)] ? _0x6d6ee6[_0x51eaee(0x210)]['y'] : _0x1e0fdb[_0x51eaee(0x210)]['y'],
                        'right': _0x1e0fdb['isCircle'] ? _0x6d6ee6[_0x51eaee(0x1df)] : _0x1e0fdb[_0x51eaee(0x1df)],
                        'bottom': _0x1e0fdb[_0x51eaee(0x206)] ? _0x6d6ee6[_0x51eaee(0x208)] : _0x1e0fdb['bottom']
                    }, _0x594810 = {
                        'x': _0x6d6ee6[_0x51eaee(0x206)] ? _0x6d6ee6['center']['x'] : _0x1e0fdb[_0x51eaee(0x209)]['x'],
                        'y': _0x6d6ee6[_0x51eaee(0x206)] ? _0x6d6ee6[_0x51eaee(0x209)]['y'] : _0x1e0fdb[_0x51eaee(0x209)]['y'],
                        'radius': _0x6d6ee6[_0x51eaee(0x206)] ? _0x6d6ee6[_0x51eaee(0x211)] : _0x1e0fdb[_0x51eaee(0x211)]
                    };
                if (_0x594810['y'] < _0x2264b6['y']) {
                    if (_0x594810['x'] < _0x2264b6['x'])
                        _0x4514ce = DistanceBetween(_0x594810['x'], _0x594810['y'], _0x2264b6['x'], _0x2264b6['y']) - _0x594810[_0x51eaee(0x212)];
                    else
                        _0x594810['x'] > _0x2264b6[_0x51eaee(0x1df)] && (_0x4514ce = DistanceBetween(_0x594810['x'], _0x594810['y'], _0x2264b6[_0x51eaee(0x1df)], _0x2264b6['y']) - _0x594810[_0x51eaee(0x212)]);
                } else {
                    if (_0x594810['y'] > _0x2264b6[_0x51eaee(0x208)]) {
                        if (_0x594810['x'] < _0x2264b6['x'])
                            _0x4514ce = DistanceBetween(_0x594810['x'], _0x594810['y'], _0x2264b6['x'], _0x2264b6[_0x51eaee(0x208)]) - _0x594810['radius'];
                        else
                            _0x594810['x'] > _0x2264b6[_0x51eaee(0x1df)] && (_0x4514ce = DistanceBetween(_0x594810['x'], _0x594810['y'], _0x2264b6[_0x51eaee(0x1df)], _0x2264b6[_0x51eaee(0x208)]) - _0x594810[_0x51eaee(0x212)]);
                    }
                }
                _0x4514ce *= -0x1;
            } else
                _0x4514ce = _0x6d6ee6[_0x51eaee(0x211)] + _0x1e0fdb[_0x51eaee(0x211)] - DistanceBetween(_0x6d6ee6[_0x51eaee(0x209)]['x'], _0x6d6ee6[_0x51eaee(0x209)]['y'], _0x1e0fdb[_0x51eaee(0x209)]['x'], _0x1e0fdb[_0x51eaee(0x209)]['y']);
            _0x6d6ee6['overlapR'] = _0x4514ce, _0x1e0fdb[_0x51eaee(0x213)] = _0x4514ce;
            if (_0x3ae64d || _0x4514ce === 0x0 || _0x6d6ee6[_0x51eaee(0x214)] && _0x1e0fdb[_0x51eaee(0x214)] || _0x6d6ee6['customSeparateX'] || _0x1e0fdb['customSeparateX'])
                return _0x4514ce !== 0x0 && (_0x6d6ee6[_0x51eaee(0x20c)] || _0x1e0fdb[_0x51eaee(0x20c)]) && this[_0x51eaee(0x1e1)](Events[_0x51eaee(0x20d)], _0x6d6ee6[_0x51eaee(0x1f1)], _0x1e0fdb[_0x51eaee(0x1f1)], _0x6d6ee6, _0x1e0fdb), _0x4514ce !== 0x0;
            var _0x3999f2 = _0x6d6ee6['center']['x'] - _0x1e0fdb[_0x51eaee(0x209)]['x'], _0x476ef7 = _0x6d6ee6[_0x51eaee(0x209)]['y'] - _0x1e0fdb['center']['y'], _0x20c021 = Math['sqrt'](Math[_0x51eaee(0x200)](_0x3999f2, 0x2) + Math['pow'](_0x476ef7, 0x2)), _0x18bd73 = (_0x1e0fdb[_0x51eaee(0x209)]['x'] - _0x6d6ee6['center']['x']) / _0x20c021 || 0x0, _0xb31ec8 = (_0x1e0fdb[_0x51eaee(0x209)]['y'] - _0x6d6ee6[_0x51eaee(0x209)]['y']) / _0x20c021 || 0x0, _0x2164fb = 0x2 * (_0x6d6ee6[_0x51eaee(0x202)]['x'] * _0x18bd73 + _0x6d6ee6[_0x51eaee(0x202)]['y'] * _0xb31ec8 - _0x1e0fdb[_0x51eaee(0x202)]['x'] * _0x18bd73 - _0x1e0fdb[_0x51eaee(0x202)]['y'] * _0xb31ec8) / (_0x6d6ee6[_0x51eaee(0x215)] + _0x1e0fdb[_0x51eaee(0x215)]);
            (_0x6d6ee6['immovable'] || _0x1e0fdb['immovable']) && (_0x2164fb *= 0x2);
            !_0x6d6ee6[_0x51eaee(0x214)] && (_0x6d6ee6[_0x51eaee(0x202)]['x'] = _0x6d6ee6['velocity']['x'] - _0x2164fb / _0x6d6ee6['mass'] * _0x18bd73, _0x6d6ee6['velocity']['y'] = _0x6d6ee6['velocity']['y'] - _0x2164fb / _0x6d6ee6[_0x51eaee(0x215)] * _0xb31ec8);
            !_0x1e0fdb[_0x51eaee(0x214)] && (_0x1e0fdb[_0x51eaee(0x202)]['x'] = _0x1e0fdb[_0x51eaee(0x202)]['x'] + _0x2164fb / _0x1e0fdb[_0x51eaee(0x215)] * _0x18bd73, _0x1e0fdb[_0x51eaee(0x202)]['y'] = _0x1e0fdb[_0x51eaee(0x202)]['y'] + _0x2164fb / _0x1e0fdb[_0x51eaee(0x215)] * _0xb31ec8);
            !_0x6d6ee6[_0x51eaee(0x214)] && !_0x1e0fdb[_0x51eaee(0x214)] && (_0x4514ce /= 0x2);
            var _0x156be5 = AngleBetweenPoints(_0x6d6ee6[_0x51eaee(0x209)], _0x1e0fdb[_0x51eaee(0x209)]), _0x33d98d = (_0x4514ce + MATH_CONST[_0x51eaee(0x216)]) * Math['cos'](_0x156be5), _0x3b7c77 = (_0x4514ce + MATH_CONST[_0x51eaee(0x216)]) * Math[_0x51eaee(0x217)](_0x156be5);
            return !_0x6d6ee6[_0x51eaee(0x214)] && (_0x6d6ee6['x'] -= _0x33d98d, _0x6d6ee6['y'] -= _0x3b7c77, _0x6d6ee6[_0x51eaee(0x218)]()), !_0x1e0fdb[_0x51eaee(0x214)] && (_0x1e0fdb['x'] += _0x33d98d, _0x1e0fdb['y'] += _0x3b7c77, _0x1e0fdb[_0x51eaee(0x218)]()), _0x6d6ee6[_0x51eaee(0x202)]['x'] *= _0x6d6ee6['bounce']['x'], _0x6d6ee6[_0x51eaee(0x202)]['y'] *= _0x6d6ee6[_0x51eaee(0x219)]['y'], _0x1e0fdb[_0x51eaee(0x202)]['x'] *= _0x1e0fdb[_0x51eaee(0x219)]['x'], _0x1e0fdb[_0x51eaee(0x202)]['y'] *= _0x1e0fdb[_0x51eaee(0x219)]['y'], (_0x6d6ee6[_0x51eaee(0x20e)] || _0x1e0fdb['onCollide']) && this[_0x51eaee(0x1e1)](Events[_0x51eaee(0x20f)], _0x6d6ee6[_0x51eaee(0x1f1)], _0x1e0fdb[_0x51eaee(0x1f1)], _0x6d6ee6, _0x1e0fdb), !![];
        },
        'intersects': function (_0x34fc72, _0x2cb0bf) {
            var _0x34a694 = _0x43793e;
            if (_0x34fc72 === _0x2cb0bf)
                return ![];
            if (!_0x34fc72[_0x34a694(0x206)] && !_0x2cb0bf[_0x34a694(0x206)])
                return !(_0x34fc72[_0x34a694(0x1df)] <= _0x2cb0bf[_0x34a694(0x210)]['x'] || _0x34fc72[_0x34a694(0x208)] <= _0x2cb0bf['position']['y'] || _0x34fc72['position']['x'] >= _0x2cb0bf[_0x34a694(0x1df)] || _0x34fc72[_0x34a694(0x210)]['y'] >= _0x2cb0bf[_0x34a694(0x208)]);
            else
                return _0x34fc72[_0x34a694(0x206)] ? _0x2cb0bf['isCircle'] ? DistanceBetween(_0x34fc72[_0x34a694(0x209)]['x'], _0x34fc72[_0x34a694(0x209)]['y'], _0x2cb0bf[_0x34a694(0x209)]['x'], _0x2cb0bf['center']['y']) <= _0x34fc72['halfWidth'] + _0x2cb0bf[_0x34a694(0x211)] : this[_0x34a694(0x21a)](_0x34fc72, _0x2cb0bf) : this[_0x34a694(0x21a)](_0x2cb0bf, _0x34fc72);
        },
        'circleBodyIntersects': function (_0x19c127, _0x1e5261) {
            var _0x1b3c12 = _0x43793e, _0x2ffd13 = Clamp(_0x19c127['center']['x'], _0x1e5261[_0x1b3c12(0x21b)], _0x1e5261[_0x1b3c12(0x1df)]), _0x2425ac = Clamp(_0x19c127[_0x1b3c12(0x209)]['y'], _0x1e5261['top'], _0x1e5261[_0x1b3c12(0x208)]), _0x168a32 = (_0x19c127[_0x1b3c12(0x209)]['x'] - _0x2ffd13) * (_0x19c127[_0x1b3c12(0x209)]['x'] - _0x2ffd13), _0x381a39 = (_0x19c127[_0x1b3c12(0x209)]['y'] - _0x2425ac) * (_0x19c127[_0x1b3c12(0x209)]['y'] - _0x2425ac);
            return _0x168a32 + _0x381a39 <= _0x19c127[_0x1b3c12(0x211)] * _0x19c127[_0x1b3c12(0x211)];
        },
        'overlap': function (_0x41a0f1, _0x32fe18, _0x3a1e15, _0x5e5679, _0x4168d2) {
            var _0x2e6554 = _0x43793e;
            return _0x3a1e15 === undefined && (_0x3a1e15 = null), _0x5e5679 === undefined && (_0x5e5679 = null), _0x4168d2 === undefined && (_0x4168d2 = _0x3a1e15), this[_0x2e6554(0x21c)](_0x41a0f1, _0x32fe18, _0x3a1e15, _0x5e5679, _0x4168d2, !![]);
        },
        'collide': function (_0x1c51cf, _0x35eede, _0x5fc128, _0x147c03, _0x5da319) {
            var _0xfd6ce9 = _0x43793e;
            return _0x5fc128 === undefined && (_0x5fc128 = null), _0x147c03 === undefined && (_0x147c03 = null), _0x5da319 === undefined && (_0x5da319 = _0x5fc128), this[_0xfd6ce9(0x21c)](_0x1c51cf, _0x35eede, _0x5fc128, _0x147c03, _0x5da319, ![]);
        },
        'collideObjects': function (_0x26042b, _0x43e610, _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a) {
            var _0x2212be = _0x43793e, _0x40d05e, _0x6bf8e9;
            _0x26042b['isParent'] && _0x26042b[_0x2212be(0x1d2)] === undefined && (_0x26042b = _0x26042b[_0x2212be(0x21d)][_0x2212be(0x1e5)]);
            _0x43e610 && _0x43e610[_0x2212be(0x1cd)] && _0x43e610[_0x2212be(0x1d2)] === undefined && (_0x43e610 = _0x43e610[_0x2212be(0x21d)][_0x2212be(0x1e5)]);
            var _0x30da40 = Array[_0x2212be(0x21e)](_0x26042b), _0x327091 = Array['isArray'](_0x43e610);
            this[_0x2212be(0x1bb)] = 0x0;
            if (!_0x30da40 && !_0x327091)
                this[_0x2212be(0x21f)](_0x26042b, _0x43e610, _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a);
            else {
                if (!_0x30da40 && _0x327091)
                    for (_0x40d05e = 0x0; _0x40d05e < _0x43e610[_0x2212be(0x1cc)]; _0x40d05e++) {
                        this[_0x2212be(0x21f)](_0x26042b, _0x43e610[_0x40d05e], _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a);
                    }
                else {
                    if (_0x30da40 && !_0x327091) {
                        if (!_0x43e610)
                            for (_0x40d05e = 0x0; _0x40d05e < _0x26042b[_0x2212be(0x1cc)]; _0x40d05e++) {
                                var _0x2bc80d = _0x26042b[_0x40d05e];
                                for (_0x6bf8e9 = _0x40d05e + 0x1; _0x6bf8e9 < _0x26042b['length']; _0x6bf8e9++) {
                                    if (_0x40d05e === _0x6bf8e9)
                                        continue;
                                    this[_0x2212be(0x21f)](_0x2bc80d, _0x26042b[_0x6bf8e9], _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a);
                                }
                            }
                        else
                            for (_0x40d05e = 0x0; _0x40d05e < _0x26042b[_0x2212be(0x1cc)]; _0x40d05e++) {
                                this[_0x2212be(0x21f)](_0x26042b[_0x40d05e], _0x43e610, _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a);
                            }
                    } else
                        for (_0x40d05e = 0x0; _0x40d05e < _0x26042b[_0x2212be(0x1cc)]; _0x40d05e++) {
                            for (_0x6bf8e9 = 0x0; _0x6bf8e9 < _0x43e610['length']; _0x6bf8e9++) {
                                this[_0x2212be(0x21f)](_0x26042b[_0x40d05e], _0x43e610[_0x6bf8e9], _0x1365ca, _0x2f13cf, _0x12d015, _0x4ac15a);
                            }
                        }
                }
            }
            return this[_0x2212be(0x1bb)] > 0x0;
        },
        'collideHandler': function (_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb) {
            var _0x400d45 = _0x43793e;
            if (_0x3576f5 === undefined && _0x5e66b1['isParent'])
                return this[_0x400d45(0x220)](_0x5e66b1, _0x5e66b1, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
            if (!_0x5e66b1 || !_0x3576f5)
                return ![];
            if (_0x5e66b1[_0x400d45(0x1cf)]) {
                if (_0x3576f5[_0x400d45(0x1cf)])
                    return this['collideSpriteVsSprite'](_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                else {
                    if (_0x3576f5['isParent'])
                        return this[_0x400d45(0x221)](_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                    else {
                        if (_0x3576f5[_0x400d45(0x222)])
                            return this['collideSpriteVsTilemapLayer'](_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                    }
                }
            } else {
                if (_0x5e66b1[_0x400d45(0x1cd)]) {
                    if (_0x3576f5['body'])
                        return this[_0x400d45(0x221)](_0x3576f5, _0x5e66b1, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                    else {
                        if (_0x3576f5[_0x400d45(0x1cd)])
                            return this['collideGroupVsGroup'](_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                        else {
                            if (_0x3576f5['isTilemap'])
                                return this['collideGroupVsTilemapLayer'](_0x5e66b1, _0x3576f5, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                        }
                    }
                } else {
                    if (_0x5e66b1[_0x400d45(0x222)]) {
                        if (_0x3576f5[_0x400d45(0x1cf)])
                            return this[_0x400d45(0x223)](_0x3576f5, _0x5e66b1, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                        else {
                            if (_0x3576f5[_0x400d45(0x1cd)])
                                return this[_0x400d45(0x224)](_0x3576f5, _0x5e66b1, _0x3556e0, _0x4721b7, _0x4d5958, _0x1f60bb);
                        }
                    }
                }
            }
        },
        'collideSpriteVsSprite': function (_0xd3c37c, _0x86d609, _0x20494d, _0x58a211, _0x575f22, _0x22456a) {
            var _0x179d86 = _0x43793e;
            if (!_0xd3c37c[_0x179d86(0x1cf)] || !_0x86d609['body'])
                return ![];
            return this[_0x179d86(0x225)](_0xd3c37c['body'], _0x86d609['body'], _0x58a211, _0x575f22, _0x22456a) && (_0x20494d && _0x20494d[_0x179d86(0x19e)](_0x575f22, _0xd3c37c, _0x86d609), this[_0x179d86(0x1bb)]++), !![];
        },
        'collideSpriteVsGroup': function (_0x245b96, _0x3e0ad8, _0x409777, _0x5fab2f, _0x30605d, _0xd2b13e) {
            var _0xf7bb84 = _0x43793e, _0xa0f08a = _0x245b96['body'];
            if (_0x3e0ad8[_0xf7bb84(0x1cc)] === 0x0 || !_0xa0f08a || !_0xa0f08a[_0xf7bb84(0x1d5)] || _0xa0f08a[_0xf7bb84(0x1aa)]['none'])
                return;
            var _0x4daf6a, _0x4e4004, _0x1b6417;
            if (this[_0xf7bb84(0x1c6)] || _0x3e0ad8[_0xf7bb84(0x1d2)] === CONST[_0xf7bb84(0x1d0)]) {
                var _0x1483ae = this['treeMinMax'];
                _0x1483ae[_0xf7bb84(0x226)] = _0xa0f08a['left'], _0x1483ae[_0xf7bb84(0x227)] = _0xa0f08a[_0xf7bb84(0x228)], _0x1483ae[_0xf7bb84(0x229)] = _0xa0f08a[_0xf7bb84(0x1df)], _0x1483ae[_0xf7bb84(0x22a)] = _0xa0f08a[_0xf7bb84(0x208)];
                var _0x2b8a55 = _0x3e0ad8['physicsType'] === CONST[_0xf7bb84(0x1cb)] ? this[_0xf7bb84(0x1e6)][_0xf7bb84(0x22b)](_0x1483ae) : this[_0xf7bb84(0x1c7)][_0xf7bb84(0x22b)](_0x1483ae);
                _0x4e4004 = _0x2b8a55[_0xf7bb84(0x1cc)];
                for (_0x4daf6a = 0x0; _0x4daf6a < _0x4e4004; _0x4daf6a++) {
                    _0x1b6417 = _0x2b8a55[_0x4daf6a];
                    if (_0xa0f08a === _0x1b6417 || !_0x1b6417[_0xf7bb84(0x1d5)] || _0x1b6417[_0xf7bb84(0x1aa)][_0xf7bb84(0x205)] || !_0x3e0ad8[_0xf7bb84(0x22c)](_0x1b6417['gameObject']))
                        continue;
                    this['separate'](_0xa0f08a, _0x1b6417, _0x5fab2f, _0x30605d, _0xd2b13e, !![]) && (_0x409777 && _0x409777[_0xf7bb84(0x19e)](_0x30605d, _0xa0f08a[_0xf7bb84(0x1f1)], _0x1b6417['gameObject']), this[_0xf7bb84(0x1bb)]++);
                }
            } else {
                var _0x51706a = _0x3e0ad8[_0xf7bb84(0x1d6)](), _0x339d1f = _0x3e0ad8['children'][_0xf7bb84(0x1e5)][_0xf7bb84(0x22d)](_0x245b96);
                _0x4e4004 = _0x51706a['length'];
                for (_0x4daf6a = 0x0; _0x4daf6a < _0x4e4004; _0x4daf6a++) {
                    _0x1b6417 = _0x51706a[_0x4daf6a]['body'];
                    if (!_0x1b6417 || _0x4daf6a === _0x339d1f || !_0x1b6417[_0xf7bb84(0x1d5)])
                        continue;
                    this[_0xf7bb84(0x225)](_0xa0f08a, _0x1b6417, _0x5fab2f, _0x30605d, _0xd2b13e) && (_0x409777 && _0x409777['call'](_0x30605d, _0xa0f08a[_0xf7bb84(0x1f1)], _0x1b6417[_0xf7bb84(0x1f1)]), this['_total']++);
                }
            }
        },
        'collideGroupVsTilemapLayer': function (_0x4bf870, _0xf0d348, _0x42c996, _0x4d64e3, _0x6d014d, _0xc90ea7) {
            var _0x262343 = _0x43793e, _0x4360c0 = _0x4bf870[_0x262343(0x1d6)]();
            if (_0x4360c0['length'] === 0x0)
                return ![];
            var _0x536657 = ![];
            for (var _0x1c755f = 0x0; _0x1c755f < _0x4360c0[_0x262343(0x1cc)]; _0x1c755f++) {
                _0x4360c0[_0x1c755f]['body'] && (this['collideSpriteVsTilemapLayer'](_0x4360c0[_0x1c755f], _0xf0d348, _0x42c996, _0x4d64e3, _0x6d014d, _0xc90ea7) && (_0x536657 = !![]));
            }
            return _0x536657;
        },
        'collideTiles': function (_0x12702e, _0x3649d0, _0x660665, _0x110213, _0x4bb721) {
            var _0xf23441 = _0x43793e;
            return !_0x12702e[_0xf23441(0x1cf)]['enable'] || _0x3649d0[_0xf23441(0x1cc)] === 0x0 ? ![] : this[_0xf23441(0x22e)](_0x12702e, _0x3649d0, _0x660665, _0x110213, _0x4bb721, ![], ![]);
        },
        'overlapTiles': function (_0x6d3b34, _0x370f0d, _0x4a7e65, _0x26735c, _0x267c45) {
            var _0x30251e = _0x43793e;
            return !_0x6d3b34['body'][_0x30251e(0x1d5)] || _0x370f0d[_0x30251e(0x1cc)] === 0x0 ? ![] : this[_0x30251e(0x22e)](_0x6d3b34, _0x370f0d, _0x4a7e65, _0x26735c, _0x267c45, !![], ![]);
        },
        'collideSpriteVsTilemapLayer': function (_0x111b03, _0x160f15, _0x4f2c72, _0x2e42d0, _0x588b39, _0x2757ec) {
            var _0x3a3120 = _0x43793e, _0x5b53e1 = _0x111b03[_0x3a3120(0x1cf)];
            if (!_0x5b53e1[_0x3a3120(0x1d5)] || _0x5b53e1['checkCollision']['none'])
                return ![];
            var _0x48928c = _0x5b53e1[_0x3a3120(0x210)]['x'], _0x5e8dd1 = _0x5b53e1[_0x3a3120(0x210)]['y'], _0x1cc1f4 = _0x5b53e1[_0x3a3120(0x1a7)], _0x1253e4 = _0x5b53e1[_0x3a3120(0x1a8)], _0x2cff73 = _0x160f15['layer'];
            if (_0x2cff73[_0x3a3120(0x22f)] > _0x2cff73[_0x3a3120(0x230)]) {
                var _0x3ce23a = (_0x2cff73[_0x3a3120(0x22f)] - _0x2cff73['baseTileWidth']) * _0x160f15[_0x3a3120(0x231)];
                _0x48928c -= _0x3ce23a, _0x1cc1f4 += _0x3ce23a;
            }
            if (_0x2cff73[_0x3a3120(0x232)] > _0x2cff73['baseTileHeight']) {
                var _0x2364e1 = (_0x2cff73[_0x3a3120(0x232)] - _0x2cff73[_0x3a3120(0x233)]) * _0x160f15[_0x3a3120(0x234)];
                _0x1253e4 += _0x2364e1;
            }
            var _0x11b7f6 = GetTilesWithinWorldXY(_0x48928c, _0x5e8dd1, _0x1cc1f4, _0x1253e4, null, _0x160f15['scene'][_0x3a3120(0x235)]['main'], _0x160f15['layer']);
            return _0x11b7f6[_0x3a3120(0x1cc)] === 0x0 ? ![] : this['collideSpriteVsTilesHandler'](_0x111b03, _0x11b7f6, _0x4f2c72, _0x2e42d0, _0x588b39, _0x2757ec, !![]);
        },
        'collideSpriteVsTilesHandler': function (_0x257842, _0x1d6b85, _0x52542b, _0x41c9aa, _0x20f54b, _0x407fc1, _0x32834d) {
            var _0x3ad002 = _0x43793e, _0x2b98b2 = _0x257842[_0x3ad002(0x1cf)], _0x2e7643, _0x13a1e7 = {
                    'left': 0x0,
                    'right': 0x0,
                    'top': 0x0,
                    'bottom': 0x0
                }, _0x460646, _0x1bdb3f = ![];
            for (var _0x2b3b87 = 0x0; _0x2b3b87 < _0x1d6b85['length']; _0x2b3b87++) {
                _0x2e7643 = _0x1d6b85[_0x2b3b87], _0x460646 = _0x2e7643[_0x3ad002(0x236)];
                var _0x420b58 = _0x460646['tileToWorldXY'](_0x2e7643['x'], _0x2e7643['y']);
                _0x13a1e7['left'] = _0x420b58['x'], _0x13a1e7[_0x3ad002(0x228)] = _0x420b58['y'];
                _0x2e7643[_0x3ad002(0x237)] !== _0x2e7643[_0x3ad002(0x1a8)] && (_0x13a1e7[_0x3ad002(0x228)] -= (_0x2e7643[_0x3ad002(0x1a8)] - _0x2e7643['baseHeight']) * _0x460646[_0x3ad002(0x234)]);
                _0x13a1e7[_0x3ad002(0x1df)] = _0x13a1e7[_0x3ad002(0x21b)] + _0x2e7643[_0x3ad002(0x1a7)] * _0x460646[_0x3ad002(0x231)], _0x13a1e7[_0x3ad002(0x208)] = _0x13a1e7[_0x3ad002(0x228)] + _0x2e7643[_0x3ad002(0x1a8)] * _0x460646['scaleY'];
                if (TileIntersectsBody(_0x13a1e7, _0x2b98b2) && (!_0x41c9aa || _0x41c9aa[_0x3ad002(0x19e)](_0x20f54b, _0x257842, _0x2e7643)) && ProcessTileCallbacks(_0x2e7643, _0x257842) && (_0x407fc1 || SeparateTile(_0x2b3b87, _0x2b98b2, _0x2e7643, _0x13a1e7, _0x460646, this[_0x3ad002(0x1b7)], _0x32834d))) {
                    this[_0x3ad002(0x1bb)]++, _0x1bdb3f = !![];
                    _0x52542b && _0x52542b[_0x3ad002(0x19e)](_0x20f54b, _0x257842, _0x2e7643);
                    if (_0x407fc1 && _0x2b98b2[_0x3ad002(0x20c)])
                        this[_0x3ad002(0x1e1)](Events['TILE_OVERLAP'], _0x257842, _0x2e7643, _0x2b98b2);
                    else
                        _0x2b98b2['onCollide'] && this[_0x3ad002(0x1e1)](Events[_0x3ad002(0x238)], _0x257842, _0x2e7643, _0x2b98b2);
                }
            }
            return _0x1bdb3f;
        },
        'collideGroupVsGroup': function (_0x5d7b39, _0x1d923b, _0x493b8f, _0x1389e5, _0x30ce05, _0x350810) {
            var _0x1ae41b = _0x43793e;
            if (_0x5d7b39[_0x1ae41b(0x1cc)] === 0x0 || _0x1d923b[_0x1ae41b(0x1cc)] === 0x0)
                return;
            var _0x5f41bd = _0x5d7b39[_0x1ae41b(0x1d6)]();
            for (var _0x4d5947 = 0x0; _0x4d5947 < _0x5f41bd[_0x1ae41b(0x1cc)]; _0x4d5947++) {
                this['collideSpriteVsGroup'](_0x5f41bd[_0x4d5947], _0x1d923b, _0x493b8f, _0x1389e5, _0x30ce05, _0x350810);
            }
        },
        'wrap': function (_0x42e994, _0x14a458) {
            var _0x34a3ad = _0x43793e;
            if (_0x42e994['body'])
                this[_0x34a3ad(0x239)](_0x42e994, _0x14a458);
            else {
                if (_0x42e994[_0x34a3ad(0x1d6)])
                    this[_0x34a3ad(0x23a)](_0x42e994['getChildren'](), _0x14a458);
                else
                    Array[_0x34a3ad(0x21e)](_0x42e994) ? this['wrapArray'](_0x42e994, _0x14a458) : this[_0x34a3ad(0x239)](_0x42e994, _0x14a458);
            }
        },
        'wrapArray': function (_0x325d9a, _0x459a29) {
            var _0x334e98 = _0x43793e;
            for (var _0x855e0c = 0x0; _0x855e0c < _0x325d9a['length']; _0x855e0c++) {
                this[_0x334e98(0x239)](_0x325d9a[_0x855e0c], _0x459a29);
            }
        },
        'wrapObject': function (_0x1c1462, _0x173610) {
            var _0x5eaa06 = _0x43793e;
            _0x173610 === undefined && (_0x173610 = 0x0), _0x1c1462['x'] = Wrap(_0x1c1462['x'], this[_0x5eaa06(0x1a6)]['left'] - _0x173610, this[_0x5eaa06(0x1a6)]['right'] + _0x173610), _0x1c1462['y'] = Wrap(_0x1c1462['y'], this[_0x5eaa06(0x1a6)][_0x5eaa06(0x228)] - _0x173610, this['bounds'][_0x5eaa06(0x208)] + _0x173610);
        },
        'shutdown': function () {
            var _0x33c2a7 = _0x43793e;
            this[_0x33c2a7(0x1e6)][_0x33c2a7(0x1e7)](), this['staticTree']['clear'](), this[_0x33c2a7(0x1d3)]['clear'](), this[_0x33c2a7(0x1a0)][_0x33c2a7(0x1e7)](), this[_0x33c2a7(0x1a2)][_0x33c2a7(0x23b)](), this[_0x33c2a7(0x23c)]();
        },
        'destroy': function () {
            var _0xf8fb93 = _0x43793e;
            this[_0xf8fb93(0x23d)](), this[_0xf8fb93(0x19f)] = null;
        }
    });
function _0x252c(_0x1fa87e, _0x235c8c) {
    return _0x252c = function (_0x341915, _0x252c16) {
        _0x341915 = _0x341915 - 0x17e;
        var _0x973961 = _0x3419[_0x341915];
        return _0x973961;
    }, _0x252c(_0x1fa87e, _0x235c8c);
}
module[_0x43793e(0x23e)] = World;
