'use strict';
var _0x779f = [
    'satisfies',
    'SHASUMS256.txt',
    'relative',
    'path',
    'normalize',
    'test',
    'win-',
    '.lib',
    '230309ytjNmX',
    '1AKmnNG',
    '186847puIIbz',
    '44282HkQrjg',
    '2FFcdKV',
    '2oFlaYS',
    '17757tSVixm',
    '1UzMOHi',
    '208685EZUGIP',
    '191311mibFLG',
    '1bjsCNv',
    '4513mCOLpZ',
    '75lqOUzG',
    'semver',
    'url',
    'npmlog',
    'target',
    'opts',
    'disturl',
    'version',
    'parse',
    'name',
    'major',
    'iojs',
    'node',
    'env',
    'NODEJS_ORG_MIRROR',
    'verbose',
    'download',
    'using\x20dist-url',
    'replace',
    'https://nodejs.org/dist',
    'resolve',
    'headersUrl',
    'x86',
    'libUrl',
    'x64',
    'arm64'
];
var _0x3fa369 = _0x52fb;
(function (_0x1ec97a, _0x304575) {
    var _0x2a42cb = _0x52fb;
    while (!![]) {
        try {
            var _0x2cc199 = parseInt(_0x2a42cb(0x129)) * -parseInt(_0x2a42cb(0x12a)) + parseInt(_0x2a42cb(0x12b)) + -parseInt(_0x2a42cb(0x12c)) * -parseInt(_0x2a42cb(0x12d)) + parseInt(_0x2a42cb(0x12e)) * parseInt(_0x2a42cb(0x12f)) + parseInt(_0x2a42cb(0x130)) * parseInt(_0x2a42cb(0x131)) + -parseInt(_0x2a42cb(0x132)) * -parseInt(_0x2a42cb(0x133)) + -parseInt(_0x2a42cb(0x134)) * parseInt(_0x2a42cb(0x135));
            if (_0x2cc199 === _0x304575)
                break;
            else
                _0x1ec97a['push'](_0x1ec97a['shift']());
        } catch (_0x404b43) {
            _0x1ec97a['push'](_0x1ec97a['shift']());
        }
    }
}(_0x779f, 0x22b39));
const semver = require(_0x3fa369(0x136)), url = require(_0x3fa369(0x137)), path = require('path'), log = require(_0x3fa369(0x138)), headersTarballRange = '>=\x203.0.0\x20||\x20~0.12.10\x20||\x20~0.10.42', bitsre = /\/win-(x86|x64|arm64)\//, bitsreV3 = /\/win-(x86|ia32|x64)\//;
function processRelease(_0x55e36a, _0x58e96e, _0x448656, _0x3c743c) {
    var _0x5f1326 = _0x3fa369, _0x398aae = semver['valid'](_0x55e36a[0x0]) && _0x55e36a[0x0] || _0x58e96e['opts'][_0x5f1326(0x139)] || _0x448656, _0x4ed092 = semver['parse'](_0x398aae), _0x303f69 = _0x58e96e[_0x5f1326(0x13a)]['dist-url'] || _0x58e96e[_0x5f1326(0x13a)][_0x5f1326(0x13b)], _0x1b5126, _0x45bffc, _0x40aa46, _0x37c0aa, _0x519ece, _0x5e6741, _0x1e0fd0, _0x103216, _0x5ee06f, _0x59ea26;
    if (!_0x4ed092)
        return { 'version': _0x398aae };
    return _0x398aae = _0x4ed092[_0x5f1326(0x13c)], _0x1b5126 = _0x398aae === semver[_0x5f1326(0x13d)](_0x448656)[_0x5f1326(0x13c)], !_0x1b5126 && (_0x3c743c = null), _0x3c743c ? _0x40aa46 = _0x3c743c[_0x5f1326(0x13e)]['replace'](/io\.js/, 'iojs') : (_0x45bffc = _0x4ed092[_0x5f1326(0x13f)] >= 0x1 && _0x4ed092['major'] < 0x4, _0x40aa46 = _0x45bffc ? _0x5f1326(0x140) : _0x5f1326(0x141)), !_0x303f69 && process[_0x5f1326(0x142)][_0x5f1326(0x143)] && (_0x303f69 = process['env']['NODEJS_ORG_MIRROR']), _0x303f69 && log[_0x5f1326(0x144)](_0x5f1326(0x145), _0x5f1326(0x146), _0x303f69), _0x303f69 ? _0x37c0aa = _0x303f69[_0x5f1326(0x147)](/\/+$/, '') : _0x37c0aa = _0x5f1326(0x148), _0x37c0aa += '/v' + _0x398aae + '/', _0x3c743c && _0x3c743c['headersUrl'] && !_0x303f69 ? (_0x519ece = url[_0x5f1326(0x149)](_0x3c743c[_0x5f1326(0x14a)], './'), _0x5e6741 = resolveLibUrl(_0x40aa46, _0x3c743c['libUrl'] || _0x519ece || _0x37c0aa, _0x5f1326(0x14b), _0x4ed092[_0x5f1326(0x13f)]), _0x1e0fd0 = resolveLibUrl(_0x40aa46, _0x3c743c[_0x5f1326(0x14c)] || _0x519ece || _0x37c0aa, _0x5f1326(0x14d), _0x4ed092[_0x5f1326(0x13f)]), _0x103216 = resolveLibUrl(_0x40aa46, _0x3c743c[_0x5f1326(0x14c)] || _0x519ece || _0x37c0aa, _0x5f1326(0x14e), _0x4ed092['major']), _0x5ee06f = _0x3c743c[_0x5f1326(0x14a)]) : (_0x519ece = _0x37c0aa, _0x5e6741 = resolveLibUrl(_0x40aa46, _0x519ece, 'x86', _0x4ed092[_0x5f1326(0x13f)]), _0x1e0fd0 = resolveLibUrl(_0x40aa46, _0x519ece, _0x5f1326(0x14d), _0x4ed092[_0x5f1326(0x13f)]), _0x103216 = resolveLibUrl(_0x40aa46, _0x519ece, _0x5f1326(0x14e), _0x4ed092[_0x5f1326(0x13f)]), _0x59ea26 = semver[_0x5f1326(0x14f)](_0x4ed092, headersTarballRange), _0x5ee06f = url['resolve'](_0x519ece, _0x40aa46 + '-v' + _0x398aae + (_0x59ea26 ? '-headers' : '') + '.tar.gz')), {
        'version': _0x398aae,
        'semver': _0x4ed092,
        'name': _0x40aa46,
        'baseUrl': _0x519ece,
        'tarballUrl': _0x5ee06f,
        'shasumsUrl': url[_0x5f1326(0x149)](_0x519ece, _0x5f1326(0x150)),
        'versionDir': (_0x40aa46 !== _0x5f1326(0x141) ? _0x40aa46 + '-' : '') + _0x398aae,
        'ia32': {
            'libUrl': _0x5e6741,
            'libPath': normalizePath(path[_0x5f1326(0x151)](url['parse'](_0x519ece)[_0x5f1326(0x152)], url[_0x5f1326(0x13d)](_0x5e6741)[_0x5f1326(0x152)]))
        },
        'x64': {
            'libUrl': _0x1e0fd0,
            'libPath': normalizePath(path['relative'](url[_0x5f1326(0x13d)](_0x519ece)[_0x5f1326(0x152)], url[_0x5f1326(0x13d)](_0x1e0fd0)['path']))
        },
        'arm64': {
            'libUrl': _0x103216,
            'libPath': normalizePath(path['relative'](url[_0x5f1326(0x13d)](_0x519ece)[_0x5f1326(0x152)], url['parse'](_0x103216)[_0x5f1326(0x152)]))
        }
    };
}
function normalizePath(_0x5dd998) {
    var _0x5ba9af = _0x3fa369;
    return path[_0x5ba9af(0x153)](_0x5dd998)[_0x5ba9af(0x147)](/\\/g, '/');
}
function _0x52fb(_0x1c6193, _0x425a35) {
    return _0x52fb = function (_0x779fe9, _0x52fb99) {
        _0x779fe9 = _0x779fe9 - 0x129;
        var _0x3b2558 = _0x779f[_0x779fe9];
        return _0x3b2558;
    }, _0x52fb(_0x1c6193, _0x425a35);
}
function resolveLibUrl(_0x1ba0d2, _0x2a86ac, _0x2387c9, _0x25844f) {
    var _0x1bc4ee = _0x3fa369, _0x4cb09d = url[_0x1bc4ee(0x149)](_0x2a86ac, './'), _0x46ab4a = bitsre[_0x1bc4ee(0x154)](_0x2a86ac) || _0x25844f === 0x3 && bitsreV3[_0x1bc4ee(0x154)](_0x2a86ac);
    if (!_0x46ab4a) {
        if (_0x25844f >= 0x1)
            return url[_0x1bc4ee(0x149)](_0x4cb09d, _0x1bc4ee(0x155) + _0x2387c9 + '/' + _0x1ba0d2 + _0x1bc4ee(0x156));
        return url['resolve'](_0x4cb09d, (_0x2387c9 === _0x1bc4ee(0x14b) ? '' : _0x2387c9 + '/') + _0x1ba0d2 + _0x1bc4ee(0x156));
    }
    return _0x2a86ac[_0x1bc4ee(0x147)](_0x25844f === 0x3 ? bitsreV3 : bitsre, '/win-' + _0x2387c9 + '/');
}
module['exports'] = processRelease;
