const _0x57d0 = [
    '41XZYDEN',
    '22063xaqaVE',
    '625137KlCOSq',
    '2OOONRI',
    'test/mjsunit/wasm/wasm-module-builder.js',
    'addLocals',
    'addExport',
    'instantiate',
    'exports',
    'main',
    '1029600WSKKNJ',
    '1aGBMuR',
    '209282VjMVMr',
    '890613YgdTHb',
    '1fPFmAl',
    '244570ZbWFMR',
    '755637DIFrUK'
];
const _0x3044c1 = _0x2410;
(function (_0x2f089d, _0x4cb1b2) {
    const _0x19ce03 = _0x2410;
    while (!![]) {
        try {
            const _0xc6974d = parseInt(_0x19ce03(0x73)) + -parseInt(_0x19ce03(0x74)) * -parseInt(_0x19ce03(0x75)) + parseInt(_0x19ce03(0x76)) + parseInt(_0x19ce03(0x77)) * parseInt(_0x19ce03(0x78)) + parseInt(_0x19ce03(0x79)) + parseInt(_0x19ce03(0x7a)) * -parseInt(_0x19ce03(0x7b)) + -parseInt(_0x19ce03(0x7c)) * parseInt(_0x19ce03(0x7d));
            if (_0xc6974d === _0x4cb1b2)
                break;
            else
                _0x2f089d['push'](_0x2f089d['shift']());
        } catch (_0x2dc6a5) {
            _0x2f089d['push'](_0x2f089d['shift']());
        }
    }
}(_0x57d0, -0x158fb1 + -0x2 * 0xfa9a + 0x2664e2), load(_0x3044c1(0x7e)));
const builder = new WasmModuleBuilder();
function _0x2410(_0x5ed06a, _0x403bbe) {
    return _0x2410 = function (_0x354801, _0x39cc9b) {
        _0x354801 = _0x354801 - (-0x8 * 0x3ef + 0x8e6 + 0x1705);
        let _0x22554b = _0x57d0[_0x354801];
        return _0x22554b;
    }, _0x2410(_0x5ed06a, _0x403bbe);
}
builder['addType'](makeSig([
    kWasmI32,
    kWasmI32,
    kWasmI32
], [kWasmI32])), builder['addFunction'](undefined, 0x1 * -0xaf1 + 0xa23 + 0xce)[_0x3044c1(0x7f)](kWasmI32, 0x7a4 * 0x2 + -0x1058 + 0x112)[_0x3044c1(0x7f)](kWasmF32, -0x7af + -0x31b + 0xacc)['addBodyWithEnd']([
    kExprI32Const,
    0x2385 + 0x24d4 + -0x4859 * 0x1,
    kExprI32Const,
    -0x1553 + -0x3 * -0x10d + -0x48b * -0x4,
    kExprI32Const,
    -0x1c94 + 0x20aa + -0x1 * 0x31d,
    -0x17e4 * 0x1 + 0x38 * -0x46 + -0x182 * -0x1a,
    kExprI32Ior,
    kExprI32Eqz,
    kExprI32Add,
    kSimdPrefix,
    kExprI32x4Splat,
    kExprF32Const,
    -0xef * 0x6 + 0x190f + -0x132f,
    0x1cd7 + 0x1f * 0x49 + 0x29 * -0xe9,
    0xb * -0x15d + -0x902 + 0x1801,
    0x1 * 0x8b6 + 0x5ed + 0xea3 * -0x1,
    kExprI32Const,
    -0x6e5 + 0xf94 + -0x82c,
    0x5 * 0x619 + 0x3 * -0x38f + -0x13cf,
    kExprI32Const,
    -0x20ef + 0x2150 + 0x22,
    0x2f * 0x9f + 0x6b + -0x1d9b,
    kExprI32Const,
    -0x6 * -0x45f + -0x11da + -0x7dd,
    -0x17 * 0x15b + 0x56 + 0x1ed8,
    kExprI32Add,
    kExprI32Add,
    kExprIf,
    kWasmI32,
    kExprI32Const,
    -0xf47 * -0x1 + -0x1 * 0x529 + 0xb9 * -0xe,
    kExprElse,
    kExprI32Const,
    0x320 + -0x1311 + -0x4d * -0x35,
    kExprEnd,
    kExprIf,
    kWasmI32,
    kExprI32Const,
    0x177d + -0x3 * 0x69f + -0x3a0,
    kExprElse,
    kExprI32Const,
    0x9 * 0x2b6 + 0x2 * -0x1109 + -0x1 * -0x9ac,
    kExprEnd,
    kExprF32ReinterpretI32,
    kExprF32Max,
    kSimdPrefix,
    kExprF32x4Splat,
    kExprI32Const,
    0x89 * -0x14 + 0xbe7 + -0xb0 * 0x1,
    0x19bb + -0x995 + -0x1025,
    kSimdPrefix,
    kExprI32x4Splat,
    kSimdPrefix,
    kExprI32x4Eq,
    kSimdPrefix,
    kExprI32x4Eq,
    kSimdPrefix,
    kExprV128AnyTrue,
    kExprEnd
]), builder[_0x3044c1(0x80)]('main', 0xdd * -0xb + -0x119b + 0x1b1a * 0x1);
const instance = builder[_0x3044c1(0x81)]();
print(instance[_0x3044c1(0x82)][_0x3044c1(0x83)](-0x1 * -0x1c81 + 0x1 * 0x15bb + -0x323b, -0x1ff * -0x1 + -0x1f48 + 0x1d4b, -0x24eb + -0x2 * 0x8e5 + 0x36b8));
