const _0x1c38 = [
    'exports',
    'ksBTI',
    'JPPFg',
    'arDeh',
    'eKzwf',
    'ptHOB',
    'NVFpl',
    'kTtxj',
    'haNdV',
    'CsUmT',
    'sYaeX',
    'yVUrg',
    'plus_one',
    'qDWUG',
    'TestExternalCallBetweenTwoWasmModulesWithMemory',
    'bnTic',
    'kBkvJ',
    'MUGGd',
    'mDICY',
    'iPKua',
    'WQaTJ',
    'ZGfUG',
    'TestCorrectMemoryAccessedAfterReturningFromExternalCall',
    'sandwich',
    'rzXNn',
    'SojZF',
    'MjQez',
    'CallThroughTableIndependenceTest',
    'anyfunc',
    'RfnyE',
    'RfLQt',
    'toModule',
    'Instance',
    'EktYq',
    'Table',
    'LcnzP',
    'set',
    'get',
    'table',
    'addType',
    'gszDg',
    '1369827eWuyBb',
    '1652753nMKTCA',
    '769572qqxduv',
    '1ChPyUN',
    '1186tTUQWi',
    '769vCWItF',
    '1369194iVoeot',
    '1SiJtXz',
    '1666101sushcH',
    '814242VRrTZm',
    'test/mjsunit/wasm/wasm-module-builder.js',
    'import_module',
    'other_module_fn',
    'load',
    'store',
    'addImport',
    'owoHy',
    'IjVhi',
    'FpCvl',
    'addMemory',
    'addFunction',
    'npKRM',
    'addBody',
    'exportFunc',
    'ISDog',
    '20|16|27|6|19|10|0|9|3|11|15|1|25|22|4|7|12|21|5|8|26|24|14|18|23|13|17|2',
    'aGRtk',
    'split',
    'zFYnz',
    'XLoyY',
    'EKyUM',
    'QqJIy',
    'lambY',
    'saEze',
    'vmnfK',
    'oEUXb',
    'DJhuw',
    'DwOpB',
    'Wtlpc',
    'Mjzpw',
    'mod',
    'zYGLi',
    'aTilf',
    'instantiate'
];
function _0x1e9c(_0x1e2d53, _0x44e03f) {
    return _0x1e9c = function (_0x157ef6, _0x4b75d9) {
        _0x157ef6 = _0x157ef6 - (-0xdfd + 0x24f3 + -0x15cb);
        let _0x28ba06 = _0x1c38[_0x157ef6];
        return _0x28ba06;
    }, _0x1e9c(_0x1e2d53, _0x44e03f);
}
const _0xc9ccb0 = _0x1e9c;
(function (_0x3581ca, _0x542bf2) {
    const _0x1bb78e = _0x1e9c;
    while (!![]) {
        try {
            const _0x4d4be8 = -parseInt(_0x1bb78e(0x12b)) + -parseInt(_0x1bb78e(0x12c)) + parseInt(_0x1bb78e(0x12d)) * parseInt(_0x1bb78e(0x12e)) + -parseInt(_0x1bb78e(0x12f)) * -parseInt(_0x1bb78e(0x130)) + parseInt(_0x1bb78e(0x131)) + -parseInt(_0x1bb78e(0x132)) * -parseInt(_0x1bb78e(0x133)) + -parseInt(_0x1bb78e(0x134));
            if (_0x4d4be8 === _0x542bf2)
                break;
            else
                _0x3581ca['push'](_0x3581ca['shift']());
        } catch (_0x49f489) {
            _0x3581ca['push'](_0x3581ca['shift']());
        }
    }
}(_0x1c38, 0x299aa + -0x1b3f2 * 0x1 + -0x1a15 * -0x7b), load(_0xc9ccb0(0x135)));
let initialMemoryPages = -0x58 * 0x17 + -0x242c + 0xb9 * 0x3d, maximumMemoryPages = -0x199 * -0xf + -0x34d + -0x14a5, other_fn_idx = -0x1d93 + 0x1aac + 0x2e7;
function generateBuilder(_0x52994c, _0x249b59) {
    const _0x3ae8f9 = _0xc9ccb0, _0x1bbad4 = {
            'owoHy': _0x3ae8f9(0x136),
            'IjVhi': _0x3ae8f9(0x137),
            'FpCvl': function (_0x22ab64, _0xc61d6b, _0xc48b83) {
                return _0x22ab64(_0xc61d6b, _0xc48b83);
            },
            'npKRM': _0x3ae8f9(0x138),
            'ISDog': _0x3ae8f9(0x139)
        };
    let _0x4478a6 = new WasmModuleBuilder();
    if (_0x249b59) {
        let _0x59dc2a = _0x4478a6[_0x3ae8f9(0x13a)](_0x1bbad4[_0x3ae8f9(0x13b)], _0x1bbad4[_0x3ae8f9(0x13c)], _0x249b59);
        _0x1bbad4[_0x3ae8f9(0x13d)](assertEquals, _0x59dc2a, other_fn_idx);
    }
    return _0x52994c && (_0x4478a6[_0x3ae8f9(0x13e)](initialMemoryPages, maximumMemoryPages, !![]), _0x4478a6[_0x3ae8f9(0x13f)](_0x1bbad4[_0x3ae8f9(0x140)], kSig_i_i)[_0x3ae8f9(0x141)]([
        kExprLocalGet,
        -0x2380 + 0xa25 + -0x1 * -0x195b,
        kExprI32LoadMem,
        0x1 * 0x1199 + 0xbd * -0x29 + 0xcac,
        0x1 * -0x241a + -0x1ac9 + 0x3ee3
    ])[_0x3ae8f9(0x142)](), _0x4478a6[_0x3ae8f9(0x13f)](_0x1bbad4[_0x3ae8f9(0x143)], kSig_i_ii)[_0x3ae8f9(0x141)]([
        kExprLocalGet,
        0x1716 + -0x11 * 0x10b + 0x3 * -0x1c9,
        kExprLocalGet,
        -0x1e49 + -0x3a8 + 0x21f2,
        kExprI32StoreMem,
        0x1007 + 0x8 * 0x303 + -0x281f,
        0x36c * 0x7 + -0x807 + -0xfed,
        kExprLocalGet,
        0x1abc + 0x15ff + 0x1b * -0x1ce
    ])[_0x3ae8f9(0x142)]()), _0x4478a6;
}
function assertMemoryIndependence(_0x1d87c0, _0x4fceb3, _0x19cd6c, _0x51ea9e) {
    const _0x4cc045 = _0xc9ccb0, _0x57be6c = {
            'aGRtk': _0x4cc045(0x144),
            'KRgYQ': function (_0x4b90b5, _0x24b1c9, _0x5b43ee) {
                return _0x4b90b5(_0x24b1c9, _0x5b43ee);
            },
            'zFYnz': function (_0x596c92, _0x15a0e2) {
                return _0x596c92(_0x15a0e2);
            },
            'XLoyY': function (_0x132a66, _0x2ab81e, _0x3ab90a) {
                return _0x132a66(_0x2ab81e, _0x3ab90a);
            },
            'EKyUM': function (_0x356cda, _0x31ccf8) {
                return _0x356cda(_0x31ccf8);
            },
            'VCrpb': function (_0x175383, _0x5ed138) {
                return _0x175383(_0x5ed138);
            },
            'QqJIy': function (_0x4cbabf, _0x496e83) {
                return _0x4cbabf(_0x496e83);
            },
            'lambY': function (_0x2b9f40, _0x2b0168) {
                return _0x2b9f40(_0x2b0168);
            },
            'saEze': function (_0x2fbe15, _0x150dbc, _0x17a4d2) {
                return _0x2fbe15(_0x150dbc, _0x17a4d2);
            },
            'vmnfK': function (_0x3eac0d, _0x4b86a0, _0x223ce1) {
                return _0x3eac0d(_0x4b86a0, _0x223ce1);
            },
            'oEUXb': function (_0x72bdd5, _0x16053b, _0x511260) {
                return _0x72bdd5(_0x16053b, _0x511260);
            },
            'DJhuw': function (_0x53af65, _0x216ede, _0xd29c92) {
                return _0x53af65(_0x216ede, _0xd29c92);
            },
            'DwOpB': function (_0x426953, _0x43d444, _0x53c956) {
                return _0x426953(_0x43d444, _0x53c956);
            },
            'Wtlpc': function (_0x51871c, _0x3fae0c) {
                return _0x51871c(_0x3fae0c);
            },
            'Mjzpw': function (_0x35d2fe, _0x39eb4b, _0x5f0da5) {
                return _0x35d2fe(_0x39eb4b, _0x5f0da5);
            }
        }, _0x5bee75 = _0x57be6c[_0x4cc045(0x145)][_0x4cc045(0x146)]('|');
    let _0x13304e = 0x1 * 0x13b1 + -0x63 * 0x1 + -0x134e;
    while (!![]) {
        switch (_0x5bee75[_0x13304e++]) {
        case '0':
            _0x57be6c['KRgYQ'](assertEquals, 0x1 * 0xf17 + 0x5b + -0x1 * 0xf72, _0x57be6c[_0x4cc045(0x147)](_0x19cd6c, -0x1c9f + -0x2604 + 0x985 * 0x7));
            continue;
        case '1':
            _0x57be6c[_0x4cc045(0x148)](assertEquals, 0x2585 + -0x847 + -0x1d3e, _0x19cd6c(0x367 + 0x1593 + 0xc7d * -0x2));
            continue;
        case '2':
            _0x57be6c[_0x4cc045(0x148)](_0x51ea9e, 0x1acf + 0x1340 + 0xf59 * -0x3, -0x1bae + -0x2254 + 0x1 * 0x3e02);
            continue;
        case '3':
            assertEquals(-0x3 * 0x43f + -0xbe5 + 0x18a2, _0x57be6c[_0x4cc045(0x149)](_0x19cd6c, -0x20 * -0xb5 + -0x7f0 + -0xeac));
            continue;
        case '4':
            _0x51ea9e(0xa00 + -0x1a5 * -0xd + 0x1d * -0x115, 0x21a4 + -0x107 * -0x22 + -0x16b9 * 0x3);
            continue;
        case '5':
            _0x57be6c[_0x4cc045(0x148)](assertEquals, 0x22f5 + 0x1 * -0xdc7 + -0x152e, _0x57be6c[_0x4cc045(0x149)](_0x19cd6c, -0x1 * 0x1825 + 0x6f7 * 0x5 + -0xaaa));
            continue;
        case '6':
            _0x57be6c[_0x4cc045(0x148)](assertEquals, -0x1 * -0x1007 + 0xf6d * -0x1 + -0x9a, _0x57be6c['VCrpb'](_0x19cd6c, 0x15d * -0x3 + -0x3 * -0x5fa + -0xdd3));
            continue;
        case '7':
            _0x57be6c[_0x4cc045(0x148)](assertEquals, -0x245c + -0x1f38 + 0x43f9, _0x57be6c[_0x4cc045(0x14a)](_0x1d87c0, -0x53c + 0x16d0 + -0x1194));
            continue;
        case '8':
            _0x57be6c[_0x4cc045(0x148)](_0x51ea9e, 0x175e * -0x1 + 0x2fb + -0x6cd * -0x3, -0x170 * -0xa + 0x2075 * -0x1 + 0x1280);
            continue;
        case '9':
            assertEquals(0x156f + -0x1d32 + 0x1 * 0x7c3, _0x57be6c[_0x4cc045(0x14b)](_0x1d87c0, 0x3 * 0x14b + 0x1311 + -0x16ee));
            continue;
        case '10':
            _0x57be6c[_0x4cc045(0x14c)](assertEquals, 0x2 * -0xbc5 + -0x4cc * -0x1 + -0xd5 * -0x17, _0x1d87c0(0x1 * 0x253d + -0x1122 + 0x1 * -0x141b));
            continue;
        case '11':
            _0x4fceb3(-0x25f * -0x1 + -0xa7 * -0x13 + -0xec0, 0x22e7 + 0x16b9 + -0x393a);
            continue;
        case '12':
            _0x57be6c[_0x4cc045(0x14d)](assertEquals, -0x1d46 + -0x96f + 0x271c, _0x57be6c[_0x4cc045(0x14b)](_0x19cd6c, -0xddc + 0x203e * 0x1 + -0x1 * 0x1262));
            continue;
        case '13':
            _0x57be6c[_0x4cc045(0x14e)](_0x4fceb3, -0x1e5f + -0x239 + 0x209c, 0x47f * 0x4 + -0x796 * 0x1 + -0x79 * 0x16);
            continue;
        case '14':
            assertEquals(-0xd76 + -0x13d4 + -0xb * -0x310, _0x57be6c[_0x4cc045(0x14b)](_0x1d87c0, -0x16f2 + -0x6 * -0x250 + 0x916));
            continue;
        case '15':
            _0x57be6c[_0x4cc045(0x14f)](assertEquals, 0x2b9 + 0x7 * -0x344 + 0x1488, _0x57be6c['lambY'](_0x1d87c0, 0x1b7a + 0x18d * -0x7 + 0x353 * -0x5));
            continue;
        case '16':
            _0x57be6c[_0x4cc045(0x14f)](assertEquals, 0xd58 + 0x1 * 0x229d + 0x2ff5 * -0x1, _0x19cd6c(0x15f * 0x1 + -0x256f + 0x482 * 0x8));
            continue;
        case '17':
            _0x57be6c[_0x4cc045(0x14f)](_0x51ea9e, 0x349 + 0x17 * 0xef + -0x2 * 0xc61, 0xa7e + 0x1152 * 0x1 + -0x14 * 0x164);
            continue;
        case '18':
            assertEquals(0x165a * 0x1 + 0x1bf9 + -0x31e8, _0x19cd6c(-0x1f5 * 0x8 + -0x1f83 * -0x1 + -0xfd7));
            continue;
        case '19':
            _0x57be6c[_0x4cc045(0x150)](_0x4fceb3, 0x1 * 0x2508 + -0x116 * -0x16 + -0x1 * 0x3cec, -0xae + -0x1cce * -0x1 + 0xe5 * -0x1f);
            continue;
        case '20':
            assertEquals(0x803 + -0x43 * 0x93 + 0x1e76, _0x57be6c[_0x4cc045(0x14b)](_0x1d87c0, -0x89 * 0x2e + 0x1ba7 + -0x309));
            continue;
        case '21':
            _0x57be6c[_0x4cc045(0x150)](assertEquals, -0xbc8 + -0x6df + 0x130d, _0x57be6c[_0x4cc045(0x151)](_0x1d87c0, -0x55 * 0x1e + 0x19ac + -0xfb2));
            continue;
        case '22':
            _0x57be6c[_0x4cc045(0x152)](assertEquals, 0x1 * 0x88f + 0xaba + 0x1 * -0x1349, _0x57be6c[_0x4cc045(0x151)](_0x19cd6c, 0x12c2 + 0x9c0 + -0x412 * 0x7));
            continue;
        case '23':
            _0x57be6c[_0x4cc045(0x152)](_0x4fceb3, -0xf25 * 0x1 + 0x23 * -0x65 + 0x1cf4, 0x4fc * 0x6 + 0x17de + -0x2 * 0x1ae3);
            continue;
        case '24':
            _0x57be6c[_0x4cc045(0x152)](assertEquals, 0xbdf * 0x2 + -0x423 * -0x4 + -0x27e3, _0x19cd6c(-0x1 * 0x17dc + -0x1970 + 0xc53 * 0x4));
            continue;
        case '25':
            _0x57be6c[_0x4cc045(0x152)](assertEquals, -0x732 + -0x71d + 0xeb5, _0x1d87c0(0x79 * 0x13 + -0x35 * -0x6d + -0x4 * 0x7e2));
            continue;
        case '26':
            _0x57be6c[_0x4cc045(0x152)](assertEquals, 0x17 * 0x131 + 0x2100 + 0x3c02 * -0x1, _0x57be6c['Wtlpc'](_0x1d87c0, 0xf71 * -0x1 + -0x4 * 0x411 + 0x1fb5));
            continue;
        case '27':
            assertEquals(0x13 * 0xbf + 0x1290 + -0x1d * 0x121, _0x57be6c[_0x4cc045(0x151)](_0x1d87c0, 0x8b7 * -0x1 + 0x2042 + -0x1787));
            continue;
        }
        break;
    }
}
(function SimpleMemoryIndependenceTest() {
    const _0x474d5f = _0xc9ccb0, _0xeafc9 = {
            'zYGLi': _0x474d5f(0x139),
            'aTilf': 'load',
            'LohBZ': _0x474d5f(0x153),
            'jGYtW': function (_0x3a4cb4, _0x205767, _0x61839e) {
                return _0x3a4cb4(_0x205767, _0x61839e);
            },
            'ksBTI': function (_0x1bc65b, _0xfc0f04, _0x6fda30) {
                return _0x1bc65b(_0xfc0f04, _0x6fda30);
            },
            'JPPFg': function (_0x57d255, _0x2713c1, _0x1547b9) {
                return _0x57d255(_0x2713c1, _0x1547b9);
            },
            'arDeh': function (_0x365d81, _0x495e6a, _0x295007) {
                return _0x365d81(_0x495e6a, _0x295007);
            },
            'eKzwf': function (_0x323f45, _0x5295bd, _0x34ce55) {
                return _0x323f45(_0x5295bd, _0x34ce55);
            },
            'joUoy': function (_0x148bf7, _0x1b60dc, _0x33f4fc) {
                return _0x148bf7(_0x1b60dc, _0x33f4fc);
            },
            'ptHOB': function (_0x90282a, _0x5a495b, _0x20201b) {
                return _0x90282a(_0x5a495b, _0x20201b);
            }
        };
    print('SimpleMemoryIndependenceTest');
    let _0x5edb9e = 0x23 * -0x6e + -0x1 * 0x1931 + 0x283c, _0x187d9f = new WasmModuleBuilder();
    _0x187d9f[_0x474d5f(0x13e)](_0x5edb9e, _0x5edb9e, !![]), _0x187d9f[_0x474d5f(0x13f)](_0xeafc9[_0x474d5f(0x154)], kSig_v_ii)[_0x474d5f(0x141)]([
        kExprLocalGet,
        -0x13f7 + -0x1afd + 0x4 * 0xbbd,
        kExprLocalGet,
        0x5 * 0x42d + 0x21f5 * -0x1 + 0xd15,
        kExprI32StoreMem,
        -0x13b8 + -0x1186 + 0x253e,
        -0x1ad5 + -0x1439 + 0x2f0e
    ])[_0x474d5f(0x142)](), _0x187d9f[_0x474d5f(0x13f)](_0xeafc9[_0x474d5f(0x155)], kSig_i_i)[_0x474d5f(0x141)]([
        kExprLocalGet,
        -0x1536 + 0x10d * 0x22 + 0x2 * -0x742,
        kExprI32LoadMem,
        -0x96 * -0x3d + -0x553 * -0x3 + -0x33b7,
        -0x1 * 0x32f + 0x205b + -0x1d2c
    ])[_0x474d5f(0x142)]();
    var _0x124091 = _0x187d9f[_0x474d5f(0x156)]();
    _0x187d9f = new WasmModuleBuilder(), _0x187d9f[_0x474d5f(0x13a)](_0xeafc9['LohBZ'], _0xeafc9['zYGLi'], kSig_v_ii), _0x187d9f['addMemory'](_0x5edb9e, _0x5edb9e, !![]), _0x187d9f['addFunction'](_0xeafc9[_0x474d5f(0x154)], kSig_v_ii)[_0x474d5f(0x141)]([
        kExprLocalGet,
        -0x541 * 0x7 + -0x3b8 + 0x287f,
        kExprLocalGet,
        -0xe75 + -0x1 * -0x1c79 + -0x11 * 0xd3,
        kExprCallFunction,
        -0x14d4 + 0x1a48 + 0x574 * -0x1
    ])[_0x474d5f(0x142)](), _0x187d9f['addFunction'](_0xeafc9[_0x474d5f(0x155)], kSig_i_i)['addBody']([
        kExprLocalGet,
        -0x15f * -0x3 + -0x109b + -0x63f * -0x2,
        kExprI32LoadMem,
        -0x1fde + 0x1500 + 0xade,
        0x1 * -0x26b6 + -0x551 * -0x5 + 0xc21
    ])[_0x474d5f(0x142)]();
    var _0x5595e9 = _0x187d9f[_0x474d5f(0x156)]({ 'mod': { 'store': _0x124091[_0x474d5f(0x157)]['store'] } });
    _0xeafc9['jGYtW'](assertEquals, -0x50d * -0x2 + 0xc12 + -0x162c, _0x124091[_0x474d5f(0x157)]['load'](0xb8f + -0x721 + -0x3f * 0x12)), _0xeafc9[_0x474d5f(0x158)](assertEquals, -0xef * 0x8 + 0x4c1 + -0x2b7 * -0x1, _0x5595e9[_0x474d5f(0x157)][_0x474d5f(0x138)](0x449 + 0x5 * 0xc4 + -0x81d)), _0xeafc9[_0x474d5f(0x159)](assertEquals, -0x243 + 0x1e73 * 0x1 + 0x16 * -0x148, _0x124091['exports']['load'](-0x5d * -0xd + -0x9 * 0x14d + 0x700)), _0xeafc9[_0x474d5f(0x15a)](assertEquals, -0x16 * 0x1f + -0xa7 * -0x1 + -0x203 * -0x1, _0x5595e9[_0x474d5f(0x157)][_0x474d5f(0x138)](0x2456 + 0x1780 + -0x3bd2)), _0x124091['exports'][_0x474d5f(0x139)](-0x1bb + -0x1 * 0xe87 + 0x2 * 0x821, 0x2216 + 0x1b3b + -0xe * 0x45a), assertEquals(0x1fa8 + -0x2 * -0x2f + -0x3 * 0xa8b, _0x124091[_0x474d5f(0x157)][_0x474d5f(0x138)](0x192 * 0x13 + -0x2e * 0xd3 + 0x4 * 0x205)), _0xeafc9[_0x474d5f(0x15b)](assertEquals, -0x14ed + 0x924 + 0x1 * 0xbc9, _0x5595e9['exports'][_0x474d5f(0x138)](0x1914 + 0x1b04 + -0x3418)), _0xeafc9['eKzwf'](assertEquals, 0x18eb + -0xb83 + -0xd68, _0x124091['exports'][_0x474d5f(0x138)](0x243c + 0x2236 + -0x466e)), _0xeafc9[_0x474d5f(0x15b)](assertEquals, 0x10aa + 0xfde + -0x2088, _0x5595e9['exports'][_0x474d5f(0x138)](0x126f + 0x1f * -0x109 + 0x23 * 0x64)), _0x124091[_0x474d5f(0x157)][_0x474d5f(0x139)](-0xb21 + -0xc45 + 0x176a, 0x23b1 + -0x19 * -0x1b + -0x1 * 0x25ee), _0xeafc9['eKzwf'](assertEquals, 0x26 * -0xdb + -0x11fd + 0x32e4, _0x124091[_0x474d5f(0x157)][_0x474d5f(0x138)](-0x18e6 + 0x2 * 0x1115 + -0x944)), assertEquals(-0x619 + -0xea5 + 0x14be * 0x1, _0x5595e9[_0x474d5f(0x157)][_0x474d5f(0x138)](0x86d + 0x1934 + -0x21a1)), assertEquals(-0x2446 * 0x1 + -0x26bb + 0x4b67, _0x124091['exports'][_0x474d5f(0x138)](0x1 * -0x9eb + 0xe * 0x24f + -0x1663)), assertEquals(0x14b * -0x8 + -0x12bd + 0x1d15, _0x5595e9[_0x474d5f(0x157)][_0x474d5f(0x138)](-0x21 * 0x1b + 0x1407 + -0x422 * 0x4)), _0x5595e9[_0x474d5f(0x157)]['store'](0x687 + 0x110a + -0x1 * 0x178d, -0x2 * 0x441 + -0xf51 + 0x183e), _0xeafc9['joUoy'](assertEquals, -0x1 * 0xf4d + 0x1a5 * 0x3 + -0x91 * -0x13, _0x124091[_0x474d5f(0x157)]['load'](-0x1 * 0xacf + 0x29 * 0x9e + -0x3 * 0x4d5)), assertEquals(-0xccd + 0x1943 * -0x1 + -0xae * -0x38, _0x5595e9['exports'][_0x474d5f(0x138)](-0xf58 + 0x385 * 0x3 + 0x4c9)), _0xeafc9[_0x474d5f(0x15c)](assertEquals, -0x1dba + -0x1 * 0x10f + -0x2 * -0xf9a, _0x124091[_0x474d5f(0x157)]['load'](0x711 + 0x1dce + -0x24db)), _0xeafc9[_0x474d5f(0x15c)](assertEquals, 0x2435 + 0x503 + -0x2938, _0x5595e9[_0x474d5f(0x157)]['load'](0x267d + -0x1bb6 + -0x5 * 0x227));
}(), function TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory() {
    const _0x1f94ce = _0xc9ccb0, _0x44299e = {
            'NVFpl': function (_0x501316, _0x1c85b9) {
                return _0x501316(_0x1c85b9);
            },
            'APpMk': 'TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory',
            'kTtxj': 'plus_one',
            'haNdV': function (_0x21f87d, _0x473859, _0x3d4326) {
                return _0x21f87d(_0x473859, _0x3d4326);
            },
            'CsUmT': function (_0xdee25d, _0x22fa70) {
                return _0xdee25d - _0x22fa70;
            },
            'sYaeX': function (_0x3e72ff, _0x119c68, _0x452b3b) {
                return _0x3e72ff(_0x119c68, _0x452b3b);
            },
            'yVUrg': function (_0x291597, _0x19c347) {
                return _0x291597 + _0x19c347;
            }
        };
    _0x44299e[_0x1f94ce(0x15d)](print, _0x44299e['APpMk']);
    let _0x131d41 = generateBuilder(add_memory = ![], import_sig = kSig_i_i);
    _0x131d41['addFunction'](_0x44299e[_0x1f94ce(0x15e)], kSig_i_i)['addBody']([
        kExprLocalGet,
        -0x83 * 0x2e + -0xf * -0xd1 + 0xb4b,
        kExprCallFunction,
        other_fn_idx,
        kExprI32Const,
        -0xe50 + -0x11cf + 0x2020,
        kExprI32Add,
        kExprReturn
    ])[_0x1f94ce(0x142)]();
    let _0x154119 = _0x44299e[_0x1f94ce(0x15f)](generateBuilder, add_memory = !![], import_sig = undefined), _0x4a634b = _0x44299e[_0x1f94ce(0x160)](kPageSize, 0x1642 + 0x1174 * 0x1 + -0x27b2), _0x846321 = -0x17f + 0x1505 + -0xad8, _0x583478 = _0x154119[_0x1f94ce(0x156)](), _0x79b0ab = _0x131d41[_0x1f94ce(0x156)]({ 'import_module': { 'other_module_fn': _0x583478[_0x1f94ce(0x157)][_0x1f94ce(0x138)] } });
    _0x583478[_0x1f94ce(0x157)][_0x1f94ce(0x139)](_0x4a634b, _0x846321), _0x44299e[_0x1f94ce(0x161)](assertEquals, _0x846321, _0x583478[_0x1f94ce(0x157)][_0x1f94ce(0x138)](_0x4a634b)), _0x44299e[_0x1f94ce(0x161)](assertEquals, _0x44299e[_0x1f94ce(0x162)](_0x846321, -0x26f4 + -0x16ae + 0x1fd * 0x1f), _0x79b0ab[_0x1f94ce(0x157)]['plus_one'](_0x4a634b));
}(), function TestExternalCallBetweenTwoWasmModulesWithMemory() {
    const _0x555105 = _0xc9ccb0, _0x3536fc = {
            'qDWUG': function (_0x25684a, _0x5caac1) {
                return _0x25684a(_0x5caac1);
            },
            'bnTic': function (_0x1852f9, _0x3427ea, _0x1e717b) {
                return _0x1852f9(_0x3427ea, _0x1e717b);
            },
            'kBkvJ': _0x555105(0x163),
            'MUGGd': function (_0x16d80e, _0x2b1b67, _0x3a1f2a) {
                return _0x16d80e(_0x2b1b67, _0x3a1f2a);
            },
            'mDICY': function (_0x5c5b3d, _0x795f5) {
                return _0x5c5b3d - _0x795f5;
            },
            'iPKua': function (_0x3e9374, _0x4caeed, _0x91bc51) {
                return _0x3e9374(_0x4caeed, _0x91bc51);
            },
            'WQaTJ': function (_0x3d61b4, _0x3830bc, _0x2f0c02) {
                return _0x3d61b4(_0x3830bc, _0x2f0c02);
            },
            'ZGfUG': function (_0x335c7a, _0x2b6191) {
                return _0x335c7a + _0x2b6191;
            }
        };
    _0x3536fc[_0x555105(0x164)](print, _0x555105(0x165));
    let _0x2cc700 = _0x3536fc[_0x555105(0x166)](generateBuilder, add_memory = !![], import_sig = kSig_i_i);
    _0x2cc700[_0x555105(0x13f)](_0x3536fc[_0x555105(0x167)], kSig_i_i)['addBody']([
        kExprLocalGet,
        0x2062 * -0x1 + -0x1 * -0x1c8a + -0x8 * -0x7b,
        kExprCallFunction,
        other_fn_idx,
        kExprI32Const,
        -0xb0d * 0x1 + -0x3 * -0x855 + 0xdf1 * -0x1,
        kExprI32Add,
        kExprReturn
    ])['exportFunc']();
    let _0x3f8b64 = _0x3536fc[_0x555105(0x168)](generateBuilder, add_memory = !![], import_sig = undefined), _0x1cbe19 = _0x3536fc[_0x555105(0x169)](kPageSize, 0xe9 + -0x343 * -0x6 + -0x1477), _0x209352 = 0x283 + -0x1168 + 0x4cf * 0x4, _0x6aad5c = 0x24b8 + -0x5 * 0x36b + -0xaf3, _0x449259 = _0x3f8b64[_0x555105(0x156)](), _0x4c7da1 = _0x2cc700[_0x555105(0x156)]({ 'import_module': { 'other_module_fn': _0x449259[_0x555105(0x157)][_0x555105(0x138)] } });
    _0x4c7da1[_0x555105(0x157)][_0x555105(0x139)](_0x1cbe19, _0x209352), _0x449259[_0x555105(0x157)][_0x555105(0x139)](_0x1cbe19, _0x6aad5c), _0x3536fc[_0x555105(0x16a)](assertEquals, _0x209352, _0x4c7da1[_0x555105(0x157)][_0x555105(0x138)](_0x1cbe19)), _0x3536fc['iPKua'](assertEquals, _0x6aad5c, _0x449259[_0x555105(0x157)]['load'](_0x1cbe19)), _0x3536fc[_0x555105(0x16b)](assertEquals, _0x3536fc[_0x555105(0x16c)](_0x6aad5c, 0x1 * 0x1660 + -0x3 * 0x5ad + -0x558), _0x4c7da1[_0x555105(0x157)][_0x555105(0x163)](_0x1cbe19));
}(), function TestCorrectMemoryAccessedAfterReturningFromExternalCall() {
    const _0x502f95 = _0xc9ccb0, _0x17ee68 = {
            'rzXNn': _0x502f95(0x16d),
            'SojZF': function (_0x4edb5c, _0xa2ac63, _0x4a8e7a) {
                return _0x4edb5c(_0xa2ac63, _0x4a8e7a);
            },
            'MjQez': _0x502f95(0x16e)
        };
    print(_0x17ee68[_0x502f95(0x16f)]);
    let _0x1a01e4 = _0x17ee68[_0x502f95(0x170)](generateBuilder, add_memory = !![], import_sig = kSig_i_ii);
    _0x1a01e4['addFunction'](_0x17ee68[_0x502f95(0x171)], kSig_i_iii)[_0x502f95(0x141)]([
        kExprLocalGet,
        -0x1fdb + -0x1c * 0xc2 + 0x3513,
        kExprLocalGet,
        -0x9b * -0x17 + -0x2662 + -0x3e * -0x65,
        kExprI32StoreMem,
        -0x1d49 + 0x1 * 0x1a87 + 0x2 * 0x161,
        0x885 * 0x4 + 0x94 * -0x21 + 0x40 * -0x3c,
        kExprLocalGet,
        -0x73c * -0x3 + -0x331 * -0x1 + -0x18e5,
        kExprLocalGet,
        0x229c + 0x1 * 0x250e + -0x47a8,
        kExprCallFunction,
        other_fn_idx,
        kExprDrop,
        kExprLocalGet,
        -0x978 + -0x2ea + 0xc62,
        kExprI32LoadMem,
        -0x55d * 0x1 + 0x4f2 + 0x6b * 0x1,
        -0x20b1 * 0x1 + 0x82f * 0x1 + 0xc41 * 0x2,
        kExprReturn
    ])[_0x502f95(0x142)]();
    let _0x3673cf = generateBuilder(add_memory = !![], import_sig = undefined), _0x5bf993 = kPageSize - (0x30a + 0x2e3 * -0xb + 0x1cbb), _0x2290d8 = 0x863 * -0x2 + -0xf8b + -0x6 * -0x61c, _0x53cf4c = -0xf1d + -0x5a7 + 0x1d72, _0x4760ad = _0x3673cf['instantiate'](), _0x2d070 = _0x1a01e4[_0x502f95(0x156)]({ 'import_module': { 'other_module_fn': _0x4760ad[_0x502f95(0x157)][_0x502f95(0x139)] } });
    _0x17ee68[_0x502f95(0x170)](assertEquals, _0x2290d8, _0x2d070[_0x502f95(0x157)][_0x502f95(0x16e)](_0x5bf993, _0x2290d8, _0x53cf4c)), _0x17ee68[_0x502f95(0x170)](assertEquals, _0x2290d8, _0x2d070[_0x502f95(0x157)][_0x502f95(0x138)](_0x5bf993)), _0x17ee68[_0x502f95(0x170)](assertEquals, _0x53cf4c, _0x4760ad[_0x502f95(0x157)]['load'](_0x5bf993));
}(), function CallThroughTableMemoryIndependenceTest() {
    const _0x21b262 = _0xc9ccb0, _0x1296f9 = {
            'vTkGA': function (_0x80e315, _0x248a1e) {
                return _0x80e315(_0x248a1e);
            },
            'RfnyE': _0x21b262(0x172),
            'RfLQt': 'store',
            'EktYq': function (_0x45b945, _0x4e58c9, _0x574c53, _0x5afd05, _0x1a91b0) {
                return _0x45b945(_0x4e58c9, _0x574c53, _0x5afd05, _0x1a91b0);
            },
            'LcnzP': _0x21b262(0x173),
            'gszDg': function (_0x4183d1, _0x398c41, _0x478397, _0x39578c, _0x20e947) {
                return _0x4183d1(_0x398c41, _0x478397, _0x39578c, _0x20e947);
            }
        };
    _0x1296f9['vTkGA'](print, _0x1296f9[_0x21b262(0x174)]);
    let _0x54b6c2 = 0x897 * 0x1 + 0x1b11 + -0x23a6, _0x296e76 = -0x3cb * -0x2 + 0x6b2 + -0xe47, _0x11a4f2 = new WasmModuleBuilder();
    _0x11a4f2['addMemory'](_0x296e76, _0x296e76, !![]), _0x11a4f2[_0x21b262(0x13f)](_0x1296f9[_0x21b262(0x175)], kSig_v_ii)[_0x21b262(0x141)]([
        kExprLocalGet,
        -0x2ab * -0xe + 0x5 * -0x6c7 + 0x377 * -0x1,
        kExprLocalGet,
        0xdf4 + 0x27 * 0x57 + -0x4 * 0x6cd,
        kExprI32StoreMem,
        -0x1058 + -0x1757 + 0x27af,
        -0x3 * -0x8f2 + -0x227 * -0x2 + -0x4 * 0x7c9
    ])['exportFunc'](), _0x11a4f2[_0x21b262(0x13f)]('load', kSig_i_i)[_0x21b262(0x141)]([
        kExprLocalGet,
        -0x1b63 + -0x4 * 0x33 + 0x1c2f,
        kExprI32LoadMem,
        0x797 + -0x3aa + -0xf * 0x43,
        -0x4 * -0x605 + 0x1 * 0x2491 + 0x1b * -0x23f
    ])[_0x21b262(0x142)]();
    {
        let _0x463df1 = _0x11a4f2[_0x21b262(0x176)]();
        var _0x4352b9 = new WebAssembly[(_0x21b262(0x177))](_0x463df1), _0x47ab92 = new WebAssembly[(_0x21b262(0x177))](_0x463df1);
        _0x1296f9[_0x21b262(0x178)](assertMemoryIndependence, _0x4352b9[_0x21b262(0x157)]['load'], _0x4352b9[_0x21b262(0x157)][_0x21b262(0x139)], _0x47ab92[_0x21b262(0x157)]['load'], _0x47ab92[_0x21b262(0x157)][_0x21b262(0x139)]);
    }
    let _0x16da66 = new WebAssembly[(_0x21b262(0x179))]({
        'element': _0x1296f9[_0x21b262(0x17a)],
        'initial': _0x54b6c2,
        'maximum': _0x54b6c2
    });
    _0x16da66['set'](-0x751 + 0x1 * -0xf4d + -0x3 * -0x78a, _0x4352b9[_0x21b262(0x157)]['store']), _0x16da66[_0x21b262(0x17b)](0x1d92 + 0x47 * -0x5c + 0x3d * -0x11, _0x47ab92[_0x21b262(0x157)][_0x21b262(0x139)]), _0x1296f9['gszDg'](assertMemoryIndependence, _0x4352b9['exports']['load'], _0x16da66[_0x21b262(0x17c)](-0x3a * 0x50 + -0x1 * -0x226c + -0x104c), _0x47ab92[_0x21b262(0x157)]['load'], _0x16da66[_0x21b262(0x17c)](-0x1db1 * -0x1 + 0x2147 * -0x1 + 0x397)), _0x16da66[_0x21b262(0x17b)](0x112d + -0x1710 + -0x34 * -0x1d, _0x4352b9[_0x21b262(0x157)]['store']), _0x16da66['set'](-0x685 * 0x3 + -0x2294 + 0x1 * 0x3623, _0x47ab92[_0x21b262(0x157)][_0x21b262(0x139)]), assertMemoryIndependence(_0x4352b9['exports'][_0x21b262(0x138)], _0x16da66[_0x21b262(0x17c)](-0x1d89 * -0x1 + -0x2 * -0x6d5 + -0x2b32), _0x47ab92['exports'][_0x21b262(0x138)], _0x16da66[_0x21b262(0x17c)](-0x1 * 0x38f + 0x1f9c + -0xa7 * 0x2b)), _0x11a4f2 = new WasmModuleBuilder(), _0x11a4f2['addImportedTable']('m', _0x21b262(0x17d), _0x54b6c2, _0x54b6c2);
    var _0x28e423 = _0x11a4f2[_0x21b262(0x17e)](kSig_v_ii);
    _0x11a4f2[_0x21b262(0x13f)](_0x1296f9['RfLQt'], kSig_v_iii)[_0x21b262(0x141)]([
        kExprLocalGet,
        0x23e + -0x1bf4 + 0x19b7 * 0x1,
        kExprLocalGet,
        0x217 * -0xb + -0x25a8 + -0x3ca7 * -0x1,
        kExprLocalGet,
        -0x247a + -0xbb6 * -0x1 + 0xc62 * 0x2,
        kExprCallIndirect,
        _0x28e423,
        kTableZero
    ])[_0x21b262(0x142)]();
    let _0xbbc0b = _0x11a4f2[_0x21b262(0x156)]({ 'm': { 'table': _0x16da66 } }), _0x2a5724 = -0x1 * -0x242 + -0x2ab * 0x2 + 0x315, _0x471a6b = 0xb14 + -0x3 * 0x9b4 + 0x1208, _0x2e0169 = (_0x4b7e00, _0x17910d) => _0xbbc0b[_0x21b262(0x157)][_0x21b262(0x139)](_0x2a5724, _0x4b7e00, _0x17910d), _0x5c48e6 = (_0x131500, _0x47bbd9) => _0xbbc0b[_0x21b262(0x157)][_0x21b262(0x139)](_0x471a6b, _0x131500, _0x47bbd9);
    _0x1296f9['gszDg'](assertMemoryIndependence, _0x4352b9[_0x21b262(0x157)][_0x21b262(0x138)], _0x2e0169, _0x47ab92['exports'][_0x21b262(0x138)], _0x5c48e6), _0x16da66[_0x21b262(0x17b)](0xe5 * -0x2b + -0x1d92 + -0x1 * -0x4409, _0x4352b9[_0x21b262(0x157)][_0x21b262(0x139)]), _0x16da66[_0x21b262(0x17b)](0xca6 + -0x1 * -0x6ab + -0x3 * 0x670, _0x47ab92[_0x21b262(0x157)]['store']), _0x2a5724 = 0x1c01 + 0x51e * -0x2 + 0x11c5 * -0x1, _0x471a6b = -0x2518 + -0x187 * -0x11 + 0xb22, _0x1296f9[_0x21b262(0x17f)](assertMemoryIndependence, _0x4352b9[_0x21b262(0x157)][_0x21b262(0x138)], _0x2e0169, _0x47ab92['exports'][_0x21b262(0x138)], _0x5c48e6);
}());
