var _0x49dd = [
    '313403jDgHEv',
    '3FNqEFx',
    '108435BYyRYE',
    '8751TwwqSD',
    '29XnCcWG',
    '247721yAUkkR',
    '1sujQvE',
    '2983AVIUTK',
    '939169FCDzbV',
    'toBe',
    'toEqual',
    'zee',
    'left',
    'push',
    'sxPna',
    'right',
    '261bRAvNG',
    '63OUTEPn',
    '1qBmsGh'
];
var _0x21ef1b = _0x2158;
(function (_0x41125f, _0x848014) {
    var _0x510703 = _0x2158;
    while (!![]) {
        try {
            var _0x177a61 = parseInt(_0x510703(0x9a)) * -parseInt(_0x510703(0x9b)) + parseInt(_0x510703(0x9c)) * -parseInt(_0x510703(0x9d)) + -parseInt(_0x510703(0x9e)) * -parseInt(_0x510703(0x9f)) + parseInt(_0x510703(0xa0)) * -parseInt(_0x510703(0xa1)) + -parseInt(_0x510703(0xa2)) + -parseInt(_0x510703(0xa3)) * -parseInt(_0x510703(0xa4)) + parseInt(_0x510703(0xa5));
            if (_0x177a61 === _0x848014)
                break;
            else
                _0x41125f['push'](_0x41125f['shift']());
        } catch (_0x1d82c1) {
            _0x41125f['push'](_0x41125f['shift']());
        }
    }
}(_0x49dd, 0x90e60 + 0x596d3 * -0x2 + 0x36cd * 0x29));
function _0x2158(_0x16be36, _0x12eb94) {
    return _0x2158 = function (_0x3b89e8, _0x155913) {
        _0x3b89e8 = _0x3b89e8 - (-0x17 * 0x4a + -0x581 * 0x6 + 0x2846);
        var _0x544a88 = _0x49dd[_0x3b89e8];
        return _0x544a88;
    }, _0x2158(_0x16be36, _0x12eb94);
}
var key, x, y, z;
key = 0xeeb + 0x25f + 0x4b * -0x3b;
var {
    [key++]: y,
    ...x
} = {
    0x1: 0x1,
    'a': 0x1
};
expect(x)['toEqual']({ 'a': 0x1 }), expect(key)['toBe'](-0x3 * -0x4cf + 0x2636 + -0x34a1), expect(0x2e9 * -0xc + -0x1 * 0x1633 + 0x3920)[_0x21ef1b(0xa6)](y), key = 0x2477 + -0x985 * 0x1 + -0xb * 0x273;
var {
    [++key]: y,
    [++key]: z,
    ...rest
} = {
    0x2: 0x2,
    0x3: 0x3
};
expect(y)[_0x21ef1b(0xa6)](0x25bd + -0xa * 0xb8 + -0x1e8b), expect(z)[_0x21ef1b(0xa6)](0x2cf * -0x7 + -0x1199 + 0xcb * 0x2f), key = 0x2663 + 0x4ff + -0x2b60, {
    [key]: y,
    z,
    ...x
} = {
    0x2: 'two',
    'z': 'zee'
}, expect(y)[_0x21ef1b(0xa6)]('two'), expect(x)[_0x21ef1b(0xa7)]({}), expect(z)[_0x21ef1b(0xa6)](_0x21ef1b(0xa8));
var order = [];
function left() {
    var _0x562a4c = _0x21ef1b, _0x4390d3 = { 'sxPna': _0x562a4c(0xa9) };
    return order[_0x562a4c(0xaa)](_0x4390d3[_0x562a4c(0xab)]), 0x22 * 0x10c + -0x25e + -0x213a;
}
function right() {
    var _0xff90d4 = _0x21ef1b, _0x3fc3df = { 'aCZjK': _0xff90d4(0xac) };
    return order[_0xff90d4(0xaa)](_0x3fc3df['aCZjK']), {};
}
var {
    [left()]: y,
    ...x
} = right();
expect(order)['toEqual']([
    'right',
    'left'
]);
