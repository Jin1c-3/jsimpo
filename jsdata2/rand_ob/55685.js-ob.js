'use strict';
const _0x5181 = [
    'defineProperty',
    'toStringTag',
    'String',
    'setPrototypeOf',
    'prototype',
    'true',
    'Number',
    'fhqwhgads',
    '290672senXVG',
    '51128mDcmqz',
    '378838NZAVBn',
    '1ifsTBK',
    '404323lYSbNJ',
    '281903xGyhTT',
    '175308iwiWmL',
    '448870vdKwFq',
    '../common',
    'assert',
    'strictEqual',
    'isDeepStrictEqual',
    'prop',
    '2016',
    'test',
    'from',
    'add',
    'reverse',
    'map',
    'set',
    'foo1',
    'foo2',
    'AssertionError',
    'slow'
];
const _0x337539 = _0x2b36;
(function (_0x9e9986, _0x16b97e) {
    const _0x2dc9d7 = _0x2b36;
    while (!![]) {
        try {
            const _0x5c2342 = parseInt(_0x2dc9d7(0xc9)) + -parseInt(_0x2dc9d7(0xca)) + parseInt(_0x2dc9d7(0xcb)) + -parseInt(_0x2dc9d7(0xcc)) * parseInt(_0x2dc9d7(0xcd)) + -parseInt(_0x2dc9d7(0xce)) + -parseInt(_0x2dc9d7(0xcf)) + parseInt(_0x2dc9d7(0xd0));
            if (_0x5c2342 === _0x16b97e)
                break;
            else
                _0x9e9986['push'](_0x9e9986['shift']());
        } catch (_0xa2ba21) {
            _0x9e9986['push'](_0x9e9986['shift']());
        }
    }
}(_0x5181, -0x2 * 0x7b3f + -0x1 * -0x48815 + -0x6e01));
require(_0x337539(0xd1));
const assert = require(_0x337539(0xd2)), util = require('util');
class MyDate extends Date {
    constructor(..._0x58390e) {
        super(..._0x58390e), this[-0x11f8 + -0x1c97 + 0x3 * 0xf85] = '1';
    }
}
class MyRegExp extends RegExp {
    constructor(..._0x538410) {
        super(..._0x538410), this[-0x27 * -0x92 + 0x2389 + -0x39c7] = '1';
    }
}
{
    const arr = new Uint8Array([
            -0x26bd + 0x1 * -0x111f + 0x80c * 0x7,
            0x1d58 + -0x10ca + -0xc15,
            0x71 * 0x3d + -0x1 * -0x1400 + -0x2e73,
            -0x1c * 0x107 + -0x8d + 0x1d5b
        ]), buf = Buffer['from'](arr);
    assert[_0x337539(0xd3)](util[_0x337539(0xd4)](arr, buf), ![]);
    const buf2 = Buffer['from'](arr);
    buf2[_0x337539(0xd5)] = 0x16ce + 0x1c3e + -0x330b, assert[_0x337539(0xd3)](util['isDeepStrictEqual'](buf2, buf), ![]);
    const arr2 = new Uint8Array([
        0x1aac + 0x1b * -0x72 + -0x2 * 0x717,
        -0x2454 + 0x240d + -0x30 * -0x4,
        0x1952 + 0x3 * -0xab1 + 0x73b,
        -0x34 * -0x15 + -0x2 * -0x3b9 + -0xbac
    ]);
    arr2['prop'] = -0x2425 * 0x1 + -0x1 * -0x118a + -0x950 * -0x2, assert[_0x337539(0xd3)](util[_0x337539(0xd4)](arr, arr2), ![]);
}
{
    const date = new Date('2016'), date2 = new MyDate(_0x337539(0xd6));
    assert[_0x337539(0xd3)](util['isDeepStrictEqual'](date, date2), ![]), assert['strictEqual'](util[_0x337539(0xd4)](date2, date), ![]);
}
function _0x2b36(_0x2087ee, _0x5ae1c7) {
    return _0x2b36 = function (_0x4139ed, _0x164f3c) {
        _0x4139ed = _0x4139ed - (-0x1 * 0xac5 + -0x8 * -0x23b + 0xe * -0x73);
        let _0x456093 = _0x5181[_0x4139ed];
        return _0x456093;
    }, _0x2b36(_0x2087ee, _0x5ae1c7);
}
{
    const re1 = new RegExp(_0x337539(0xd7)), re2 = new MyRegExp(_0x337539(0xd7));
    assert[_0x337539(0xd3)](util[_0x337539(0xd4)](re1, re2), ![]);
}
{
    const similar = new Set([
        { 0x0: '1' },
        { 0x0: 0x1 },
        new String('1'),
        ['1'],
        [-0x2536 + 0x287 * -0x9 + 0x3bf6],
        new MyDate(_0x337539(0xd6)),
        new MyRegExp(_0x337539(0xd7)),
        new Int8Array([-0x1 * -0x21bd + 0x44 * -0x6 + 0x809 * -0x4]),
        new Uint8Array([-0x34c * 0x3 + -0x37 * 0xa3 + -0x1675 * -0x2]),
        new Int16Array([-0x228e * -0x1 + -0x216f + 0xb * -0x1a]),
        new Uint16Array([-0x59 * -0x4f + -0x135 * 0x11 + 0x1 * -0x6f1]),
        new Int32Array([-0x1f44 + 0x2 * 0x106a + 0x3 * -0x85]),
        new Uint32Array([-0x1149 + 0x1cd7 + 0x1 * -0xb8d]),
        Buffer[_0x337539(0xd8)]([0x1 * 0x1453 + 0x1 * 0x705 + -0x1 * 0x1b57])
    ]);
    for (const a of similar) {
        for (const b of similar) {
            a !== b && assert['strictEqual'](util['isDeepStrictEqual'](a, b), ![]);
        }
    }
}
function utilIsDeepStrict(_0x2ad204, _0x37a5e5) {
    const _0x47eb99 = _0x337539;
    assert['strictEqual'](util['isDeepStrictEqual'](_0x2ad204, _0x37a5e5), !![]), assert[_0x47eb99(0xd3)](util[_0x47eb99(0xd4)](_0x37a5e5, _0x2ad204), !![]);
}
function notUtilIsDeepStrict(_0x5e2c99, _0x46d3ab) {
    const _0x4cb4b2 = _0x337539;
    assert[_0x4cb4b2(0xd3)](util['isDeepStrictEqual'](_0x5e2c99, _0x46d3ab), ![]), assert[_0x4cb4b2(0xd3)](util[_0x4cb4b2(0xd4)](_0x46d3ab, _0x5e2c99), ![]);
}
utilIsDeepStrict(new Set(), new Set()), utilIsDeepStrict(new Map(), new Map()), utilIsDeepStrict(new Set([
    -0x20ca + -0x6f * -0x3e + 0x5e9,
    0xb01 * -0x2 + 0xe14 + -0x7f * -0x10,
    -0x4 * 0x959 + 0x26fe + -0xb * 0x25
]), new Set([
    0x256d * -0x1 + -0xa89 + 0x2ff7,
    0x31e * -0x6 + -0x118f * 0x2 + -0x82 * -0x6a,
    -0x121e + 0x6 * -0x1d3 + 0x1d13 * 0x1
])), notUtilIsDeepStrict(new Set([
    0x5 * 0x9d + 0x1c73 + -0x1f83,
    -0x14 * 0x42 + 0x46a * 0x3 + -0x814,
    -0x1147 + -0x44 * 0x71 + 0x2f4e
]), new Set([
    -0x2 * -0x112 + -0x193c + -0x1719 * -0x1,
    -0xc5 * -0x2b + 0x21f * 0xf + -0x40e6,
    -0x127b + -0x6a * 0x4a + 0x3122,
    0x1 * 0x289 + 0x22e2 + -0x2567 * 0x1
])), notUtilIsDeepStrict(new Set([
    -0x2b5 * -0xa + -0x452 + -0x795 * 0x3,
    -0x1 * 0xae7 + -0x1c42 + 0x1 * 0x272b,
    -0x8b * -0xd + 0x16cc + -0x1dd8,
    0xaee * 0x3 + 0x184a * 0x1 + -0x3910
]), new Set([
    0x1010 + -0x49 * 0x2f + -0x2a8,
    -0x1 * -0xd55 + 0x1479 + -0x4d4 * 0x7,
    0x2490 + 0xbb8 + -0x3045
])), utilIsDeepStrict(new Set([
    '1',
    '2',
    '3'
]), new Set([
    '1',
    '2',
    '3'
])), utilIsDeepStrict(new Set([
    [
        0x1e3b + 0xda * 0x23 + 0x388 * -0x11,
        0x3 * -0x87f + -0x1ef1 + 0x3870
    ],
    [
        0x615 + 0xd3d * 0x1 + 0x134f * -0x1,
        -0x2b * -0xb2 + -0x1a8f + -0x353
    ]
]), new Set([
    [
        -0x506 + 0x2704 + -0x21fb * 0x1,
        0x18a7 * -0x1 + -0x19 * 0x115 + 0x33b8
    ],
    [
        -0x1 * -0x1b15 + 0x1019 + -0x2b2d,
        0x1081 * 0x1 + -0x7d1 + -0x8ae
    ]
]));
{
    const a = [
            -0x5ea + -0x1163 * 0x1 + 0x174e,
            0x1 * 0x13fd + -0xc97 * -0x3 + -0x39c0
        ], b = [
            -0xbef + 0x1 * 0x1c86 + -0x1094,
            -0x1a9c + -0x160b + -0x1039 * -0x3
        ], c = [
            -0x1835 + 0x1b25 + -0x2ef,
            -0x1f68 + -0x5c * -0x3d + 0x195 * 0x6
        ], d = [
            -0x1 * -0x13f1 + 0x10c0 + -0x24ae,
            0x1 * 0x2b4 + -0x25 * -0x1a + -0x672
        ];
    utilIsDeepStrict({
        'a': a,
        'b': b,
        's': new Set([
            a,
            b
        ])
    }, {
        'a': c,
        'b': d,
        's': new Set([
            d,
            c
        ])
    });
}
utilIsDeepStrict(new Map([
    [
        0x1 * 0xc6d + 0x2f * 0x1a + -0x1132,
        0x210f + 0x25e5 + -0x46f3
    ],
    [
        0xdf5 + -0x1 * 0x1106 + 0x313,
        0x446 * 0x3 + -0x1 * 0x23db + -0x11 * -0x15b
    ]
]), new Map([
    [
        -0x1d9e + 0x841 + 0x155e,
        0x2680 + 0x6 * -0x169 + -0x2bb * 0xb
    ],
    [
        -0x3d * -0x9 + -0x31b + 0xf8,
        -0x1420 + -0x3f * -0x1 + 0x13e3
    ]
])), utilIsDeepStrict(new Map([
    [
        0x2333 + -0x1855 + 0x9 * -0x135,
        -0x1a * -0x36 + 0x860 + -0x1 * 0xddb
    ],
    [
        -0x9ee + -0x5 * -0x8c + -0x2 * -0x39a,
        0x2 * 0xe76 + -0xdd0 + -0xf1a
    ]
]), new Map([
    [
        0x1536 + 0x1de1 + 0x9 * -0x5ad,
        -0x5 * 0x633 + 0x2631 + -0x730
    ],
    [
        -0x1 * 0x33 + 0x395 + -0xad * 0x5,
        -0x8a8 * 0x2 + 0x8 * -0x3f + 0x1349 * 0x1
    ]
])), notUtilIsDeepStrict(new Map([
    [
        0x4 * 0x371 + -0x586 + 0x3 * -0x2bf,
        0x12c3 + 0x11 * -0x28 + -0x1 * 0x101a
    ],
    [
        -0x1c * 0x148 + -0x287 + 0x1 * 0x2669,
        0x3 * 0x371 + -0x1530 + -0x1 * -0xadf
    ]
]), new Map([
    [
        -0x30a * 0x5 + 0x1 * -0x1f4c + 0x2e7f,
        0x1 * -0x287 + 0x103a * -0x2 + 0xd * 0x2b1
    ],
    [
        0xdbf + 0x2 * -0x1df + 0x355 * -0x3,
        0x336 + 0x1374 + 0x16a9 * -0x1
    ]
])), notUtilIsDeepStrict(new Map([
    [
        [-0x2062 + -0x22 + 0x25 * 0xe1],
        -0x3 * 0x371 + -0x2f * 0xbf + 0x2d65
    ],
    [
        {},
        -0xddf + 0x4 * 0x576 + -0x7f7
    ]
]), new Map([
    [
        [0xf72 + -0xf59 * 0x1 + 0x18 * -0x1],
        -0x248c + 0x11 * -0xdf + 0x335d
    ],
    [
        {},
        -0x9ec + 0x23fb + 0xa * -0x29b
    ]
])), notUtilIsDeepStrict(new Set([-0x17 * -0x145 + -0x1 * -0x12b3 + 0x43 * -0xb7]), [-0x3e2 + -0xf28 + 0xc3 * 0x19]), notUtilIsDeepStrict(new Set(), []), notUtilIsDeepStrict(new Set(), {}), notUtilIsDeepStrict(new Map([[
        'a',
        -0xe * -0x1ec + 0x1028 + -0x2b0f
    ]]), { 'a': 0x1 }), notUtilIsDeepStrict(new Map(), []), notUtilIsDeepStrict(new Map(), {}), notUtilIsDeepStrict(new Set(['1']), new Set([0x8a5 + 0x1 * -0x20b2 + 0x180e])), notUtilIsDeepStrict(new Map([[
        '1',
        'a'
    ]]), new Map([[
        -0x19 * -0x1b + 0x18d * 0x19 + -0x1 * 0x2967,
        'a'
    ]])), notUtilIsDeepStrict(new Map([[
        'a',
        '1'
    ]]), new Map([[
        'a',
        -0x7 * -0x3bf + 0x1555 + -0x2f8d
    ]])), notUtilIsDeepStrict(new Map([[
        'a',
        '1'
    ]]), new Map([[
        'a',
        -0x185e + 0xe42 + -0x172 * -0x7
    ]])), utilIsDeepStrict(new Set([{}]), new Set([{}])), notUtilIsDeepStrict(new Set([
    { 'a': 0x1 },
    { 'a': 0x1 }
]), new Set([
    { 'a': 0x1 },
    { 'a': 0x2 }
])), notUtilIsDeepStrict(new Set([
    { 'a': 0x1 },
    { 'a': 0x1 },
    { 'a': 0x2 }
]), new Set([
    { 'a': 0x1 },
    { 'a': 0x2 },
    { 'a': 0x2 }
])), notUtilIsDeepStrict(new Map([
    [
        { 'x': 0x1 },
        0x20f * 0x2 + 0x1916 + -0x1d2f
    ],
    [
        { 'x': 0x1 },
        0x25d4 + 0x2690 + 0x18f * -0x31
    ]
]), new Map([
    [
        { 'x': 0x1 },
        -0x5f8 + -0xf1a * 0x2 + 0x1 * 0x2431
    ],
    [
        { 'x': 0x2 },
        -0x21e7 + 0x22e8 * -0x1 + -0xa * -0x6e2
    ]
])), notUtilIsDeepStrict(new Set([
    -0x1 * -0x1f97 + 0x1 * 0x1813 + -0x128d * 0x3,
    '3'
]), new Set([
    0x6e0 + -0x7 * -0x138 + 0x233 * -0x7,
    0x1573 + -0x121 * 0x13 + 0x4
])), notUtilIsDeepStrict(new Map([
    [
        0x8 * 0x29f + -0x18f4 + 0x3ff,
        0x1 * -0x15e9 + 0x1883 + 0x29a * -0x1
    ],
    [
        '3',
        0x12af * -0x1 + -0xb2 * 0x37 + -0x3b * -0xf7
    ]
]), new Map([
    [
        0x1b90 + -0x1aa9 + -0xe4,
        -0x1214 + -0x2 * -0xabc + -0x7c * 0x7
    ],
    [
        0x19db + -0xe0 * -0x2a + -0x3e97,
        0x1 * 0x1105 + 0x2374 + -0x3479
    ]
])), notUtilIsDeepStrict(new Set([
    { 'a': 0x1 },
    { 'a': 0x1 },
    { 'a': 0x2 }
]), new Set([
    { 'a': 0x1 },
    { 'a': 0x2 },
    { 'a': 0x2 }
])), utilIsDeepStrict(new Map([
    [
        -0x1226 + -0xa1 * 0x37 + -0x2 * -0x1a5f,
        'a'
    ],
    [
        {},
        'a'
    ]
]), new Map([
    [
        -0x1ebb + 0x1 * 0x16f7 + -0x99 * -0xd,
        'a'
    ],
    [
        {},
        'a'
    ]
])), utilIsDeepStrict(new Set([
    -0x1 * 0x29e + 0x74d + -0x4ae,
    'a',
    [
        {},
        'a'
    ]
]), new Set([
    -0x75 * -0x13 + 0xc05 * -0x3 + 0xa3 * 0x2b,
    'a',
    [
        {},
        'a'
    ]
])), notUtilIsDeepStrict(new Map([
    [
        0x44f * 0x1 + -0x32c * -0x5 + -0x142a,
        'a'
    ],
    [
        '1',
        'b'
    ]
]), new Map([
    [
        '1',
        'a'
    ],
    [
        !![],
        'b'
    ]
])), notUtilIsDeepStrict(new Set(['a']), new Set(['b'])), utilIsDeepStrict(new Map([
    [
        {},
        'a'
    ],
    [
        {},
        'b'
    ]
]), new Map([
    [
        {},
        'b'
    ],
    [
        {},
        'a'
    ]
])), notUtilIsDeepStrict(new Map([
    [
        !![],
        'a'
    ],
    [
        '1',
        'b'
    ],
    [
        0x1 * -0x1dd6 + 0x19c6 + 0x411,
        'a'
    ]
]), new Map([
    [
        '1',
        'a'
    ],
    [
        0x879 * -0x2 + 0x1 * -0x1cba + -0xb * -0x427,
        'b'
    ],
    [
        !![],
        'a'
    ]
])), notUtilIsDeepStrict(new Map([
    [
        !![],
        'a'
    ],
    [
        '1',
        'b'
    ],
    [
        0x8ba + -0x2b * -0x49 + -0x14fc,
        'c'
    ]
]), new Map([
    [
        '1',
        'a'
    ],
    [
        -0x3 * 0x185 + -0xc62 + -0x10f2 * -0x1,
        'b'
    ],
    [
        !![],
        'a'
    ]
])), notUtilIsDeepStrict(new Set([
    {},
    {}
]), new Set([
    {},
    0x26e0 + -0x1b1 * 0xd + 0x871 * -0x2
])), notUtilIsDeepStrict(new Set([
    [
        {},
        -0x2 * 0xb15 + 0x5 * 0x5eb + -0x5 * 0x17c
    ],
    [
        {},
        0x17b3 * 0x1 + -0x1cee + -0x14 * -0x43
    ]
]), new Set([
    [
        {},
        -0x1 * 0x148 + -0xcaf * 0x1 + -0xdf8 * -0x1
    ],
    [
        -0x5ab * -0x1 + 0x3ad + -0x31d * 0x3,
        0xfe2 + -0x20c5 + -0x4 * -0x439
    ]
])), notUtilIsDeepStrict(new Map([
    [
        {},
        -0x47 * -0x73 + -0x26c * 0xa + -0x1eb * 0x4
    ],
    [
        {},
        0x1f * 0x21 + 0x39 * 0x6 + 0x7c * -0xb
    ]
]), new Map([
    [
        {},
        -0x1249 + 0x2336 + -0x10ec
    ],
    [
        -0xe98 + 0x181d * 0x1 + 0x6 * -0x196,
        -0x11 * 0x109 + 0x183 * 0x7 + 0x705
    ]
])), notUtilIsDeepStrict(new Map([
    [
        {},
        -0x191f * 0x1 + 0x30f + 0x75b * 0x3
    ],
    [
        !![],
        0x309 + 0x7b1 + -0x3 * 0x393
    ]
]), new Map([
    [
        {},
        0x307 + 0x329 + -0x62f
    ],
    [
        0x17ec + 0x34 * 0x9e + 0x1 * -0x3803,
        0x6 * -0x5a8 + -0x34 * 0x7a + 0x3ab9
    ]
])), notUtilIsDeepStrict(new Set([
    0x1299 + -0x269 * -0xb + -0x2d1b,
    !![],
    ![]
]), new Set([
    '1',
    -0x1 * -0x12f9 + 0x634 + -0x192d,
    '0'
])), notUtilIsDeepStrict(new Map([
    [
        0x1809 + -0x3f3 * 0x3 + -0xc2f,
        0x125d * 0x1 + -0x2e5 * -0x8 + 0x298 * -0x10
    ],
    [
        !![],
        0x2295 + -0xffd + -0x1293
    ],
    [
        ![],
        -0x1899 * 0x1 + -0x1 * -0x1b65 + 0x4f * -0x9
    ]
]), new Map([
    [
        '1',
        -0x1b81 * -0x1 + -0x74f * -0x5 + -0x1bb * 0x25
    ],
    [
        0x1d85 + -0x8 * -0x3aa + -0x3ad5,
        -0x2ca * -0xb + -0x15eb + 0x2 * -0x45f
    ],
    [
        '0',
        -0x26 * -0xcb + 0x261a * -0x1 + 0x7fd
    ]
])), utilIsDeepStrict(new Map([[
        0x1a1 * 0x5 + 0x1567 + -0x3 * 0x9d9,
        undefined
    ]]), new Map([[
        0x140e + 0x2f * 0x4a + -0x6d * 0x4f,
        undefined
    ]])), notUtilIsDeepStrict(new Map([[
        0x1efb + 0x16ee + -0x14 * 0x2b2,
        null
    ]]), new Map([[
        '1',
        undefined
    ]])), notUtilIsDeepStrict(new Map([[
        0x1243 + 0x139 * 0x17 + -0x2e61,
        undefined
    ]]), new Map([[
        -0x36 * 0xac + 0xf9c + -0x1 * -0x14ae,
        undefined
    ]])), utilIsDeepStrict(new Map([[
        null,
        0x1 * -0x163b + 0x1a10 + -0x3d2
    ]]), new Map([[
        null,
        0x15 * 0x16f + 0x2bb + -0x20d3
    ]])), notUtilIsDeepStrict(new Map([[
        null,
        undefined
    ]]), new Map([[
        undefined,
        null
    ]])), notUtilIsDeepStrict(new Set([null]), new Set([undefined]));
{
    const b = {};
    b['b'] = b;
    const c = {};
    c['b'] = c, utilIsDeepStrict(b, c);
    const d = {};
    d['a'] = 0x212a + 0x183c + -0x3965, d['b'] = d;
    const e = {};
    e['a'] = -0x16bb + -0xcd6 + -0x1 * -0x2392, e['b'] = {}, notUtilIsDeepStrict(d, e);
}
{
    const a = {}, b = {};
    a['a'] = a, b['a'] = {}, b['a']['a'] = a, utilIsDeepStrict(a, b);
}
{
    const a = new Set(), b = new Set(), c = new Set();
    a[_0x337539(0xd9)](a), b[_0x337539(0xd9)](b), c[_0x337539(0xd9)](a), utilIsDeepStrict(b, c);
}
{
    const args = function () {
        return arguments;
    }();
    notUtilIsDeepStrict([], args);
}
{
    const returnArguments = function () {
            return arguments;
        }, someArgs = returnArguments('a'), sameArgs = returnArguments('a'), diffArgs = returnArguments('b');
    notUtilIsDeepStrict(someArgs, ['a']), notUtilIsDeepStrict(someArgs, { '0': 'a' }), notUtilIsDeepStrict(someArgs, diffArgs), utilIsDeepStrict(someArgs, sameArgs);
}
{
    const values = [
        0x905 * 0x1 + 0x1126 + -0x19b0,
        Infinity,
        0x3 * 0x7c6 + -0x3 * 0x7bd + 0x1 * -0x1b,
        null,
        undefined,
        ![],
        !![],
        {},
        [],
        () => {
        }
    ];
    utilIsDeepStrict(new Set(values), new Set(values)), utilIsDeepStrict(new Set(values), new Set(values[_0x337539(0xda)]()));
    const mapValues = values[_0x337539(0xdb)](_0x248800 => [
        _0x248800,
        { 'a': 0x5 }
    ]);
    utilIsDeepStrict(new Map(mapValues), new Map(mapValues)), utilIsDeepStrict(new Map(mapValues), new Map(mapValues[_0x337539(0xda)]()));
}
{
    const s1 = new Set(), s2 = new Set();
    s1[_0x337539(0xd9)](0xc53 + 0x1c * 0xaf + -0x1f76), s1['add'](0x3ee * -0x3 + -0x247f * -0x1 + -0x18b3), s2[_0x337539(0xd9)](-0x971 + -0x9d1 + -0x19b * -0xc), s2[_0x337539(0xd9)](0x1 * 0x1777 + -0x3 * -0x32f + -0x2103), utilIsDeepStrict(s1, s2);
}
{
    const m1 = new Map(), m2 = new Map(), obj = {
            'a': 0x5,
            'b': 0x6
        };
    m1[_0x337539(0xdc)](0x116d * -0x2 + -0x24d9 + 0x2 * 0x23da, obj), m1[_0x337539(0xdc)](0x2 * -0x181 + -0x21d6 + 0x24da, 'hi'), m1[_0x337539(0xdc)](-0x6c5 * 0x4 + 0x1 * 0x8f9 + -0x121e * -0x1, [
        -0xe7b * -0x1 + -0xecf + 0x55,
        0xe84 + -0x22ce + 0x362 * 0x6,
        0xcd2 + 0x17b * 0xb + -0x38 * 0x85
    ]), m2[_0x337539(0xdc)](-0x1ec7 * 0x1 + -0x1548 + 0x9 * 0x5c9, 'hi'), m2[_0x337539(0xdc)](-0x1ffc + -0x2f * 0x21 + 0x260c, obj), m2[_0x337539(0xdc)](-0x1505 + -0x36d * -0x3 + 0xac1 * 0x1, [
        0x1cd5 + -0x885 + 0x1 * -0x144f,
        0x21 * 0x4a + 0x11 * 0xb + -0xa43,
        0x1f50 + 0x1509 + -0x3456
    ]), utilIsDeepStrict(m1, m2);
}
{
    const m1 = new Map(), m2 = new Map();
    m1['set'](-0x154e + 0x9d * 0x35 + 0x599 * -0x2, m1), m2[_0x337539(0xdc)](-0x6a6 + 0x1ea3 + -0x17fc, new Map()), notUtilIsDeepStrict(m1, m2);
}
{
    const map1 = new Map([[
                0x1f9 * 0x6 + 0x620 + -0x11f5,
                -0x1 * 0x2b7 + 0x444 * 0x3 + -0xa14
            ]]), map2 = new Map([[
                0x1d * 0xae + -0xd39 * 0x1 + 0x14c * -0x5,
                '1'
            ]]);
    assert['strictEqual'](util[_0x337539(0xd4)](map1, map2), ![]);
}
{
    const s1 = new Set(), s2 = new Set();
    s1['x'] = 0xc63 + 0x43 * 0x6 + -0xdf0, notUtilIsDeepStrict(s1, s2);
    const m1 = new Map(), m2 = new Map();
    m1['x'] = -0x854 + 0xd * -0x2e1 + 0x2dc6, notUtilIsDeepStrict(m1, m2);
}
{
    const s1 = new Set();
    s1['add'](s1);
    const s2 = new Set();
    s2['add'](s2), utilIsDeepStrict(s1, s2);
    const m1 = new Map();
    m1[_0x337539(0xdc)](-0x51 * -0x17 + -0x22db + 0x1b96, m1);
    const m2 = new Map();
    m2[_0x337539(0xdc)](0x1 * -0x22bd + -0x68c * -0x5 + -0x203 * -0x1, m2), utilIsDeepStrict(m1, m2);
    const m3 = new Map();
    m3[_0x337539(0xdc)](m3, 0x54c + -0xa7 * -0x2e + -0x234c);
    const m4 = new Map();
    m4[_0x337539(0xdc)](m4, -0x2e6 * -0x1 + 0x1 * 0x1749 + -0x1a2d), utilIsDeepStrict(m3, m4);
}
utilIsDeepStrict([
    0x9 * 0x243 + 0xe9 * 0x1 + -0x1 * 0x1543,
    ,
    ,
    -0x187d + -0x18b + 0x1a0b
], [
    -0x12a * 0xb + 0x1792 + 0x1d * -0x5f,
    ,
    ,
    -0x240b * 0x1 + 0x19ce + 0xa4 * 0x10
]), notUtilIsDeepStrict([
    0x807 * -0x3 + -0x2065 + 0x387b,
    ,
    ,
    0x4c * 0x6d + -0x12 * -0x5a + 0x26ad * -0x1
], [
    -0x34e * 0x2 + -0x991 + 0x13 * 0xda,
    ,
    ,
    -0x20ed + -0x3 * 0xc85 + -0x1 * -0x467f,
    ,
    ,
]);
{
    const err1 = new Error(_0x337539(0xdd)), err2 = new Error(_0x337539(0xde)), err3 = new TypeError(_0x337539(0xdd));
    notUtilIsDeepStrict(err1, err2, assert[_0x337539(0xdf)]), notUtilIsDeepStrict(err1, err3, assert[_0x337539(0xdf)]), notUtilIsDeepStrict(err1, {}, assert[_0x337539(0xdf)]);
}
assert[_0x337539(0xd3)](util[_0x337539(0xd4)](NaN, NaN), !![]), assert['strictEqual'](util[_0x337539(0xd4)]({ 'a': NaN }, { 'a': NaN }), !![]), assert[_0x337539(0xd3)](util[_0x337539(0xd4)]([
    0x1 * 0x269b + 0x1 * -0x26fa + 0x60,
    -0x2 * -0xbc9 + 0x5 * -0x15f + -0x2f * 0x5b,
    NaN,
    0x1a74 * -0x1 + -0x1ede + 0x3956
], [
    0x873 + 0xbd5 * -0x1 + 0x363,
    0x60 * 0x48 + -0x1bb * 0x4 + -0x1412,
    NaN,
    0x45d + 0x257f + -0x14ec * 0x2
]), !![]);
{
    const boxedString = new String(_0x337539(0xd7)), boxedSymbol = Object(Symbol());
    notUtilIsDeepStrict(new Boolean(!![]), Object(![])), notUtilIsDeepStrict(Object(!![]), new Number(-0x1ca6 + -0xa6 * -0xa + -0x46f * -0x5)), notUtilIsDeepStrict(new Number(-0x1648 + -0x1 * -0x223c + -0xbf2), new Number(-0x22e3 + 0x1b73 * -0x1 + -0x3e57 * -0x1)), notUtilIsDeepStrict(boxedSymbol, Object(Symbol())), notUtilIsDeepStrict(boxedSymbol, {}), utilIsDeepStrict(boxedSymbol, boxedSymbol), utilIsDeepStrict(Object(!![]), Object(!![])), utilIsDeepStrict(Object(-0x879 + -0x90b + 0x1186), Object(0x2 * 0x2f9 + -0x606 + 0x16)), utilIsDeepStrict(boxedString, Object('test')), boxedString[_0x337539(0xe0)] = !![], notUtilIsDeepStrict(boxedString, Object(_0x337539(0xd7))), boxedSymbol[_0x337539(0xe0)] = !![], notUtilIsDeepStrict(boxedSymbol, {}), utilIsDeepStrict(Object(BigInt(-0xdb7 * 0x2 + -0x16db * -0x1 + 0x494)), Object(BigInt(0x22db * -0x1 + 0x1 * -0x2239 + 0x4515))), notUtilIsDeepStrict(Object(BigInt(-0x21 * 0x16 + 0x2 * -0x677 + 0xfc5)), Object(BigInt(0x1e33 + -0x30 * -0x5a + -0x2f11 * 0x1)));
    const booleanish = new Boolean(!![]);
    Object[_0x337539(0xe1)](booleanish, Symbol[_0x337539(0xe2)], { 'value': _0x337539(0xe3) }), Object[_0x337539(0xe4)](booleanish, String[_0x337539(0xe5)]), notUtilIsDeepStrict(booleanish, new String(_0x337539(0xe6)));
    const numberish = new Number(-0x3 * 0x471 + 0x33 * -0x28 + 0x1575);
    Object[_0x337539(0xe1)](numberish, Symbol[_0x337539(0xe2)], { 'value': _0x337539(0xe3) }), Object['setPrototypeOf'](numberish, String[_0x337539(0xe5)]), notUtilIsDeepStrict(numberish, new String('42'));
    const stringish = new String('0');
    Object['defineProperty'](stringish, Symbol[_0x337539(0xe2)], { 'value': _0x337539(0xe7) }), Object[_0x337539(0xe4)](stringish, Number[_0x337539(0xe5)]), notUtilIsDeepStrict(stringish, new Number(-0x24ce + 0xeef + 0xb * 0x1fd));
    const bigintish = new Object(BigInt(-0x924 + -0xaf * 0x13 + 0x1 * 0x164b));
    Object[_0x337539(0xe1)](bigintish, Symbol[_0x337539(0xe2)], { 'value': 'String' }), Object[_0x337539(0xe4)](bigintish, String[_0x337539(0xe5)]), notUtilIsDeepStrict(bigintish, new String('42'));
    const symbolish = new Object(Symbol('fhqwhgads'));
    Object['defineProperty'](symbolish, Symbol[_0x337539(0xe2)], { 'value': _0x337539(0xe3) }), Object[_0x337539(0xe4)](symbolish, String['prototype']), notUtilIsDeepStrict(symbolish, new String(_0x337539(0xe8)));
}
notUtilIsDeepStrict(-0x65 * 0x1 + 0x1787 + -0x1722, -(0x50d * -0x3 + 0x1971 + -0xa4a)), utilIsDeepStrict(-(-0x1 * -0x63c + 0x7f4 + -0xe30), -(0x1f5d + -0x274 * -0xd + 0x3f41 * -0x1));
{
    const symbol1 = Symbol(), obj1 = { [symbol1]: -0x10fc + 0x12ba + -0x1bd }, obj2 = { [symbol1]: 0x1f * -0x12b + 0x178 * 0x13 + 0x84e }, obj3 = { [Symbol()]: 0xc07 + 0x169e + -0x2e3 * 0xc }, obj4 = {};
    Object[_0x337539(0xe1)](obj2, Symbol(), { 'value': 0x1 }), Object['defineProperty'](obj4, symbol1, { 'value': 0x1 }), notUtilIsDeepStrict(obj1, obj3), utilIsDeepStrict(obj1, obj2), notUtilIsDeepStrict(obj1, obj4);
    const a = new Uint8Array(0xa6a + 0x1 * -0x129 + -0x93d), b = new Uint8Array(0xeb1 + 0x19 * -0x189 + 0x17b4);
    a[symbol1] = !![], b[symbol1] = ![], notUtilIsDeepStrict(a, b), b[symbol1] = !![], utilIsDeepStrict(a, b);
    const boxedStringA = new String(_0x337539(0xd7)), boxedStringB = new String(_0x337539(0xd7));
    boxedStringA[symbol1] = !![], notUtilIsDeepStrict(boxedStringA, boxedStringB), boxedStringA[symbol1] = !![], utilIsDeepStrict(a, b);
}
