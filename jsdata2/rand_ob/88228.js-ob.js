const _0x4a31 = [
    '@import\x20\x22other.css\x22;\x20body\x20{\x20color:\x20\x22blue\x22;\x20}',
    'test.css',
    'import',
    '@import\x20\x22custom.css\x22;\x20body\x20{\x20color:\x20\x22red\x22;\x20}',
    'jAOvr',
    'buZJr',
    'mergeCssAsts',
    'name',
    'IChnw',
    'DPHiK',
    'minifier-css\x20-\x20hoist\x20imports\x20after\x20comments\x20from\x20merged\x20CSS\x20AST\x27s',
    'comment',
    'ZjVcZ',
    'NhoFY',
    'OwVDt',
    'Fzagc',
    'QiLvb',
    '877807hqwfeg',
    '1059361ZxGpCz',
    '1NgTAKj',
    '319343YmvAAs',
    '1385SIhnIE',
    '531IonYFa',
    '779616jUubxA',
    '1BapCUR',
    '1574161gRJwNy',
    '4QZXOBy',
    '709666maIZTv',
    'add',
    'minifier-css\x20-\x20CSS\x20can\x20be\x20parsed\x20properly\x20into\x20an\x20AST',
    'root',
    'body',
    '\x22red\x22',
    'type',
    'LByof',
    'nodes',
    'length',
    'rule',
    'equal',
    'selector',
    'value',
    'AvOzv',
    'minifier-css\x20-\x20CSS\x20AST\x20can\x20be\x20converted\x20back\x20into\x20a\x20string',
    'body\x20{\x20color:\x20\x22red\x22}',
    'stringifyCss',
    'isNotNull',
    'minifier-css\x20-\x20simple\x20CSS\x20minification',
    'a\x20\x09\x0a{\x20color:\x20red\x20}\x20\x0a',
    'a\x20\x09\x0a{\x20color:\x20red;\x20margin:\x201;\x20}\x20\x0a',
    'a{color:red;margin:1}',
    'a\x20,\x20p\x20\x09\x0a{\x20color:\x20red;\x20}\x20\x0a',
    'a,p{color:red}',
    'removing\x20empty\x20rules',
    '*.my-class\x20{\x20color:\x20#fff;\x20}',
    'removing\x20universal\x20selector',
    'p+.my-class{color:#fff}',
    'removing\x20optional\x20whitespace\x20around\x20\x22+\x22\x20in\x20selector',
    'a\x20{\x0a\x20\x20\x20\x20font:12px\x20\x27Helvetica\x27,\x22Arial\x22,\x27Nautica\x27;\x0a\x20\x20\x20\x20background:url(\x22/some/nice/picture.png\x22);\x0a}',
    'removing\x20quotes\x20in\x20font\x20and\x20url\x20(if\x20possible)',
    'a{color:red}',
    'minifyCss',
    'UlrsB',
    'PrKjy',
    'only\x20last\x20one\x20loses\x20semicolon',
    'LDbsD',
    'EIcGz',
    'more\x20semicolons\x20than\x20needed',
    'FYMkN',
    'multiple\x20selectors',
    'bLBla',
    'PLyRp',
    '.my-class{color:#fff}',
    'bUumD',
    'p>.my-class{color:#fff}',
    'henYc',
    'lMLoP',
    'uvwcM',
    'qKEEF',
    'rNMYS',
    'gpVTT',
    'LOxUI',
    'qoBgR',
    'minifier-css\x20-\x20Multiple\x20CSS\x20AST\x27s\x20can\x20be\x20merged\x20into\x20a\x20single\x20CSS\x20AST',
    'body\x20{\x20color:\x20\x22blue\x22;\x20}',
    'test2.css',
    'ILJeg',
    'yVCZW',
    'parseCss',
    'fFbvp',
    'map',
    'sources',
    'minifier-css\x20-\x20hoist\x20imports\x20from\x20merged\x20CSS\x20AST\x27s'
];
const _0x43460e = _0x1f88;
function _0x1f88(_0x1bd333, _0x2919f0) {
    return _0x1f88 = function (_0x460b7a, _0x1b9da8) {
        _0x460b7a = _0x460b7a - (-0x2 * 0xb5d + 0x163a + 0xe * 0x1a);
        let _0x5793a6 = _0x4a31[_0x460b7a];
        return _0x5793a6;
    }, _0x1f88(_0x1bd333, _0x2919f0);
}
(function (_0x2f8a14, _0x515f9e) {
    const _0x30c688 = _0x1f88;
    while (!![]) {
        try {
            const _0x330fd6 = parseInt(_0x30c688(0xec)) + -parseInt(_0x30c688(0xed)) * parseInt(_0x30c688(0xee)) + -parseInt(_0x30c688(0xef)) + -parseInt(_0x30c688(0xf0)) * parseInt(_0x30c688(0xf1)) + parseInt(_0x30c688(0xf2)) + parseInt(_0x30c688(0xf3)) * -parseInt(_0x30c688(0xf4)) + parseInt(_0x30c688(0xf5)) * parseInt(_0x30c688(0xf6));
            if (_0x330fd6 === _0x515f9e)
                break;
            else
                _0x2f8a14['push'](_0x2f8a14['shift']());
        } catch (_0x2d5f0c) {
            _0x2f8a14['push'](_0x2f8a14['shift']());
        }
    }
}(_0x4a31, 0x2e9f1 * -0x2 + -0x2 * 0x8025b + 0x222c03 * 0x1));
import { CssTools } from './minifier';
Tinytest[_0x43460e(0xf7)](_0x43460e(0xf8), _0x191cd3 => {
    const _0x265e45 = _0x43460e, _0x368137 = {
            'LByof': _0x265e45(0xf9),
            'hiHZe': _0x265e45(0xfa),
            'IfuJh': 'decl',
            'AvOzv': _0x265e45(0xfb)
        }, _0xfc414d = CssTools['parseCss']('body\x20{\x20color:\x20\x22red\x22}');
    _0x191cd3['equal'](_0xfc414d[_0x265e45(0xfc)], _0x368137[_0x265e45(0xfd)]), _0x191cd3['equal'](_0xfc414d[_0x265e45(0xfe)][_0x265e45(0xff)], 0x1 * -0x13f7 + -0x24bc * -0x1 + -0x2 * 0x862);
    const _0x265fcf = _0xfc414d[_0x265e45(0xfe)][0x1 * -0x269e + 0x9b6 + 0x1ce8];
    _0x191cd3['equal'](_0x265fcf[_0x265e45(0xfc)], _0x265e45(0x100)), _0x191cd3[_0x265e45(0x101)](_0x265fcf[_0x265e45(0x102)], _0x368137['hiHZe']), _0x191cd3[_0x265e45(0x101)](_0x265fcf[_0x265e45(0xfe)][_0x265e45(0xff)], 0x6ff + -0x17 * -0xb5 + -0x1741);
    const _0x75fcb2 = _0x265fcf[_0x265e45(0xfe)][-0xf43 * 0x1 + -0x5 * 0x419 + 0x40 * 0x8f];
    _0x191cd3['equal'](_0x75fcb2[_0x265e45(0xfc)], _0x368137['IfuJh']), _0x191cd3[_0x265e45(0x101)](_0x75fcb2['prop'], 'color'), _0x191cd3[_0x265e45(0x101)](_0x75fcb2[_0x265e45(0x103)], _0x368137[_0x265e45(0x104)]);
}), Tinytest[_0x43460e(0xf7)](_0x43460e(0x105), _0x13fc32 => {
    const _0x482d99 = _0x43460e, _0x3011bb = _0x482d99(0x106), _0x41d2dd = CssTools['parseCss'](_0x3011bb), _0x49c517 = CssTools[_0x482d99(0x107)](_0x41d2dd, { 'sourcemap': !![] });
    _0x13fc32[_0x482d99(0x101)](_0x3011bb, _0x49c517['code']), _0x13fc32[_0x482d99(0x108)](_0x49c517['map']);
}), Tinytest[_0x43460e(0xf7)](_0x43460e(0x109), _0x5e7821 => {
    const _0x52a3a7 = _0x43460e, _0x4d54e4 = {
            'UlrsB': _0x52a3a7(0x10a),
            'RLNTE': 'whitespace\x20check',
            'XCmjb': _0x52a3a7(0x10b),
            'PrKjy': _0x52a3a7(0x10c),
            'LDbsD': function (_0x2b5cef, _0x591cdb, _0x158344, _0xb2d578) {
                return _0x2b5cef(_0x591cdb, _0x158344, _0xb2d578);
            },
            'EIcGz': 'a\x20\x09\x0a{\x20color:\x20red;;;\x20margin:\x201;;;\x20}\x20\x0a',
            'lEoeu': _0x52a3a7(0x10d),
            'FYMkN': _0x52a3a7(0x10e),
            'xwORR': 'body\x20{}',
            'bLBla': _0x52a3a7(0x10f),
            'PLyRp': _0x52a3a7(0x110),
            'ByWqL': _0x52a3a7(0x111),
            'bUumD': 'p\x20>\x20*.my-class\x20{\x20color:\x20#fff;\x20}',
            'henYc': 'removing\x20optional\x20whitespace\x20around\x20\x22>\x22\x20in\x20selector',
            'lMLoP': _0x52a3a7(0x112),
            'uvwcM': _0x52a3a7(0x113),
            'qKEEF': _0x52a3a7(0x114),
            'rNMYS': _0x52a3a7(0x115),
            'gpVTT': '/*\x20no\x20comments\x20*/\x20a\x20{\x20color:\x20red;\x20}',
            'LOxUI': _0x52a3a7(0x116),
            'qoBgR': 'remove\x20comments'
        }, _0x567dbc = (_0xd94f04, _0x47ffdb, _0x43c8ce) => {
            const _0x30815c = _0x52a3a7;
            _0x5e7821[_0x30815c(0x101)](CssTools[_0x30815c(0x117)](_0xd94f04)[0x4 * 0x3e5 + -0x12 * -0x165 + 0x52 * -0x7f], _0x47ffdb, _0x43c8ce);
        };
    _0x567dbc(_0x4d54e4[_0x52a3a7(0x118)], _0x52a3a7(0x116), _0x4d54e4['RLNTE']), _0x567dbc(_0x4d54e4['XCmjb'], _0x4d54e4[_0x52a3a7(0x119)], _0x52a3a7(0x11a)), _0x4d54e4[_0x52a3a7(0x11b)](_0x567dbc, _0x4d54e4[_0x52a3a7(0x11c)], _0x4d54e4['PrKjy'], _0x52a3a7(0x11d)), _0x4d54e4[_0x52a3a7(0x11b)](_0x567dbc, _0x4d54e4['lEoeu'], _0x4d54e4[_0x52a3a7(0x11e)], _0x52a3a7(0x11f)), _0x567dbc(_0x4d54e4['xwORR'], '', _0x4d54e4[_0x52a3a7(0x120)]), _0x567dbc(_0x4d54e4[_0x52a3a7(0x121)], _0x52a3a7(0x122), _0x4d54e4['ByWqL']), _0x4d54e4[_0x52a3a7(0x11b)](_0x567dbc, _0x4d54e4[_0x52a3a7(0x123)], _0x52a3a7(0x124), _0x4d54e4[_0x52a3a7(0x125)]), _0x4d54e4['LDbsD'](_0x567dbc, 'p\x20+\x20\x20*.my-class\x20{\x20color:\x20#fff;\x20}', _0x4d54e4[_0x52a3a7(0x126)], _0x4d54e4[_0x52a3a7(0x127)]), _0x4d54e4['LDbsD'](_0x567dbc, _0x4d54e4[_0x52a3a7(0x128)], 'a{font:12px\x20Helvetica,Arial,Nautica;background:url(/some/nice/picture.png)}', _0x4d54e4[_0x52a3a7(0x129)]), _0x567dbc(_0x4d54e4[_0x52a3a7(0x12a)], _0x4d54e4[_0x52a3a7(0x12b)], _0x4d54e4[_0x52a3a7(0x12c)]);
}), Tinytest[_0x43460e(0xf7)](_0x43460e(0x12d), _0x11def7 => {
    const _0x42cc08 = _0x43460e, _0x4c3cdd = {
            'yfuci': '@import\x20\x22custom.css\x22;\x20body\x20{\x20color:\x20\x22red\x22;\x20}',
            'ILJeg': _0x42cc08(0x12e),
            'yVCZW': 'test.css',
            'fFbvp': _0x42cc08(0x12f)
        }, _0x3e12b9 = _0x4c3cdd['yfuci'], _0x2e2756 = _0x4c3cdd[_0x42cc08(0x130)], _0x1d32aa = CssTools['parseCss'](_0x3e12b9, { 'from': _0x4c3cdd[_0x42cc08(0x131)] }), _0x154a1d = CssTools[_0x42cc08(0x132)](_0x2e2756, { 'from': _0x4c3cdd[_0x42cc08(0x133)] }), _0x242860 = CssTools['mergeCssAsts']([
            _0x1d32aa,
            _0x154a1d
        ]), _0x1bf959 = CssTools[_0x42cc08(0x107)](_0x242860, {
            'sourcemap': !![],
            'inputSourcemaps': ![]
        });
    _0x11def7[_0x42cc08(0x101)](_0x242860[_0x42cc08(0xfe)][_0x42cc08(0xff)], -0x506 + -0xdf3 + 0x12fc), _0x11def7[_0x42cc08(0x101)](_0x1bf959[_0x42cc08(0x134)]['sources'][_0x42cc08(0xff)], 0x1 * -0x199d + 0x1b1c + -0x17d), _0x11def7[_0x42cc08(0x101)](_0x1bf959['map'][_0x42cc08(0x135)][-0x7 * -0x121 + 0x209d + -0x2884], _0x4c3cdd[_0x42cc08(0x131)]);
}), Tinytest['add'](_0x43460e(0x136), _0x386570 => {
    const _0x4288c2 = _0x43460e, _0x2dfab4 = {
            'jAOvr': _0x4288c2(0x137),
            'wrsWo': _0x4288c2(0x138),
            'buZJr': _0x4288c2(0x12f),
            'IChnw': _0x4288c2(0x139),
            'DPHiK': _0x4288c2(0x100)
        }, _0x40c0c8 = _0x4288c2(0x13a), _0x42646f = _0x2dfab4[_0x4288c2(0x13b)], _0x58f411 = CssTools['parseCss'](_0x40c0c8, { 'from': _0x2dfab4['wrsWo'] }), _0x38cf9a = CssTools[_0x4288c2(0x132)](_0x42646f, { 'from': _0x2dfab4[_0x4288c2(0x13c)] }), _0x25d4a7 = CssTools[_0x4288c2(0x13d)]([
            _0x58f411,
            _0x38cf9a
        ]), _0x1d86e4 = CssTools[_0x4288c2(0x107)](_0x25d4a7, {
            'sourcemap': !![],
            'inputSourcemaps': ![]
        });
    _0x386570[_0x4288c2(0x101)](_0x25d4a7['nodes'][_0x4288c2(0xff)], 0x12 * -0xf + -0xf6 + 0x208), _0x386570[_0x4288c2(0x101)](_0x25d4a7[_0x4288c2(0xfe)][-0x2378 + 0x67c + 0x1cfc][_0x4288c2(0x13e)], _0x2dfab4[_0x4288c2(0x13f)]), _0x386570[_0x4288c2(0x101)](_0x25d4a7[_0x4288c2(0xfe)][-0x412 * 0x9 + 0x503 * 0x7 + -0x1 * -0x18e][_0x4288c2(0x13e)], _0x4288c2(0x139)), _0x386570[_0x4288c2(0x101)](_0x25d4a7[_0x4288c2(0xfe)][0x1fc3 + 0xccf + -0x2c90][_0x4288c2(0xfc)], _0x2dfab4[_0x4288c2(0x140)]), _0x386570[_0x4288c2(0x101)](_0x25d4a7[_0x4288c2(0xfe)][-0x1acd + -0x731 + -0x1 * -0x2201]['type'], _0x2dfab4['DPHiK']), _0x386570[_0x4288c2(0x101)](_0x1d86e4['map']['sources'][_0x4288c2(0xff)], -0x4a5 * 0x1 + -0xef5 + -0x1 * -0x139c), _0x386570[_0x4288c2(0x101)](_0x1d86e4['map'][_0x4288c2(0x135)][0x1 * 0x6bc + -0x618 + -0xa4], _0x4288c2(0x138));
}), Tinytest[_0x43460e(0xf7)](_0x43460e(0x141), _0x52f94b => {
    const _0x5231b2 = _0x43460e, _0xbfa7ce = {
            'VRsUg': '@import\x20\x22custom.css\x22;\x20body\x20{\x20color:\x20\x22red\x22;\x20}',
            'ZjVcZ': '/*\x20comment\x20*/\x20@import\x20\x22other.css\x22;\x20body\x20{\x20color:\x20\x22blue\x22;\x20}',
            'NhoFY': _0x5231b2(0x12f),
            'OwVDt': _0x5231b2(0x142),
            'Fzagc': 'rule',
            'QiLvb': 'test.css'
        }, _0x85c0c9 = _0xbfa7ce['VRsUg'], _0x2b1af5 = _0xbfa7ce[_0x5231b2(0x143)], _0xc010fb = CssTools[_0x5231b2(0x132)](_0x85c0c9, { 'from': _0x5231b2(0x138) }), _0x4b40b5 = CssTools[_0x5231b2(0x132)](_0x2b1af5, { 'from': _0xbfa7ce[_0x5231b2(0x144)] }), _0x4adde0 = CssTools['mergeCssAsts']([
            _0xc010fb,
            _0x4b40b5
        ]), _0x42833b = CssTools[_0x5231b2(0x107)](_0x4adde0, {
            'sourcemap': !![],
            'inputSourcemaps': ![]
        });
    _0x52f94b[_0x5231b2(0x101)](_0x4adde0[_0x5231b2(0xfe)][_0x5231b2(0xff)], 0x122e * 0x2 + 0x10df + -0x116 * 0x31), _0x52f94b[_0x5231b2(0x101)](_0x4adde0['nodes'][-0x1 * 0x1454 + -0x24c3 + 0x3917][_0x5231b2(0x13e)], _0x5231b2(0x139)), _0x52f94b[_0x5231b2(0x101)](_0x4adde0[_0x5231b2(0xfe)][-0xd67 + 0x1bf * 0x9 + -0x24f][_0x5231b2(0xfc)], _0xbfa7ce[_0x5231b2(0x145)]), _0x52f94b[_0x5231b2(0x101)](_0x4adde0[_0x5231b2(0xfe)][0x1 * -0x54c + -0x1824 + 0x1d72][_0x5231b2(0x13e)], 'import'), _0x52f94b[_0x5231b2(0x101)](_0x4adde0['nodes'][-0x3 * 0x4bc + 0x2032 + -0x11fb][_0x5231b2(0xfc)], _0xbfa7ce['Fzagc']), _0x52f94b[_0x5231b2(0x101)](_0x4adde0['nodes'][0x1 * 0x17ae + -0xee + 0x1 * -0x16bc]['type'], _0xbfa7ce[_0x5231b2(0x146)]), _0x52f94b['equal'](_0x42833b[_0x5231b2(0x134)][_0x5231b2(0x135)][_0x5231b2(0xff)], -0x24ce + -0x1 * 0xb99 + 0x3069), _0x52f94b[_0x5231b2(0x101)](_0x42833b[_0x5231b2(0x134)][_0x5231b2(0x135)][-0x76 * 0x4 + 0x1 * -0x1dc + -0x2 * -0x1da], _0xbfa7ce[_0x5231b2(0x147)]);
});
